(function(){class e extends THREE.Pass{constructor(e=.96){super(),void 0===THREE.AfterimageShader&&console.error("THREE.AfterimagePass relies on THREE.AfterimageShader"),this.shader=THREE.AfterimageShader,this.uniforms=THREE.UniformsUtils.clone(this.shader.uniforms),this.uniforms["damp"].value=e,this.textureComp=new THREE.WebGLRenderTarget(window.innerWidth,window.innerHeight,{minFilter:THREE.LinearFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat}),this.textureOld=new THREE.WebGLRenderTarget(window.innerWidth,window.innerHeight,{minFilter:THREE.LinearFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat}),this.shaderMaterial=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:this.shader.vertexShader,fragmentShader:this.shader.fragmentShader}),this.compFsQuad=new THREE.FullScreenQuad(this.shaderMaterial);const t=new THREE.MeshBasicMaterial;this.copyFsQuad=new THREE.FullScreenQuad(t)}render(e,t,r){this.uniforms["tOld"].value=this.textureOld.texture,this.uniforms["tNew"].value=r.texture,e.setRenderTarget(this.textureComp),this.compFsQuad.render(e),this.copyFsQuad.material.map=this.textureComp.texture,this.renderToScreen?(e.setRenderTarget(null),this.copyFsQuad.render(e)):(e.setRenderTarget(t),this.clear&&e.clear(),this.copyFsQuad.render(e));const i=this.textureOld;this.textureOld=this.textureComp,this.textureComp=i}setSize(e,t){this.textureComp.setSize(e,t),this.textureOld.setSize(e,t)}}THREE.AfterimagePass=e})();