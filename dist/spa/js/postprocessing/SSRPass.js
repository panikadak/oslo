(function(){class e extends THREE.Pass{constructor({renderer:e,scene:t,camera:r,width:s,height:i,selects:a,bouncing:n=!1,groundReflector:l}){super(),this.width=void 0!==s?s:512,this.height=void 0!==i?i:512,this.clear=!0,this.renderer=e,this.scene=t,this.camera=r,this.groundReflector=l,this.opacity=THREE.SSRShader.uniforms.opacity.value,this.output=0,this.maxDistance=THREE.SSRShader.uniforms.maxDistance.value,this.thickness=THREE.SSRShader.uniforms.thickness.value,this.tempColor=new THREE.Color,this._selects=a,this.selective=Array.isArray(this._selects),Object.defineProperty(this,"selects",{get(){return this._selects},set(e){this._selects!==e&&(this._selects=e,Array.isArray(e)?(this.selective=!0,this.ssrMaterial.defines.SELECTIVE=!0,this.ssrMaterial.needsUpdate=!0):(this.selective=!1,this.ssrMaterial.defines.SELECTIVE=!1,this.ssrMaterial.needsUpdate=!0))}}),this._bouncing=n,Object.defineProperty(this,"bouncing",{get(){return this._bouncing},set(e){this._bouncing!==e&&(this._bouncing=e,this.ssrMaterial.uniforms["tDiffuse"].value=e?this.prevRenderTarget.texture:this.beautyRenderTarget.texture)}}),this.blur=!0,this._distanceAttenuation=THREE.SSRShader.defines.DISTANCE_ATTENUATION,Object.defineProperty(this,"distanceAttenuation",{get(){return this._distanceAttenuation},set(e){this._distanceAttenuation!==e&&(this._distanceAttenuation=e,this.ssrMaterial.defines.DISTANCE_ATTENUATION=e,this.ssrMaterial.needsUpdate=!0)}}),this._fresnel=THREE.SSRShader.defines.FRESNEL,Object.defineProperty(this,"fresnel",{get(){return this._fresnel},set(e){this._fresnel!==e&&(this._fresnel=e,this.ssrMaterial.defines.FRESNEL=e,this.ssrMaterial.needsUpdate=!0)}}),this._infiniteThick=THREE.SSRShader.defines.INFINITE_THICK,Object.defineProperty(this,"infiniteThick",{get(){return this._infiniteThick},set(e){this._infiniteThick!==e&&(this._infiniteThick=e,this.ssrMaterial.defines.INFINITE_THICK=e,this.ssrMaterial.needsUpdate=!0)}});const h=new THREE.DepthTexture;h.type=THREE.UnsignedShortType,h.minFilter=THREE.NearestFilter,h.magFilter=THREE.NearestFilter,this.beautyRenderTarget=new THREE.WebGLRenderTarget(this.width,this.height,{minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat,depthTexture:h,depthBuffer:!0}),this.prevRenderTarget=new THREE.WebGLRenderTarget(this.width,this.height,{minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat}),this.normalRenderTarget=new THREE.WebGLRenderTarget(this.width,this.height,{minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat,type:THREE.HalfFloatType}),this.metalnessRenderTarget=new THREE.WebGLRenderTarget(this.width,this.height,{minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat}),this.ssrRenderTarget=new THREE.WebGLRenderTarget(this.width,this.height,{minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat}),this.blurRenderTarget=this.ssrRenderTarget.clone(),this.blurRenderTarget2=this.ssrRenderTarget.clone(),void 0===THREE.SSRShader&&console.error("THREE.SSRPass: The pass relies on THREE.SSRShader."),this.ssrMaterial=new THREE.ShaderMaterial({defines:Object.assign({},THREE.SSRShader.defines,{MAX_STEP:Math.sqrt(this.width*this.width+this.height*this.height)}),uniforms:THREE.UniformsUtils.clone(THREE.SSRShader.uniforms),vertexShader:THREE.SSRShader.vertexShader,fragmentShader:THREE.SSRShader.fragmentShader,blending:THREE.NoBlending}),this.ssrMaterial.uniforms["tDiffuse"].value=this.beautyRenderTarget.texture,this.ssrMaterial.uniforms["tNormal"].value=this.normalRenderTarget.texture,this.ssrMaterial.defines.SELECTIVE=this.selective,this.ssrMaterial.needsUpdate=!0,this.ssrMaterial.uniforms["tMetalness"].value=this.metalnessRenderTarget.texture,this.ssrMaterial.uniforms["tDepth"].value=this.beautyRenderTarget.depthTexture,this.ssrMaterial.uniforms["cameraNear"].value=this.camera.near,this.ssrMaterial.uniforms["cameraFar"].value=this.camera.far,this.ssrMaterial.uniforms["thickness"].value=this.thickness,this.ssrMaterial.uniforms["resolution"].value.set(this.width,this.height),this.ssrMaterial.uniforms["cameraProjectionMatrix"].value.copy(this.camera.projectionMatrix),this.ssrMaterial.uniforms["cameraInverseProjectionMatrix"].value.copy(this.camera.projectionMatrixInverse),this.normalMaterial=new THREE.MeshNormalMaterial,this.normalMaterial.blending=THREE.NoBlending,this.metalnessOnMaterial=new THREE.MeshBasicMaterial({color:"white"}),this.metalnessOffMaterial=new THREE.MeshBasicMaterial({color:"black"}),this.blurMaterial=new THREE.ShaderMaterial({defines:Object.assign({},THREE.SSRBlurShader.defines),uniforms:THREE.UniformsUtils.clone(THREE.SSRBlurShader.uniforms),vertexShader:THREE.SSRBlurShader.vertexShader,fragmentShader:THREE.SSRBlurShader.fragmentShader}),this.blurMaterial.uniforms["tDiffuse"].value=this.ssrRenderTarget.texture,this.blurMaterial.uniforms["resolution"].value.set(this.width,this.height),this.blurMaterial2=new THREE.ShaderMaterial({defines:Object.assign({},THREE.SSRBlurShader.defines),uniforms:THREE.UniformsUtils.clone(THREE.SSRBlurShader.uniforms),vertexShader:THREE.SSRBlurShader.vertexShader,fragmentShader:THREE.SSRBlurShader.fragmentShader}),this.blurMaterial2.uniforms["tDiffuse"].value=this.blurRenderTarget.texture,this.blurMaterial2.uniforms["resolution"].value.set(this.width,this.height),this.depthRenderMaterial=new THREE.ShaderMaterial({defines:Object.assign({},THREE.SSRDepthShader.defines),uniforms:THREE.UniformsUtils.clone(THREE.SSRDepthShader.uniforms),vertexShader:THREE.SSRDepthShader.vertexShader,fragmentShader:THREE.SSRDepthShader.fragmentShader,blending:THREE.NoBlending}),this.depthRenderMaterial.uniforms["tDepth"].value=this.beautyRenderTarget.depthTexture,this.depthRenderMaterial.uniforms["cameraNear"].value=this.camera.near,this.depthRenderMaterial.uniforms["cameraFar"].value=this.camera.far,this.copyMaterial=new THREE.ShaderMaterial({uniforms:THREE.UniformsUtils.clone(THREE.CopyShader.uniforms),vertexShader:THREE.CopyShader.vertexShader,fragmentShader:THREE.CopyShader.fragmentShader,transparent:!0,depthTest:!1,depthWrite:!1,blendSrc:THREE.SrcAlphaFactor,blendDst:THREE.OneMinusSrcAlphaFactor,blendEquation:THREE.AddEquation,blendSrcAlpha:THREE.SrcAlphaFactor,blendDstAlpha:THREE.OneMinusSrcAlphaFactor,blendEquationAlpha:THREE.AddEquation}),this.fsQuad=new THREE.FullScreenQuad(null),this.originalClearColor=new THREE.Color}dispose(){this.beautyRenderTarget.dispose(),this.prevRenderTarget.dispose(),this.normalRenderTarget.dispose(),this.metalnessRenderTarget.dispose(),this.ssrRenderTarget.dispose(),this.blurRenderTarget.dispose(),this.blurRenderTarget2.dispose(),this.normalMaterial.dispose(),this.metalnessOnMaterial.dispose(),this.metalnessOffMaterial.dispose(),this.blurMaterial.dispose(),this.blurMaterial2.dispose(),this.copyMaterial.dispose(),this.depthRenderMaterial.dispose(),this.fsQuad.dispose()}render(t,r){switch(t.setRenderTarget(this.beautyRenderTarget),t.clear(),this.groundReflector&&(this.groundReflector.visible=!1,this.groundReflector.doRender(this.renderer,this.scene,this.camera),this.groundReflector.visible=!0),t.render(this.scene,this.camera),this.groundReflector&&(this.groundReflector.visible=!1),this.renderOverride(t,this.normalMaterial,this.normalRenderTarget,0,0),this.selective&&this.renderMetalness(t,this.metalnessOnMaterial,this.metalnessRenderTarget,0,0),this.ssrMaterial.uniforms["opacity"].value=this.opacity,this.ssrMaterial.uniforms["maxDistance"].value=this.maxDistance,this.ssrMaterial.uniforms["thickness"].value=this.thickness,this.renderPass(t,this.ssrMaterial,this.ssrRenderTarget),this.blur&&(this.renderPass(t,this.blurMaterial,this.blurRenderTarget),this.renderPass(t,this.blurMaterial2,this.blurRenderTarget2)),this.output){case e.OUTPUT.Default:this.bouncing?(this.copyMaterial.uniforms["tDiffuse"].value=this.beautyRenderTarget.texture,this.copyMaterial.blending=THREE.NoBlending,this.renderPass(t,this.copyMaterial,this.prevRenderTarget),this.blur?this.copyMaterial.uniforms["tDiffuse"].value=this.blurRenderTarget2.texture:this.copyMaterial.uniforms["tDiffuse"].value=this.ssrRenderTarget.texture,this.copyMaterial.blending=THREE.NormalBlending,this.renderPass(t,this.copyMaterial,this.prevRenderTarget),this.copyMaterial.uniforms["tDiffuse"].value=this.prevRenderTarget.texture,this.copyMaterial.blending=THREE.NoBlending,this.renderPass(t,this.copyMaterial,this.renderToScreen?null:r)):(this.copyMaterial.uniforms["tDiffuse"].value=this.beautyRenderTarget.texture,this.copyMaterial.blending=THREE.NoBlending,this.renderPass(t,this.copyMaterial,this.renderToScreen?null:r),this.blur?this.copyMaterial.uniforms["tDiffuse"].value=this.blurRenderTarget2.texture:this.copyMaterial.uniforms["tDiffuse"].value=this.ssrRenderTarget.texture,this.copyMaterial.blending=THREE.NormalBlending,this.renderPass(t,this.copyMaterial,this.renderToScreen?null:r));break;case e.OUTPUT.SSR:this.blur?this.copyMaterial.uniforms["tDiffuse"].value=this.blurRenderTarget2.texture:this.copyMaterial.uniforms["tDiffuse"].value=this.ssrRenderTarget.texture,this.copyMaterial.blending=THREE.NoBlending,this.renderPass(t,this.copyMaterial,this.renderToScreen?null:r),this.bouncing&&(this.blur?this.copyMaterial.uniforms["tDiffuse"].value=this.blurRenderTarget2.texture:this.copyMaterial.uniforms["tDiffuse"].value=this.beautyRenderTarget.texture,this.copyMaterial.blending=THREE.NoBlending,this.renderPass(t,this.copyMaterial,this.prevRenderTarget),this.copyMaterial.uniforms["tDiffuse"].value=this.ssrRenderTarget.texture,this.copyMaterial.blending=THREE.NormalBlending,this.renderPass(t,this.copyMaterial,this.prevRenderTarget));break;case e.OUTPUT.Beauty:this.copyMaterial.uniforms["tDiffuse"].value=this.beautyRenderTarget.texture,this.copyMaterial.blending=THREE.NoBlending,this.renderPass(t,this.copyMaterial,this.renderToScreen?null:r);break;case e.OUTPUT.Depth:this.renderPass(t,this.depthRenderMaterial,this.renderToScreen?null:r);break;case e.OUTPUT.Normal:this.copyMaterial.uniforms["tDiffuse"].value=this.normalRenderTarget.texture,this.copyMaterial.blending=THREE.NoBlending,this.renderPass(t,this.copyMaterial,this.renderToScreen?null:r);break;case e.OUTPUT.Metalness:this.copyMaterial.uniforms["tDiffuse"].value=this.metalnessRenderTarget.texture,this.copyMaterial.blending=THREE.NoBlending,this.renderPass(t,this.copyMaterial,this.renderToScreen?null:r);break;default:console.warn("THREE.SSRPass: Unknown output type.")}}renderPass(e,t,r,s,i){this.originalClearColor.copy(e.getClearColor(this.tempColor));const a=e.getClearAlpha(this.tempColor),n=e.autoClear;e.setRenderTarget(r),e.autoClear=!1,void 0!==s&&null!==s&&(e.setClearColor(s),e.setClearAlpha(i||0),e.clear()),this.fsQuad.material=t,this.fsQuad.render(e),e.autoClear=n,e.setClearColor(this.originalClearColor),e.setClearAlpha(a)}renderOverride(e,t,r,s,i){this.originalClearColor.copy(e.getClearColor(this.tempColor));const a=e.getClearAlpha(this.tempColor),n=e.autoClear;e.setRenderTarget(r),e.autoClear=!1,s=t.clearColor||s,i=t.clearAlpha||i,void 0!==s&&null!==s&&(e.setClearColor(s),e.setClearAlpha(i||0),e.clear()),this.scene.overrideMaterial=t,e.render(this.scene,this.camera),this.scene.overrideMaterial=null,e.autoClear=n,e.setClearColor(this.originalClearColor),e.setClearAlpha(a)}renderMetalness(e,t,r,s,i){this.originalClearColor.copy(e.getClearColor(this.tempColor));const a=e.getClearAlpha(this.tempColor),n=e.autoClear;e.setRenderTarget(r),e.autoClear=!1,s=t.clearColor||s,i=t.clearAlpha||i,void 0!==s&&null!==s&&(e.setClearColor(s),e.setClearAlpha(i||0),e.clear()),this.scene.traverseVisible((e=>{e._SSRPassBackupMaterial=e.material,this._selects.includes(e)?e.material=this.metalnessOnMaterial:e.material=this.metalnessOffMaterial})),e.render(this.scene,this.camera),this.scene.traverseVisible((e=>{e.material=e._SSRPassBackupMaterial})),e.autoClear=n,e.setClearColor(this.originalClearColor),e.setClearAlpha(a)}setSize(e,t){this.width=e,this.height=t,this.ssrMaterial.defines.MAX_STEP=Math.sqrt(e*e+t*t),this.ssrMaterial.needsUpdate=!0,this.beautyRenderTarget.setSize(e,t),this.prevRenderTarget.setSize(e,t),this.ssrRenderTarget.setSize(e,t),this.normalRenderTarget.setSize(e,t),this.metalnessRenderTarget.setSize(e,t),this.blurRenderTarget.setSize(e,t),this.blurRenderTarget2.setSize(e,t),this.ssrMaterial.uniforms["resolution"].value.set(e,t),this.ssrMaterial.uniforms["cameraProjectionMatrix"].value.copy(this.camera.projectionMatrix),this.ssrMaterial.uniforms["cameraInverseProjectionMatrix"].value.copy(this.camera.projectionMatrixInverse),this.blurMaterial.uniforms["resolution"].value.set(e,t),this.blurMaterial2.uniforms["resolution"].value.set(e,t)}}e.OUTPUT={Default:0,SSR:1,Beauty:3,Depth:4,Normal:5,Metalness:7},THREE.SSRPass=e})();