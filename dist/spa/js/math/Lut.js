(function(){class t{constructor(t,s=32){this.lut=[],this.map=[],this.n=0,this.minV=0,this.maxV=1,this.setColorMap(t,s)}set(t){return!0===t.isLut&&this.copy(t),this}setMin(t){return this.minV=t,this}setMax(t){return this.maxV=t,this}setColorMap(t,i=32){this.map=s[t]||s.rainbow,this.n=i;const h=1/this.n;this.lut.length=0;for(let s=0;s<=1;s+=h)for(let t=0;t<this.map.length-1;t++)if(s>=this.map[t][0]&&s<this.map[t+1][0]){const i=this.map[t][0],h=this.map[t+1][0],a=new THREE.Color(this.map[t][1]),n=new THREE.Color(this.map[t+1][1]),o=a.lerp(n,(s-i)/(h-i));this.lut.push(o)}return this}copy(t){return this.lut=t.lut,this.map=t.map,this.n=t.n,this.minV=t.minV,this.maxV=t.maxV,this}getColor(t){t<=this.minV?t=this.minV:t>=this.maxV&&(t=this.maxV),t=(t-this.minV)/(this.maxV-this.minV);let s=Math.round(t*this.n);return s==this.n&&(s-=1),this.lut[s]}addColorMap(t,i){return s[t]=i,this}createCanvas(){const t=document.createElement("canvas");return t.width=1,t.height=this.n,this.updateCanvas(t),t}updateCanvas(t){const s=t.getContext("2d",{alpha:!1}),i=s.getImageData(0,0,1,this.n),h=i.data;let a=0;const n=1/this.n;for(let o=1;o>=0;o-=n)for(let t=this.map.length-1;t>=0;t--)if(o<this.map[t][0]&&o>=this.map[t-1][0]){const s=this.map[t-1][0],i=this.map[t][0],n=new THREE.Color(this.map[t-1][1]),e=new THREE.Color(this.map[t][1]),r=n.lerp(e,(o-s)/(i-s));h[4*a]=Math.round(255*r.r),h[4*a+1]=Math.round(255*r.g),h[4*a+2]=Math.round(255*r.b),h[4*a+3]=255,a+=1}return s.putImageData(i,0,0),t}}t.prototype.isLut=!0;const s={rainbow:[[0,255],[.2,65535],[.5,65280],[.8,16776960],[1,16711680]],cooltowarm:[[0,3952322],[.2,10206463],[.5,14474460],[.8,16163717],[1,11797542]],blackbody:[[0,0],[.2,7864320],[.5,15086080],[.8,16776960],[1,16777215]],grayscale:[[0,0],[.2,4210752],[.5,8355712],[.8,12566463],[1,16777215]]};THREE.ColorMapKeywords=s,THREE.Lut=t})();