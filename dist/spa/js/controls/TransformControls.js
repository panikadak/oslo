(function(){const t=new THREE.Raycaster,e=new THREE.Vector3,o=new THREE.Vector3,i=new THREE.Quaternion,n={X:new THREE.Vector3(1,0,0),Y:new THREE.Vector3(0,1,0),Z:new THREE.Vector3(0,0,1)},s={type:"change"},a={type:"mouseDown"},r={type:"mouseUp",mode:null},h={type:"objectChange"};class l extends THREE.Object3D{constructor(t,e){super(),void 0===e&&(console.warn('THREE.TransformControls: The second parameter "domElement" is now mandatory.'),e=document),this.visible=!1,this.domElement=e,this.domElement.style.touchAction="none";const o=new I;this._gizmo=o,this.add(o);const i=new Q;this._plane=i,this.add(i);const n=this;function a(t,e){let a=e;Object.defineProperty(n,t,{get:function(){return void 0!==a?a:e},set:function(e){a!==e&&(a=e,i[t]=e,o[t]=e,n.dispatchEvent({type:t+"-changed",value:e}),n.dispatchEvent(s))}}),n[t]=e,i[t]=e,o[t]=e}a("camera",t),a("object",void 0),a("enabled",!0),a("axis",null),a("mode","translate"),a("translationSnap",null),a("rotationSnap",null),a("scaleSnap",null),a("space","world"),a("size",1),a("dragging",!1),a("showX",!0),a("showY",!0),a("showZ",!0);const r=new THREE.Vector3,h=new THREE.Vector3,l=new THREE.Quaternion,u=new THREE.Quaternion,y=new THREE.Vector3,w=new THREE.Quaternion,T=new THREE.Vector3,H=new THREE.Vector3,R=new THREE.Vector3,M=0,b=new THREE.Vector3;a("worldPosition",r),a("worldPositionStart",h),a("worldQuaternion",l),a("worldQuaternionStart",u),a("cameraPosition",y),a("cameraQuaternion",w),a("pointStart",T),a("pointEnd",H),a("rotationAxis",R),a("rotationAngle",M),a("eye",b),this._offset=new THREE.Vector3,this._startNorm=new THREE.Vector3,this._endNorm=new THREE.Vector3,this._cameraScale=new THREE.Vector3,this._parentPosition=new THREE.Vector3,this._parentQuaternion=new THREE.Quaternion,this._parentQuaternionInv=new THREE.Quaternion,this._parentScale=new THREE.Vector3,this._worldScaleStart=new THREE.Vector3,this._worldQuaternionInv=new THREE.Quaternion,this._worldScale=new THREE.Vector3,this._positionStart=new THREE.Vector3,this._quaternionStart=new THREE.Quaternion,this._scaleStart=new THREE.Vector3,this._getPointer=c.bind(this),this._onPointerDown=p.bind(this),this._onPointerHover=E.bind(this),this._onPointerMove=d.bind(this),this._onPointerUp=m.bind(this),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointermove",this._onPointerHover),this.domElement.addEventListener("pointerup",this._onPointerUp)}updateMatrixWorld(){void 0!==this.object&&(this.object.updateMatrixWorld(),null===this.object.parent?console.error("TransformControls: The attached 3D object must be a part of the scene graph."):this.object.parent.matrixWorld.decompose(this._parentPosition,this._parentQuaternion,this._parentScale),this.object.matrixWorld.decompose(this.worldPosition,this.worldQuaternion,this._worldScale),this._parentQuaternionInv.copy(this._parentQuaternion).invert(),this._worldQuaternionInv.copy(this.worldQuaternion).invert()),this.camera.updateMatrixWorld(),this.camera.matrixWorld.decompose(this.cameraPosition,this.cameraQuaternion,this._cameraScale),this.eye.copy(this.cameraPosition).sub(this.worldPosition).normalize(),super.updateMatrixWorld(this)}pointerHover(e){if(void 0===this.object||!0===this.dragging)return;t.setFromCamera(e,this.camera);const o=u(this._gizmo.picker[this.mode],t);this.axis=o?o.object.name:null}pointerDown(e){if(void 0!==this.object&&!0!==this.dragging&&0===e.button&&null!==this.axis){t.setFromCamera(e,this.camera);const o=u(this._plane,t,!0);o&&(this.object.updateMatrixWorld(),this.object.parent.updateMatrixWorld(),this._positionStart.copy(this.object.position),this._quaternionStart.copy(this.object.quaternion),this._scaleStart.copy(this.object.scale),this.object.matrixWorld.decompose(this.worldPositionStart,this.worldQuaternionStart,this._worldScaleStart),this.pointStart.copy(o.point).sub(this.worldPositionStart)),this.dragging=!0,a.mode=this.mode,this.dispatchEvent(a)}}pointerMove(a){const r=this.axis,l=this.mode,c=this.object;let E=this.space;if("scale"===l?E="local":"E"!==r&&"XYZE"!==r&&"XYZ"!==r||(E="world"),void 0===c||null===r||!1===this.dragging||-1!==a.button)return;t.setFromCamera(a,this.camera);const p=u(this._plane,t,!0);if(p){if(this.pointEnd.copy(p.point).sub(this.worldPositionStart),"translate"===l)this._offset.copy(this.pointEnd).sub(this.pointStart),"local"===E&&"XYZ"!==r&&this._offset.applyQuaternion(this._worldQuaternionInv),-1===r.indexOf("X")&&(this._offset.x=0),-1===r.indexOf("Y")&&(this._offset.y=0),-1===r.indexOf("Z")&&(this._offset.z=0),"local"===E&&"XYZ"!==r?this._offset.applyQuaternion(this._quaternionStart).divide(this._parentScale):this._offset.applyQuaternion(this._parentQuaternionInv).divide(this._parentScale),c.position.copy(this._offset).add(this._positionStart),this.translationSnap&&("local"===E&&(c.position.applyQuaternion(i.copy(this._quaternionStart).invert()),-1!==r.search("X")&&(c.position.x=Math.round(c.position.x/this.translationSnap)*this.translationSnap),-1!==r.search("Y")&&(c.position.y=Math.round(c.position.y/this.translationSnap)*this.translationSnap),-1!==r.search("Z")&&(c.position.z=Math.round(c.position.z/this.translationSnap)*this.translationSnap),c.position.applyQuaternion(this._quaternionStart)),"world"===E&&(c.parent&&c.position.add(e.setFromMatrixPosition(c.parent.matrixWorld)),-1!==r.search("X")&&(c.position.x=Math.round(c.position.x/this.translationSnap)*this.translationSnap),-1!==r.search("Y")&&(c.position.y=Math.round(c.position.y/this.translationSnap)*this.translationSnap),-1!==r.search("Z")&&(c.position.z=Math.round(c.position.z/this.translationSnap)*this.translationSnap),c.parent&&c.position.sub(e.setFromMatrixPosition(c.parent.matrixWorld))));else if("scale"===l){if(-1!==r.search("XYZ")){let t=this.pointEnd.length()/this.pointStart.length();this.pointEnd.dot(this.pointStart)<0&&(t*=-1),o.set(t,t,t)}else e.copy(this.pointStart),o.copy(this.pointEnd),e.applyQuaternion(this._worldQuaternionInv),o.applyQuaternion(this._worldQuaternionInv),o.divide(e),-1===r.search("X")&&(o.x=1),-1===r.search("Y")&&(o.y=1),-1===r.search("Z")&&(o.z=1);c.scale.copy(this._scaleStart).multiply(o),this.scaleSnap&&(-1!==r.search("X")&&(c.scale.x=Math.round(c.scale.x/this.scaleSnap)*this.scaleSnap||this.scaleSnap),-1!==r.search("Y")&&(c.scale.y=Math.round(c.scale.y/this.scaleSnap)*this.scaleSnap||this.scaleSnap),-1!==r.search("Z")&&(c.scale.z=Math.round(c.scale.z/this.scaleSnap)*this.scaleSnap||this.scaleSnap))}else if("rotate"===l){this._offset.copy(this.pointEnd).sub(this.pointStart);const t=20/this.worldPosition.distanceTo(e.setFromMatrixPosition(this.camera.matrixWorld));"E"===r?(this.rotationAxis.copy(this.eye),this.rotationAngle=this.pointEnd.angleTo(this.pointStart),this._startNorm.copy(this.pointStart).normalize(),this._endNorm.copy(this.pointEnd).normalize(),this.rotationAngle*=this._endNorm.cross(this._startNorm).dot(this.eye)<0?1:-1):"XYZE"===r?(this.rotationAxis.copy(this._offset).cross(this.eye).normalize(),this.rotationAngle=this._offset.dot(e.copy(this.rotationAxis).cross(this.eye))*t):"X"!==r&&"Y"!==r&&"Z"!==r||(this.rotationAxis.copy(n[r]),e.copy(n[r]),"local"===E&&e.applyQuaternion(this.worldQuaternion),this.rotationAngle=this._offset.dot(e.cross(this.eye).normalize())*t),this.rotationSnap&&(this.rotationAngle=Math.round(this.rotationAngle/this.rotationSnap)*this.rotationSnap),"local"===E&&"E"!==r&&"XYZE"!==r?(c.quaternion.copy(this._quaternionStart),c.quaternion.multiply(i.setFromAxisAngle(this.rotationAxis,this.rotationAngle)).normalize()):(this.rotationAxis.applyQuaternion(this._parentQuaternionInv),c.quaternion.copy(i.setFromAxisAngle(this.rotationAxis,this.rotationAngle)),c.quaternion.multiply(this._quaternionStart).normalize())}this.dispatchEvent(s),this.dispatchEvent(h)}}pointerUp(t){0===t.button&&(this.dragging&&null!==this.axis&&(r.mode=this.mode,this.dispatchEvent(r)),this.dragging=!1,this.axis=null)}dispose(){this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerHover),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.traverse((function(t){t.geometry&&t.geometry.dispose(),t.material&&t.material.dispose()}))}attach(t){return this.object=t,this.visible=!0,this}detach(){return this.object=void 0,this.visible=!1,this.axis=null,this}reset(){this.enabled&&this.dragging&&(this.object.position.copy(this._positionStart),this.object.quaternion.copy(this._quaternionStart),this.object.scale.copy(this._scaleStart),this.dispatchEvent(s),this.dispatchEvent(h),this.pointStart.copy(this.pointEnd))}getRaycaster(){return t}getMode(){return this.mode}setMode(t){this.mode=t}setTranslationSnap(t){this.translationSnap=t}setRotationSnap(t){this.rotationSnap=t}setScaleSnap(t){this.scaleSnap=t}setSize(t){this.size=t}setSpace(t){this.space=t}update(){console.warn("THREE.TransformControls: update function has no more functionality and therefore has been deprecated.")}}function c(t){if(this.domElement.ownerDocument.pointerLockElement)return{x:0,y:0,button:t.button};{const e=this.domElement.getBoundingClientRect();return{x:(t.clientX-e.left)/e.width*2-1,y:-(t.clientY-e.top)/e.height*2+1,button:t.button}}}function E(t){if(this.enabled)switch(t.pointerType){case"mouse":case"pen":this.pointerHover(this._getPointer(t));break}}function p(t){this.enabled&&(document.pointerLockElement||this.domElement.setPointerCapture(t.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.pointerHover(this._getPointer(t)),this.pointerDown(this._getPointer(t)))}function d(t){this.enabled&&this.pointerMove(this._getPointer(t))}function m(t){this.enabled&&(this.domElement.releasePointerCapture(t.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.pointerUp(this._getPointer(t)))}function u(t,e,o){const i=e.intersectObject(t,!0);for(let n=0;n<i.length;n++)if(i[n].object.visible||o)return i[n];return!1}l.prototype.isTransformControls=!0;const y=new THREE.Euler,w=new THREE.Vector3(0,1,0),T=new THREE.Vector3(0,0,0),H=new THREE.Matrix4,R=new THREE.Quaternion,M=new THREE.Quaternion,b=new THREE.Vector3,x=new THREE.Matrix4,v=new THREE.Vector3(1,0,0),P=new THREE.Vector3(0,1,0),S=new THREE.Vector3(0,0,1),f=new THREE.Vector3,g=new THREE.Vector3,_=new THREE.Vector3;class I extends THREE.Object3D{constructor(){super(),this.type="TransformControlsGizmo";const t=new THREE.MeshBasicMaterial({depthTest:!1,depthWrite:!1,fog:!1,toneMapped:!1,transparent:!0}),e=new THREE.LineBasicMaterial({depthTest:!1,depthWrite:!1,fog:!1,toneMapped:!1,transparent:!0}),o=t.clone();o.opacity=.15;const i=e.clone();i.opacity=.5;const n=t.clone();n.color.setHex(16711680);const s=t.clone();s.color.setHex(65280);const a=t.clone();a.color.setHex(255);const r=t.clone();r.color.setHex(16711680),r.opacity=.5;const h=t.clone();h.color.setHex(65280),h.opacity=.5;const l=t.clone();l.color.setHex(255),l.opacity=.5;const c=t.clone();c.opacity=.25;const E=t.clone();E.color.setHex(16776960),E.opacity=.25;const p=t.clone();p.color.setHex(16776960);const d=t.clone();d.color.setHex(7895160);const m=new THREE.CylinderGeometry(0,.04,.1,12);m.translate(0,.05,0);const u=new THREE.BoxGeometry(.08,.08,.08);u.translate(0,.04,0);const y=new THREE.BufferGeometry;y.setAttribute("position",new THREE.Float32BufferAttribute([0,0,0,1,0,0],3));const w=new THREE.CylinderGeometry(.0075,.0075,.5,3);function T(t,e){const o=new THREE.TorusGeometry(t,.0075,3,64,e*Math.PI*2);return o.rotateY(Math.PI/2),o.rotateX(Math.PI/2),o}function H(){const t=new THREE.BufferGeometry;return t.setAttribute("position",new THREE.Float32BufferAttribute([0,0,0,1,1,1],3)),t}w.translate(0,.25,0);const R={X:[[new THREE.Mesh(m,n),[.5,0,0],[0,0,-Math.PI/2]],[new THREE.Mesh(m,n),[-.5,0,0],[0,0,Math.PI/2]],[new THREE.Mesh(w,n),[0,0,0],[0,0,-Math.PI/2]]],Y:[[new THREE.Mesh(m,s),[0,.5,0]],[new THREE.Mesh(m,s),[0,-.5,0],[Math.PI,0,0]],[new THREE.Mesh(w,s)]],Z:[[new THREE.Mesh(m,a),[0,0,.5],[Math.PI/2,0,0]],[new THREE.Mesh(m,a),[0,0,-.5],[-Math.PI/2,0,0]],[new THREE.Mesh(w,a),null,[Math.PI/2,0,0]]],XYZ:[[new THREE.Mesh(new THREE.OctahedronGeometry(.1,0),c.clone()),[0,0,0]]],XY:[[new THREE.Mesh(new THREE.BoxGeometry(.15,.15,.01),l.clone()),[.15,.15,0]]],YZ:[[new THREE.Mesh(new THREE.BoxGeometry(.15,.15,.01),r.clone()),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new THREE.Mesh(new THREE.BoxGeometry(.15,.15,.01),h.clone()),[.15,0,.15],[-Math.PI/2,0,0]]]},M={X:[[new THREE.Mesh(new THREE.CylinderGeometry(.2,0,.6,4),o),[.3,0,0],[0,0,-Math.PI/2]],[new THREE.Mesh(new THREE.CylinderGeometry(.2,0,.6,4),o),[-.3,0,0],[0,0,Math.PI/2]]],Y:[[new THREE.Mesh(new THREE.CylinderGeometry(.2,0,.6,4),o),[0,.3,0]],[new THREE.Mesh(new THREE.CylinderGeometry(.2,0,.6,4),o),[0,-.3,0],[0,0,Math.PI]]],Z:[[new THREE.Mesh(new THREE.CylinderGeometry(.2,0,.6,4),o),[0,0,.3],[Math.PI/2,0,0]],[new THREE.Mesh(new THREE.CylinderGeometry(.2,0,.6,4),o),[0,0,-.3],[-Math.PI/2,0,0]]],XYZ:[[new THREE.Mesh(new THREE.OctahedronGeometry(.2,0),o)]],XY:[[new THREE.Mesh(new THREE.BoxGeometry(.2,.2,.01),o),[.15,.15,0]]],YZ:[[new THREE.Mesh(new THREE.BoxGeometry(.2,.2,.01),o),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new THREE.Mesh(new THREE.BoxGeometry(.2,.2,.01),o),[.15,0,.15],[-Math.PI/2,0,0]]]},b={START:[[new THREE.Mesh(new THREE.OctahedronGeometry(.01,2),i),null,null,null,"helper"]],END:[[new THREE.Mesh(new THREE.OctahedronGeometry(.01,2),i),null,null,null,"helper"]],DELTA:[[new THREE.Line(H(),i),null,null,null,"helper"]],X:[[new THREE.Line(y,i.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]],Y:[[new THREE.Line(y,i.clone()),[0,-1e3,0],[0,0,Math.PI/2],[1e6,1,1],"helper"]],Z:[[new THREE.Line(y,i.clone()),[0,0,-1e3],[0,-Math.PI/2,0],[1e6,1,1],"helper"]]},x={XYZE:[[new THREE.Mesh(T(.5,1),d),null,[0,Math.PI/2,0]]],X:[[new THREE.Mesh(T(.5,.5),n)]],Y:[[new THREE.Mesh(T(.5,.5),s),null,[0,0,-Math.PI/2]]],Z:[[new THREE.Mesh(T(.5,.5),a),null,[0,Math.PI/2,0]]],E:[[new THREE.Mesh(T(.75,1),E),null,[0,Math.PI/2,0]]]},v={AXIS:[[new THREE.Line(y,i.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]]},P={XYZE:[[new THREE.Mesh(new THREE.SphereGeometry(.25,10,8),o)]],X:[[new THREE.Mesh(new THREE.TorusGeometry(.5,.1,4,24),o),[0,0,0],[0,-Math.PI/2,-Math.PI/2]]],Y:[[new THREE.Mesh(new THREE.TorusGeometry(.5,.1,4,24),o),[0,0,0],[Math.PI/2,0,0]]],Z:[[new THREE.Mesh(new THREE.TorusGeometry(.5,.1,4,24),o),[0,0,0],[0,0,-Math.PI/2]]],E:[[new THREE.Mesh(new THREE.TorusGeometry(.75,.1,2,24),o)]]},S={X:[[new THREE.Mesh(u,n),[.5,0,0],[0,0,-Math.PI/2]],[new THREE.Mesh(w,n),[0,0,0],[0,0,-Math.PI/2]],[new THREE.Mesh(u,n),[-.5,0,0],[0,0,Math.PI/2]]],Y:[[new THREE.Mesh(u,s),[0,.5,0]],[new THREE.Mesh(w,s)],[new THREE.Mesh(u,s),[0,-.5,0],[0,0,Math.PI]]],Z:[[new THREE.Mesh(u,a),[0,0,.5],[Math.PI/2,0,0]],[new THREE.Mesh(w,a),[0,0,0],[Math.PI/2,0,0]],[new THREE.Mesh(u,a),[0,0,-.5],[-Math.PI/2,0,0]]],XY:[[new THREE.Mesh(new THREE.BoxGeometry(.15,.15,.01),l),[.15,.15,0]]],YZ:[[new THREE.Mesh(new THREE.BoxGeometry(.15,.15,.01),r),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new THREE.Mesh(new THREE.BoxGeometry(.15,.15,.01),h),[.15,0,.15],[-Math.PI/2,0,0]]],XYZ:[[new THREE.Mesh(new THREE.BoxGeometry(.1,.1,.1),c.clone())]]},f={X:[[new THREE.Mesh(new THREE.CylinderGeometry(.2,0,.6,4),o),[.3,0,0],[0,0,-Math.PI/2]],[new THREE.Mesh(new THREE.CylinderGeometry(.2,0,.6,4),o),[-.3,0,0],[0,0,Math.PI/2]]],Y:[[new THREE.Mesh(new THREE.CylinderGeometry(.2,0,.6,4),o),[0,.3,0]],[new THREE.Mesh(new THREE.CylinderGeometry(.2,0,.6,4),o),[0,-.3,0],[0,0,Math.PI]]],Z:[[new THREE.Mesh(new THREE.CylinderGeometry(.2,0,.6,4),o),[0,0,.3],[Math.PI/2,0,0]],[new THREE.Mesh(new THREE.CylinderGeometry(.2,0,.6,4),o),[0,0,-.3],[-Math.PI/2,0,0]]],XY:[[new THREE.Mesh(new THREE.BoxGeometry(.2,.2,.01),o),[.15,.15,0]]],YZ:[[new THREE.Mesh(new THREE.BoxGeometry(.2,.2,.01),o),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new THREE.Mesh(new THREE.BoxGeometry(.2,.2,.01),o),[.15,0,.15],[-Math.PI/2,0,0]]],XYZ:[[new THREE.Mesh(new THREE.BoxGeometry(.2,.2,.2),o),[0,0,0]]]},g={X:[[new THREE.Line(y,i.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]],Y:[[new THREE.Line(y,i.clone()),[0,-1e3,0],[0,0,Math.PI/2],[1e6,1,1],"helper"]],Z:[[new THREE.Line(y,i.clone()),[0,0,-1e3],[0,-Math.PI/2,0],[1e6,1,1],"helper"]]};function _(t){const e=new THREE.Object3D;for(const o in t)for(let i=t[o].length;i--;){const n=t[o][i][0].clone(),s=t[o][i][1],a=t[o][i][2],r=t[o][i][3],h=t[o][i][4];n.name=o,n.tag=h,s&&n.position.set(s[0],s[1],s[2]),a&&n.rotation.set(a[0],a[1],a[2]),r&&n.scale.set(r[0],r[1],r[2]),n.updateMatrix();const l=n.geometry.clone();l.applyMatrix4(n.matrix),n.geometry=l,n.renderOrder=1/0,n.position.set(0,0,0),n.rotation.set(0,0,0),n.scale.set(1,1,1),e.add(n)}return e}this.gizmo={},this.picker={},this.helper={},this.add(this.gizmo["translate"]=_(R)),this.add(this.gizmo["rotate"]=_(x)),this.add(this.gizmo["scale"]=_(S)),this.add(this.picker["translate"]=_(M)),this.add(this.picker["rotate"]=_(P)),this.add(this.picker["scale"]=_(f)),this.add(this.helper["translate"]=_(b)),this.add(this.helper["rotate"]=_(v)),this.add(this.helper["scale"]=_(g)),this.picker["translate"].visible=!1,this.picker["rotate"].visible=!1,this.picker["scale"].visible=!1}updateMatrixWorld(t){const o="scale"===this.mode?"local":this.space,n="local"===o?this.worldQuaternion:M;this.gizmo["translate"].visible="translate"===this.mode,this.gizmo["rotate"].visible="rotate"===this.mode,this.gizmo["scale"].visible="scale"===this.mode,this.helper["translate"].visible="translate"===this.mode,this.helper["rotate"].visible="rotate"===this.mode,this.helper["scale"].visible="scale"===this.mode;let s=[];s=s.concat(this.picker[this.mode].children),s=s.concat(this.gizmo[this.mode].children),s=s.concat(this.helper[this.mode].children);for(let a=0;a<s.length;a++){const t=s[a];let o;if(t.visible=!0,t.rotation.set(0,0,0),t.position.copy(this.worldPosition),o=this.camera.isOrthographicCamera?(this.camera.top-this.camera.bottom)/this.camera.zoom:this.worldPosition.distanceTo(this.cameraPosition)*Math.min(1.9*Math.tan(Math.PI*this.camera.fov/360)/this.camera.zoom,7),t.scale.set(1,1,1).multiplyScalar(o*this.size/4),"helper"!==t.tag){if(t.quaternion.copy(n),"translate"===this.mode||"scale"===this.mode){const e=.99,o=.2;"X"===t.name&&Math.abs(w.copy(v).applyQuaternion(n).dot(this.eye))>e&&(t.scale.set(1e-10,1e-10,1e-10),t.visible=!1),"Y"===t.name&&Math.abs(w.copy(P).applyQuaternion(n).dot(this.eye))>e&&(t.scale.set(1e-10,1e-10,1e-10),t.visible=!1),"Z"===t.name&&Math.abs(w.copy(S).applyQuaternion(n).dot(this.eye))>e&&(t.scale.set(1e-10,1e-10,1e-10),t.visible=!1),"XY"===t.name&&Math.abs(w.copy(S).applyQuaternion(n).dot(this.eye))<o&&(t.scale.set(1e-10,1e-10,1e-10),t.visible=!1),"YZ"===t.name&&Math.abs(w.copy(v).applyQuaternion(n).dot(this.eye))<o&&(t.scale.set(1e-10,1e-10,1e-10),t.visible=!1),"XZ"===t.name&&Math.abs(w.copy(P).applyQuaternion(n).dot(this.eye))<o&&(t.scale.set(1e-10,1e-10,1e-10),t.visible=!1)}else"rotate"===this.mode&&(R.copy(n),w.copy(this.eye).applyQuaternion(i.copy(n).invert()),-1!==t.name.search("E")&&t.quaternion.setFromRotationMatrix(H.lookAt(this.eye,T,P)),"X"===t.name&&(i.setFromAxisAngle(v,Math.atan2(-w.y,w.z)),i.multiplyQuaternions(R,i),t.quaternion.copy(i)),"Y"===t.name&&(i.setFromAxisAngle(P,Math.atan2(w.x,w.z)),i.multiplyQuaternions(R,i),t.quaternion.copy(i)),"Z"===t.name&&(i.setFromAxisAngle(S,Math.atan2(w.y,w.x)),i.multiplyQuaternions(R,i),t.quaternion.copy(i)));t.visible=t.visible&&(-1===t.name.indexOf("X")||this.showX),t.visible=t.visible&&(-1===t.name.indexOf("Y")||this.showY),t.visible=t.visible&&(-1===t.name.indexOf("Z")||this.showZ),t.visible=t.visible&&(-1===t.name.indexOf("E")||this.showX&&this.showY&&this.showZ),t.material._color=t.material._color||t.material.color.clone(),t.material._opacity=t.material._opacity||t.material.opacity,t.material.color.copy(t.material._color),t.material.opacity=t.material._opacity,this.enabled&&this.axis&&(t.name===this.axis||this.axis.split("").some((function(e){return t.name===e})))&&(t.material.color.setHex(16776960),t.material.opacity=1)}else t.visible=!1,"AXIS"===t.name?(t.position.copy(this.worldPositionStart),t.visible=!!this.axis,"X"===this.axis&&(i.setFromEuler(y.set(0,0,0)),t.quaternion.copy(n).multiply(i),Math.abs(w.copy(v).applyQuaternion(n).dot(this.eye))>.9&&(t.visible=!1)),"Y"===this.axis&&(i.setFromEuler(y.set(0,0,Math.PI/2)),t.quaternion.copy(n).multiply(i),Math.abs(w.copy(P).applyQuaternion(n).dot(this.eye))>.9&&(t.visible=!1)),"Z"===this.axis&&(i.setFromEuler(y.set(0,Math.PI/2,0)),t.quaternion.copy(n).multiply(i),Math.abs(w.copy(S).applyQuaternion(n).dot(this.eye))>.9&&(t.visible=!1)),"XYZE"===this.axis&&(i.setFromEuler(y.set(0,Math.PI/2,0)),w.copy(this.rotationAxis),t.quaternion.setFromRotationMatrix(H.lookAt(T,w,P)),t.quaternion.multiply(i),t.visible=this.dragging),"E"===this.axis&&(t.visible=!1)):"START"===t.name?(t.position.copy(this.worldPositionStart),t.visible=this.dragging):"END"===t.name?(t.position.copy(this.worldPosition),t.visible=this.dragging):"DELTA"===t.name?(t.position.copy(this.worldPositionStart),t.quaternion.copy(this.worldQuaternionStart),e.set(1e-10,1e-10,1e-10).add(this.worldPositionStart).sub(this.worldPosition).multiplyScalar(-1),e.applyQuaternion(this.worldQuaternionStart.clone().invert()),t.scale.copy(e),t.visible=this.dragging):(t.quaternion.copy(n),this.dragging?t.position.copy(this.worldPositionStart):t.position.copy(this.worldPosition),this.axis&&(t.visible=-1!==this.axis.search(t.name)))}super.updateMatrixWorld(t)}}I.prototype.isTransformControlsGizmo=!0;class Q extends THREE.Mesh{constructor(){super(new THREE.PlaneGeometry(1e5,1e5,2,2),new THREE.MeshBasicMaterial({visible:!1,wireframe:!0,side:THREE.DoubleSide,transparent:!0,opacity:.1,toneMapped:!1})),this.type="TransformControlsPlane"}updateMatrixWorld(t){let o=this.space;switch(this.position.copy(this.worldPosition),"scale"===this.mode&&(o="local"),f.copy(v).applyQuaternion("local"===o?this.worldQuaternion:M),g.copy(P).applyQuaternion("local"===o?this.worldQuaternion:M),_.copy(S).applyQuaternion("local"===o?this.worldQuaternion:M),w.copy(g),this.mode){case"translate":case"scale":switch(this.axis){case"X":w.copy(this.eye).cross(f),b.copy(f).cross(w);break;case"Y":w.copy(this.eye).cross(g),b.copy(g).cross(w);break;case"Z":w.copy(this.eye).cross(_),b.copy(_).cross(w);break;case"XY":b.copy(_);break;case"YZ":b.copy(f);break;case"XZ":w.copy(_),b.copy(g);break;case"XYZ":case"E":b.set(0,0,0);break}break;case"rotate":default:b.set(0,0,0)}0===b.length()?this.quaternion.copy(this.cameraQuaternion):(x.lookAt(e.set(0,0,0),b,w),this.quaternion.setFromRotationMatrix(x)),super.updateMatrixWorld(t)}}Q.prototype.isTransformControlsPlane=!0,THREE.TransformControls=l,THREE.TransformControlsGizmo=I,THREE.TransformControlsPlane=Q})();