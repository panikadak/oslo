(function(){class t extends THREE.BufferGeometry{constructor(t=((t,e,r)=>r.set(t,e,Math.cos(t)*Math.sin(e))),e=8,r=8){super(),this.type="ParametricGeometry",this.parameters={func:t,slices:e,stacks:r};const s=[],o=[],c=[],n=[],u=1e-5,i=new THREE.Vector3,E=new THREE.Vector3,a=new THREE.Vector3,f=new THREE.Vector3,h=new THREE.Vector3;t.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a THREE.Vector3 as third parameter.");const l=e+1;for(let m=0;m<=r;m++){const s=m/r;for(let r=0;r<=e;r++){const l=r/e;t(l,s,E),o.push(E.x,E.y,E.z),l-u>=0?(t(l-u,s,a),f.subVectors(E,a)):(t(l+u,s,a),f.subVectors(a,E)),s-u>=0?(t(l,s-u,a),h.subVectors(E,a)):(t(l,s+u,a),h.subVectors(a,E)),i.crossVectors(f,h).normalize(),c.push(i.x,i.y,i.z),n.push(l,s)}}for(let m=0;m<r;m++)for(let t=0;t<e;t++){const e=m*l+t,r=m*l+t+1,o=(m+1)*l+t+1,c=(m+1)*l+t;s.push(e,r,c),s.push(r,o,c)}this.setIndex(s),this.setAttribute("position",new THREE.Float32BufferAttribute(o,3)),this.setAttribute("normal",new THREE.Float32BufferAttribute(c,3)),this.setAttribute("uv",new THREE.Float32BufferAttribute(n,2))}}THREE.ParametricGeometry=t})();