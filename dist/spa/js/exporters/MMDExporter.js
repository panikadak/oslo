(function(){class n{parseVpd(n,t,r){if(!0!==n.isSkinnedMesh)return console.warn("THREE.MMDExporter: parseVpd() requires SkinnedMesh instance."),null;function s(n){Math.abs(n)<1e-6&&(n=0);let t=n.toString();-1===t.indexOf(".")&&(t+="."),t+="000000";const e=t.indexOf("."),o=t.slice(0,e),r=t.slice(e+1,e+7);return o+"."+r}function i(n){const t=[];for(let e=0,o=n.length;e<o;e++)t.push(s(n[e]));return t.join(",")}n.updateMatrixWorld(!0);const a=n.skeleton.bones,u=o(n),c=new THREE.Vector3,l=new THREE.Quaternion,p=new THREE.Quaternion,h=new THREE.Matrix4,d=[];d.push("Vocaloid Pose Data file"),d.push(""),d.push((""!==n.name?n.name.replace(/\s/g,"_"):"skin")+".osm;"),d.push(a.length+";"),d.push("");for(let e=0,o=a.length;e<o;e++){const n=a[e],t=u[e];!0===r&&void 0!==n.userData.ik&&void 0!==n.userData.ik.originalMatrix?h.fromArray(n.userData.ik.originalMatrix):h.copy(n.matrix),c.setFromMatrixPosition(h),l.setFromRotationMatrix(h);const o=c.sub(t.position).toArray(),s=p.copy(t.quaternion).conjugate().multiply(l).toArray();o[2]=-o[2],s[0]=-s[0],s[1]=-s[1],d.push("Bone"+e+"{"+n.name),d.push("  "+i(o)+";"),d.push("  "+i(s)+";"),d.push("}"),d.push("")}d.push("");const f=d.join("\n");return!0===t?e(f):f}}let t;function e(n){if(void 0===t){const n=new MMDParser.CharsetEncoder,e=n.s2uTable;t={};const o=Object.keys(e);for(let r=0,s=o.length;r<s;r++){let n=o[r];const s=e[n];n=parseInt(n),t[s]=n}}const e=[];for(let o=0,r=n.length;o<r;o++){const r=n.charCodeAt(o),s=t[r];if(void 0===s)throw"cannot convert charcode 0x"+r.toString(16);s>255?(e.push(s>>8&255),e.push(255&s)):e.push(255&s)}return new Uint8Array(e)}function o(n){const t=n.clone();return t.pose(),t.skeleton.bones}THREE.MMDExporter=n})();