(function(){class e{constructor(e){const r=new THREE.OrthographicCamera(-1,1,1,-1,0,1),t=new THREE.Scene,a=new THREE.StereoCamera,n={minFilter:THREE.LinearFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat},i=new THREE.WebGLRenderTarget(512,512,n),o=new THREE.WebGLRenderTarget(512,512,n),l=new THREE.ShaderMaterial({uniforms:{mapLeft:{value:i.texture},mapRight:{value:o.texture}},vertexShader:["varying vec2 vUv;","void main() {","\tvUv = vec2( uv.x, uv.y );","\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D mapLeft;","uniform sampler2D mapRight;","varying vec2 vUv;","void main() {","\tvec2 uv = vUv;","\tif ( ( mod( gl_FragCoord.y, 2.0 ) ) > 1.00 ) {","\t\tgl_FragColor = texture2D( mapLeft, uv );","\t} else {","\t\tgl_FragColor = texture2D( mapRight, uv );","\t}","}"].join("\n")}),m=new THREE.Mesh(new THREE.PlaneGeometry(2,2),l);t.add(m),this.setSize=function(r,t){e.setSize(r,t);const a=e.getPixelRatio();i.setSize(r*a,t*a),o.setSize(r*a,t*a)},this.render=function(n,l){n.updateMatrixWorld(),null===l.parent&&l.updateMatrixWorld(),a.update(l),e.setRenderTarget(i),e.clear(),e.render(n,a.cameraL),e.setRenderTarget(o),e.clear(),e.render(n,a.cameraR),e.setRenderTarget(null),e.render(t,r)}}}THREE.ParallaxBarrierEffect=e})();