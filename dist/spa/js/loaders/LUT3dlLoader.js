(function(){class e extends THREE.Loader{load(e,t,a,r){const i=new THREE.FileLoader(this.manager);i.setPath(this.path),i.setResponseType("text"),i.load(e,(a=>{try{t(this.parse(a))}catch(i){r?r(i):console.error(i),this.manager.itemError(e)}}),a,r)}parse(e){e=e.replace(/^#.*?(\n|\r)/gm,"").replace(/^\s*?(\n|\r)/gm,"").trim();const t=e.split(/[\n\r]+/g),a=t[0].trim().split(/\s+/g).map((e=>parseFloat(e))),r=a[1]-a[0],i=a.length;for(let T=1,d=a.length;T<d;T++)if(r!==a[T]-a[T-1])throw new Error("LUT3dlLoader: Inconsistent grid size not supported.");const n=new Array(i*i*i*3);let p=0,o=0;for(let T=1,d=t.length;T<d;T++){const e=t[T].trim(),a=e.split(/\s/g),r=parseFloat(a[0]),s=parseFloat(a[1]),E=parseFloat(a[2]);o=Math.max(o,r,s,E);const l=p%i,g=Math.floor(p/i)%i,m=Math.floor(p/(i*i))%i,d=l*i*i+g*i+m;n[3*d+0]=r,n[3*d+1]=s,n[3*d+2]=E,p+=1}const s=Math.ceil(Math.log2(o)),E=Math.pow(2,s);for(let T=0,d=n.length;T<d;T++){const e=n[T];n[T]=255*e/E}const l=new Uint8Array(n),g=new THREE.DataTexture;g.image.data=l,g.image.width=i,g.image.height=i*i,g.format=THREE.RGBFormat,g.type=THREE.UnsignedByteType,g.magFilter=THREE.LinearFilter,g.minFilter=THREE.LinearFilter,g.wrapS=THREE.ClampToEdgeWrapping,g.wrapT=THREE.ClampToEdgeWrapping,g.generateMipmaps=!1,g.needsUpdate=!0;const m=new THREE.DataTexture3D;return m.image.data=l,m.image.width=i,m.image.height=i,m.image.depth=i,m.format=THREE.RGBFormat,m.type=THREE.UnsignedByteType,m.magFilter=THREE.LinearFilter,m.minFilter=THREE.LinearFilter,m.wrapS=THREE.ClampToEdgeWrapping,m.wrapT=THREE.ClampToEdgeWrapping,m.wrapR=THREE.ClampToEdgeWrapping,m.generateMipmaps=!1,m.needsUpdate=!0,{size:i,texture:g,texture3D:m}}}THREE.LUT3dlLoader=e})();