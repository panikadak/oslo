(function(){class e extends THREE.Loader{constructor(e){super(e),this.splitLayer=!1}load(e,t,r,n){const o=this,i=new THREE.FileLoader(o.manager);i.setPath(o.path),i.setRequestHeader(o.requestHeader),i.setWithCredentials(o.withCredentials),i.load(e,(function(r){try{t(o.parse(r))}catch(i){n?n(i):console.error(i),o.manager.itemError(e)}}),r,n)}parse(e){let t={x:0,y:0,z:0,e:0,f:0,extruding:!1,relative:!1};const r=[];let n;const o=new THREE.LineBasicMaterial({color:16711680});o.name="path";const i=new THREE.LineBasicMaterial({color:65280});function s(e){n={vertex:[],pathVertex:[],z:e.z},r.push(n)}function a(e,r){void 0===n&&s(e),t.extruding?(n.vertex.push(e.x,e.y,e.z),n.vertex.push(r.x,r.y,r.z)):(n.pathVertex.push(e.x,e.y,e.z),n.pathVertex.push(r.x,r.y,r.z))}function l(e,r){return t.relative?r:r-e}function c(e,r){return t.relative?e+r:r}i.name="extruded";const u=e.replace(/;.+/g,"").split("\n");for(let h=0;h<u.length;h++){const e=u[h].split(" "),r=e[0].toUpperCase(),o={};if(e.splice(1).forEach((function(e){if(void 0!==e[0]){const t=e[0].toLowerCase(),r=parseFloat(e.substring(1));o[t]=r}})),"G0"===r||"G1"===r){const e={x:void 0!==o.x?c(t.x,o.x):t.x,y:void 0!==o.y?c(t.y,o.y):t.y,z:void 0!==o.z?c(t.z,o.z):t.z,e:void 0!==o.e?c(t.e,o.e):t.e,f:void 0!==o.f?c(t.f,o.f):t.f};l(t.e,e.e)>0&&(t.extruding=l(t.e,e.e)>0,void 0!=n&&e.z==n.z||s(e)),a(t,e),t=e}else if("G2"===r||"G3"===r);else if("G90"===r)t.relative=!1;else if("G91"===r)t.relative=!0;else if("G92"===r){const e=t;e.x=void 0!==o.x?o.x:e.x,e.y=void 0!==o.y?o.y:e.y,e.z=void 0!==o.z?o.z:e.z,e.e=void 0!==o.e?o.e:e.e,t=e}}function d(e,t,r){const n=new THREE.BufferGeometry;n.setAttribute("position",new THREE.Float32BufferAttribute(e,3));const s=new THREE.LineSegments(n,t?i:o);s.name="layer"+r,f.add(s)}const f=new THREE.Group;if(f.name="gcode",this.splitLayer)for(let h=0;h<r.length;h++){const e=r[h];d(e.vertex,!0,h),d(e.pathVertex,!1,h)}else{const e=[],t=[];for(let n=0;n<r.length;n++){const o=r[n],i=o.vertex,s=o.pathVertex;for(let t=0;t<i.length;t++)e.push(i[t]);for(let e=0;e<s.length;e++)t.push(s[e])}d(e,!0,r.length),d(t,!1,r.length)}return f.quaternion.setFromEuler(new THREE.Euler(-Math.PI/2,0,0)),f}}THREE.GCodeLoader=e})();