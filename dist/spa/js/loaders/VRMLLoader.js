(function(){class e extends THREE.Loader{constructor(e){if(super(e),"undefined"===typeof chevrotain)throw Error("THREE.VRMLLoader: External library chevrotain.min.js required.")}load(e,t,n,r){const o=this,a=""===o.path?THREE.LoaderUtils.extractUrlBase(e):o.path,s=new THREE.FileLoader(o.manager);s.setPath(o.path),s.setRequestHeader(o.requestHeader),s.setWithCredentials(o.withCredentials),s.load(e,(function(n){try{t(o.parse(n,a))}catch(s){r?r(s):console.error(s),o.manager.itemError(e)}}),n,r)}parse(e,n){const s={};function i(e){const n=l(),o=new t(n.tokens),a=new r(n.tokenVocabulary),s=c(a.getBaseCstVisitorConstructor()),i=o.lex(e);a.input=i.tokens;const u=a.vrml();if(a.errors.length>0)throw console.error(a.errors),Error("THREE.VRMLLoader: Parsing errors detected.");const f=s.visit(u);return f}function l(){const e=chevrotain.createToken,t=e({name:"RouteIdentifier",pattern:/[^\x30-\x39\0-\x20\x22\x27\x23\x2b\x2c\x2d\x2e\x5b\x5d\x5c\x7b\x7d][^\0-\x20\x22\x27\x23\x2b\x2c\x2d\x2e\x5b\x5d\x5c\x7b\x7d]*[\.][^\x30-\x39\0-\x20\x22\x27\x23\x2b\x2c\x2d\x2e\x5b\x5d\x5c\x7b\x7d][^\0-\x20\x22\x27\x23\x2b\x2c\x2d\x2e\x5b\x5d\x5c\x7b\x7d]*/}),n=e({name:"Identifier",pattern:/[^\x30-\x39\0-\x20\x22\x27\x23\x2b\x2c\x2d\x2e\x5b\x5d\x5c\x7b\x7d][^\0-\x20\x22\x27\x23\x2b\x2c\x2d\x2e\x5b\x5d\x5c\x7b\x7d]*/,longer_alt:t}),r=["Anchor","Billboard","Collision","Group","Transform","Inline","LOD","Switch","AudioClip","DirectionalLight","PointLight","Script","Shape","Sound","SpotLight","WorldInfo","CylinderSensor","PlaneSensor","ProximitySensor","SphereSensor","TimeSensor","TouchSensor","VisibilitySensor","Box","Cone","Cylinder","ElevationGrid","Extrusion","IndexedFaceSet","IndexedLineSet","PointSet","Sphere","Color","Coordinate","Normal","TextureCoordinate","Appearance","FontStyle","ImageTexture","Material","MovieTexture","PixelTexture","TextureTransform","ColorInterpolator","CoordinateInterpolator","NormalInterpolator","OrientationInterpolator","PositionInterpolator","ScalarInterpolator","Background","Fog","NavigationInfo","Viewpoint","Text"],o=e({name:"Version",pattern:/#VRML.*/,longer_alt:n}),a=e({name:"NodeName",pattern:new RegExp(r.join("|")),longer_alt:n}),s=e({name:"DEF",pattern:/DEF/,longer_alt:n}),i=e({name:"USE",pattern:/USE/,longer_alt:n}),l=e({name:"ROUTE",pattern:/ROUTE/,longer_alt:n}),c=e({name:"TO",pattern:/TO/,longer_alt:n}),u=e({name:"StringLiteral",pattern:/"(?:[^\\"\n\r]|\\[bfnrtv"\\/]|\\u[0-9a-fA-F][0-9a-fA-F][0-9a-fA-F][0-9a-fA-F])*"/}),f=e({name:"HexLiteral",pattern:/0[xX][0-9a-fA-F]+/}),E=e({name:"NumberLiteral",pattern:/[-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?/}),d=e({name:"TrueLiteral",pattern:/TRUE/}),p=e({name:"FalseLiteral",pattern:/FALSE/}),b=e({name:"NullLiteral",pattern:/NULL/}),h=e({name:"LSquare",pattern:/\[/}),T=e({name:"RSquare",pattern:/]/}),R=e({name:"LCurly",pattern:/{/}),x=e({name:"RCurly",pattern:/}/}),m=e({name:"Comment",pattern:/#.*/,group:chevrotain.Lexer.SKIPPED}),g=e({name:"WhiteSpace",pattern:/[ ,\s]/,group:chevrotain.Lexer.SKIPPED}),k=[g,a,s,i,l,c,d,p,b,o,n,t,u,f,E,h,T,R,x,m],w={};for(let L=0,y=k.length;L<y;L++){const e=k[L];w[e.name]=e}return{tokens:k,tokenVocabulary:w}}function c(e){function t(){e.call(this),this.validateVisitor()}function n(e,t){const n={type:null,values:[]};if(t.node){n.type="node";for(let r=0,o=t.node.length;r<o;r++){const o=t.node[r];n.values.push(e.visit(o))}}if(t.use){n.type="use";for(let r=0,o=t.use.length;r<o;r++){const o=t.use[r];n.values.push(e.visit(o))}}if(t.StringLiteral){n.type="string";for(let e=0,r=t.StringLiteral.length;e<r;e++){const r=t.StringLiteral[e];n.values.push(r.image.replace(/'|"/g,""))}}if(t.NumberLiteral){n.type="number";for(let e=0,r=t.NumberLiteral.length;e<r;e++){const r=t.NumberLiteral[e];n.values.push(parseFloat(r.image))}}if(t.HexLiteral){n.type="hex";for(let e=0,r=t.HexLiteral.length;e<r;e++){const r=t.HexLiteral[e];n.values.push(r.image)}}if(t.TrueLiteral){n.type="boolean";for(let e=0,r=t.TrueLiteral.length;e<r;e++){const r=t.TrueLiteral[e];"TRUE"===r.image&&n.values.push(!0)}}if(t.FalseLiteral){n.type="boolean";for(let e=0,r=t.FalseLiteral.length;e<r;e++){const r=t.FalseLiteral[e];"FALSE"===r.image&&n.values.push(!1)}}return t.NullLiteral&&(n.type="null",t.NullLiteral.forEach((function(){n.values.push(null)}))),n}return t.prototype=Object.assign(Object.create(e.prototype),{constructor:t,vrml:function(e){const t={version:this.visit(e.version),nodes:[],routes:[]};for(let n=0,r=e.node.length;n<r;n++){const r=e.node[n];t.nodes.push(this.visit(r))}if(e.route)for(let n=0,r=e.route.length;n<r;n++){const r=e.route[n];t.routes.push(this.visit(r))}return t},version:function(e){return e.Version[0].image},node:function(e){const t={name:e.NodeName[0].image,fields:[]};if(e.field)for(let n=0,r=e.field.length;n<r;n++){const r=e.field[n];t.fields.push(this.visit(r))}return e.def&&(t.DEF=this.visit(e.def[0])),t},field:function(e){const t={name:e.Identifier[0].image,type:null,values:null};let n;return e.singleFieldValue&&(n=this.visit(e.singleFieldValue[0])),e.multiFieldValue&&(n=this.visit(e.multiFieldValue[0])),t.type=n.type,t.values=n.values,t},def:function(e){return(e.Identifier||e.NodeName)[0].image},use:function(e){return{USE:(e.Identifier||e.NodeName)[0].image}},singleFieldValue:function(e){return n(this,e)},multiFieldValue:function(e){return n(this,e)},route:function(e){const t={FROM:e.RouteIdentifier[0].image,TO:e.RouteIdentifier[1].image};return t}}),new t}function u(e){const t=e.nodes,n=new THREE.Scene;for(let r=0,o=t.length;r<o;r++){const e=t[r];f(e)}for(let r=0,o=t.length;r<o;r++){const e=t[r],o=E(e);o instanceof THREE.Object3D&&n.add(o),"WorldInfo"===e.name&&(n.userData.worldInfo=o)}return n}function f(e){e.DEF&&(s[e.DEF]=e);const t=e.fields;for(let n=0,r=t.length;n<r;n++){const e=t[n];if("node"===e.type){const t=e.values;for(let e=0,n=t.length;e<n;e++)f(t[e])}}}function E(e){return e.USE?N(e.USE):(void 0!==e.build||(e.build=d(e)),e.build)}function d(e){const t=e.name;let n;switch(t){case"Group":case"Transform":case"Collision":n=p(e);break;case"Background":n=b(e);break;case"Shape":n=h(e);break;case"Appearance":n=T(e);break;case"Material":n=R(e);break;case"ImageTexture":n=k(e);break;case"PixelTexture":n=g(e);break;case"TextureTransform":n=w(e);break;case"IndexedFaceSet":n=H(e);break;case"IndexedLineSet":n=S(e);break;case"PointSet":n=A(e);break;case"Box":n=U(e);break;case"Cone":n=C(e);break;case"Cylinder":n=v(e);break;case"Sphere":n=M(e);break;case"ElevationGrid":n=V(e);break;case"Extrusion":n=I(e);break;case"Color":case"Coordinate":case"Normal":case"TextureCoordinate":n=L(e);break;case"WorldInfo":n=y(e);break;case"Anchor":case"Billboard":case"Inline":case"LOD":case"Switch":case"AudioClip":case"DirectionalLight":case"PointLight":case"Script":case"Sound":case"SpotLight":case"CylinderSensor":case"PlaneSensor":case"ProximitySensor":case"SphereSensor":case"TimeSensor":case"TouchSensor":case"VisibilitySensor":case"Text":case"FontStyle":case"MovieTexture":case"ColorInterpolator":case"CoordinateInterpolator":case"NormalInterpolator":case"OrientationInterpolator":case"PositionInterpolator":case"ScalarInterpolator":case"Fog":case"NavigationInfo":case"Viewpoint":break;default:console.warn("THREE.VRMLLoader: Unknown node:",t);break}return void 0!==n&&void 0!==e.DEF&&!0===n.hasOwnProperty("name")&&(n.name=e.DEF),n}function p(e){const t=new THREE.Group,n=e.fields;for(let r=0,o=n.length;r<o;r++){const e=n[r],o=e.name,a=e.values;switch(o){case"bboxCenter":break;case"bboxSize":break;case"center":break;case"children":B(a,t);break;case"collide":break;case"rotation":const e=new THREE.Vector3(a[0],a[1],a[2]),n=a[3];t.quaternion.setFromAxisAngle(e,n);break;case"scale":t.scale.set(a[0],a[1],a[2]);break;case"scaleOrientation":break;case"translation":t.position.set(a[0],a[1],a[2]);break;case"proxy":break;default:console.warn("THREE.VRMLLoader: Unknown field:",o);break}}return t}function b(e){const t=new THREE.Group;let n,r,o,a;const s=e.fields;for(let l=0,c=s.length;l<c;l++){const e=s[l],t=e.name,i=e.values;switch(t){case"groundAngle":n=i;break;case"groundColor":r=i;break;case"backUrl":break;case"bottomUrl":break;case"frontUrl":break;case"leftUrl":break;case"rightUrl":break;case"topUrl":break;case"skyAngle":o=i;break;case"skyColor":a=i;break;default:console.warn("THREE.VRMLLoader: Unknown field:",t);break}}const i=1e4;if(a){const e=new THREE.SphereGeometry(i,32,16),n=new THREE.MeshBasicMaterial({fog:!1,side:THREE.BackSide,depthWrite:!1,depthTest:!1});a.length>3?(re(e,i,o,ne(a),!0),n.vertexColors=!0):n.color.setRGB(a[0],a[1],a[2]);const r=new THREE.Mesh(e,n);t.add(r)}if(r&&r.length>0){const e=new THREE.SphereGeometry(i,32,16,0,2*Math.PI,.5*Math.PI,1.5*Math.PI),o=new THREE.MeshBasicMaterial({fog:!1,side:THREE.BackSide,vertexColors:!0,depthWrite:!1,depthTest:!1});re(e,i,n,ne(r),!1);const a=new THREE.Mesh(e,o);t.add(a)}return t.renderOrder=-1/0,t}function h(e){const t=e.fields;let n,r,o=new THREE.MeshBasicMaterial({color:0});for(let a=0,s=t.length;a<s;a++){const e=t[a],r=e.name,s=e.values;switch(r){case"appearance":null!==s[0]&&(o=E(s[0]));break;case"geometry":null!==s[0]&&(n=E(s[0]));break;default:console.warn("THREE.VRMLLoader: Unknown field:",r);break}}if(n&&n.attributes.position){const e=n._type;if("points"===e){const e=new THREE.PointsMaterial({color:16777215});void 0!==n.attributes.color?e.vertexColors=!0:o.isMeshPhongMaterial&&e.color.copy(o.emissive),r=new THREE.Points(n,e)}else if("line"===e){const e=new THREE.LineBasicMaterial({color:16777215});void 0!==n.attributes.color?e.vertexColors=!0:o.isMeshPhongMaterial&&e.color.copy(o.emissive),r=new THREE.LineSegments(n,e)}else void 0!==n._solid&&(o.side=n._solid?THREE.FrontSide:THREE.DoubleSide),void 0!==n.attributes.color&&(o.vertexColors=!0),r=new THREE.Mesh(n,o)}else r=new THREE.Object3D,r.visible=!1;return r}function T(e){let t,n=new THREE.MeshPhongMaterial;const r=e.fields;for(let o=0,a=r.length;o<a;o++){const e=r[o],a=e.name,s=e.values;switch(a){case"material":if(null!==s[0]){const e=E(s[0]);e.diffuseColor&&n.color.copy(e.diffuseColor),e.emissiveColor&&n.emissive.copy(e.emissiveColor),e.shininess&&(n.shininess=e.shininess),e.specularColor&&n.specular.copy(e.specularColor),e.transparency&&(n.opacity=1-e.transparency),e.transparency>0&&(n.transparent=!0)}else n=new THREE.MeshBasicMaterial({color:0});break;case"texture":const e=s[0];null!==e&&("ImageTexture"!==e.name&&"PixelTexture"!==e.name||(n.map=E(e)));break;case"textureTransform":null!==s[0]&&(t=E(s[0]));break;default:console.warn("THREE.VRMLLoader: Unknown field:",a);break}}if(n.map){if(n.map.__type){switch(n.map.__type){case a.INTENSITY_ALPHA:n.opacity=1;break;case a.RGB:n.color.set(16777215);break;case a.RGBA:n.color.set(16777215),n.opacity=1;break;default:}delete n.map.__type}t&&(n.map.center.copy(t.center),n.map.rotation=t.rotation,n.map.repeat.copy(t.scale),n.map.offset.copy(t.translation))}return n}function R(e){const t={},n=e.fields;for(let r=0,o=n.length;r<o;r++){const e=n[r],o=e.name,a=e.values;switch(o){case"ambientIntensity":break;case"diffuseColor":t.diffuseColor=new THREE.Color(a[0],a[1],a[2]);break;case"emissiveColor":t.emissiveColor=new THREE.Color(a[0],a[1],a[2]);break;case"shininess":t.shininess=a[0];break;case"specularColor":t.emissiveColor=new THREE.Color(a[0],a[1],a[2]);break;case"transparency":t.transparency=a[0];break;default:console.warn("THREE.VRMLLoader: Unknown field:",o);break}}return t}function x(e,t,n){let r;switch(t){case a.INTENSITY:r=parseInt(e),n.r=r,n.g=r,n.b=r;break;case a.INTENSITY_ALPHA:r=parseInt("0x"+e.substring(2,4)),n.r=r,n.g=r,n.b=r,n.a=parseInt("0x"+e.substring(4,6));break;case a.RGB:n.r=parseInt("0x"+e.substring(2,4)),n.g=parseInt("0x"+e.substring(4,6)),n.b=parseInt("0x"+e.substring(6,8));break;case a.RGBA:n.r=parseInt("0x"+e.substring(2,4)),n.g=parseInt("0x"+e.substring(4,6)),n.b=parseInt("0x"+e.substring(6,8)),n.a=parseInt("0x"+e.substring(8,10));break;default:}}function m(e){let t;switch(e){case 1:t=a.INTENSITY;break;case 2:t=a.INTENSITY_ALPHA;break;case 3:t=a.RGB;break;case 4:t=a.RGBA;break;default:}return t}function g(e){let t,n=THREE.RepeatWrapping,r=THREE.RepeatWrapping;const o=e.fields;for(let a=0,s=o.length;a<s;a++){const e=o[a],s=e.name,i=e.values;switch(s){case"image":const e=i[0],o=i[1],a=i[2],l=2===a||4===a,c=m(a),u=e*o*(!0===l?4:3),f=new Uint8Array(u),E={r:0,g:0,b:0,a:0};for(let t=3,n=0,r=i.length;t<r;t++,n++)if(x(i[t],c,E),!0===l){const e=4*n;f[e+0]=E.r,f[e+1]=E.g,f[e+2]=E.b,f[e+3]=E.a}else{const e=3*n;f[e+0]=E.r,f[e+1]=E.g,f[e+2]=E.b}t=new THREE.DataTexture(f,e,o,!0===l?THREE.RGBAFormat:THREE.RGBFormat),t.needsUpdate=!0,t.__type=c;break;case"repeatS":!1===i[0]&&(n=THREE.ClampToEdgeWrapping);break;case"repeatT":!1===i[0]&&(r=THREE.ClampToEdgeWrapping);break;default:console.warn("THREE.VRMLLoader: Unknown field:",s);break}}return t&&(t.wrapS=n,t.wrapT=r),t}function k(e){let t,n=THREE.RepeatWrapping,r=THREE.RepeatWrapping;const o=e.fields;for(let a=0,s=o.length;a<s;a++){const e=o[a],s=e.name,i=e.values;switch(s){case"url":const e=i[0];e&&(t=oe.load(e));break;case"repeatS":!1===i[0]&&(n=THREE.ClampToEdgeWrapping);break;case"repeatT":!1===i[0]&&(r=THREE.ClampToEdgeWrapping);break;default:console.warn("THREE.VRMLLoader: Unknown field:",s);break}}return t&&(t.wrapS=n,t.wrapT=r),t}function w(e){const t={center:new THREE.Vector2,rotation:new THREE.Vector2,scale:new THREE.Vector2,translation:new THREE.Vector2},n=e.fields;for(let r=0,o=n.length;r<o;r++){const e=n[r],o=e.name,a=e.values;switch(o){case"center":t.center.set(a[0],a[1]);break;case"rotation":t.rotation=a[0];break;case"scale":t.scale.set(a[0],a[1]);break;case"translation":t.translation.set(a[0],a[1]);break;default:console.warn("THREE.VRMLLoader: Unknown field:",o);break}}return t}function L(e){return e.fields[0].values}function y(e){const t={},n=e.fields;for(let r=0,o=n.length;r<o;r++){const e=n[r],o=e.name,a=e.values;switch(o){case"title":t.title=a[0];break;case"info":t.info=a;break;default:console.warn("THREE.VRMLLoader: Unknown field:",o);break}}return t}function H(e){let t,n,r,o,a,s,i,l,c=!0,u=!0,f=0,d=!0,p=!0;const b=e.fields;for(let k=0,w=b.length;k<w;k++){const e=b[k],h=e.name,T=e.values;switch(h){case"color":const e=T[0];null!==e&&(t=E(e));break;case"coord":const b=T[0];null!==b&&(n=E(b));break;case"normal":const R=T[0];null!==R&&(r=E(R));break;case"texCoord":const x=T[0];null!==x&&(o=E(x));break;case"ccw":c=T[0];break;case"colorIndex":a=T;break;case"colorPerVertex":d=T[0];break;case"convex":break;case"coordIndex":s=T;break;case"creaseAngle":f=T[0];break;case"normalIndex":i=T;break;case"normalPerVertex":p=T[0];break;case"solid":u=T[0];break;case"texCoordIndex":l=T;break;default:console.warn("THREE.VRMLLoader: Unknown field:",h);break}}if(void 0===s)return console.warn("THREE.VRMLLoader: Missing coordIndex."),new THREE.BufferGeometry;const h=F(s,c);let T,R,x;if(t)if(!0===d)if(a&&a.length>0){const e=F(a,c);T=X(h,e,t,3)}else T=Z(h,new THREE.Float32BufferAttribute(t,3));else if(a&&a.length>0){const e=P(t,a),n=O(e,s);T=K(h,n)}else{const e=O(t,s);T=K(h,e)}if(r)if(!0===p)if(i&&i.length>0){const e=F(i,c);R=X(h,e,r,3)}else R=Z(h,new THREE.Float32BufferAttribute(r,3));else if(i&&i.length>0){const e=P(r,i),t=O(e,s);R=K(h,t)}else{const e=O(r,s);R=K(h,e)}else R=ee(h,n,f);if(o)if(l&&l.length>0){const e=F(l,c);x=X(h,e,o,2)}else x=Z(h,new THREE.Float32BufferAttribute(o,2));const m=new THREE.BufferGeometry,g=Z(h,new THREE.Float32BufferAttribute(n,3));return m.setAttribute("position",g),m.setAttribute("normal",R),T&&m.setAttribute("color",T),x&&m.setAttribute("uv",x),m._solid=u,m._type="mesh",m}function S(e){let t,n,r,o,a=!0;const s=e.fields;for(let f=0,d=s.length;f<d;f++){const e=s[f],i=e.name,l=e.values;switch(i){case"color":const e=l[0];null!==e&&(t=E(e));break;case"coord":const s=l[0];null!==s&&(n=E(s));break;case"colorIndex":r=l;break;case"colorPerVertex":a=l[0];break;case"coordIndex":o=l;break;default:console.warn("THREE.VRMLLoader: Unknown field:",i);break}}let i;const l=_(o);if(t)if(!0===a)if(r.length>0){const e=_(r);i=X(l,e,t,3)}else i=Z(l,new THREE.Float32BufferAttribute(t,3));else if(r.length>0){const e=P(t,r),n=G(e,o);i=Q(l,n)}else{const e=G(t,o);i=Q(l,e)}const c=new THREE.BufferGeometry,u=Z(l,new THREE.Float32BufferAttribute(n,3));return c.setAttribute("position",u),i&&c.setAttribute("color",i),c._type="line",c}function A(e){let t,n;const r=e.fields;for(let a=0,s=r.length;a<s;a++){const e=r[a],o=e.name,s=e.values;switch(o){case"color":const e=s[0];null!==e&&(t=E(e));break;case"coord":const r=s[0];null!==r&&(n=E(r));break;default:console.warn("THREE.VRMLLoader: Unknown field:",o);break}}const o=new THREE.BufferGeometry;return o.setAttribute("position",new THREE.Float32BufferAttribute(n,3)),t&&o.setAttribute("color",new THREE.Float32BufferAttribute(t,3)),o._type="points",o}function U(e){const t=new THREE.Vector3(2,2,2),n=e.fields;for(let o=0,a=n.length;o<a;o++){const e=n[o],r=e.name,a=e.values;switch(r){case"size":t.x=a[0],t.y=a[1],t.z=a[2];break;default:console.warn("THREE.VRMLLoader: Unknown field:",r);break}}const r=new THREE.BoxGeometry(t.x,t.y,t.z);return r}function C(e){let t=1,n=2,r=!1;const o=e.fields;for(let s=0,i=o.length;s<i;s++){const e=o[s],a=e.name,i=e.values;switch(a){case"bottom":r=!i[0];break;case"bottomRadius":t=i[0];break;case"height":n=i[0];break;case"side":break;default:console.warn("THREE.VRMLLoader: Unknown field:",a);break}}const a=new THREE.ConeGeometry(t,n,16,1,r);return a}function v(e){let t=1,n=2;const r=e.fields;for(let a=0,s=r.length;a<s;a++){const e=r[a],o=e.name,s=e.values;switch(o){case"bottom":break;case"radius":t=s[0];break;case"height":n=s[0];break;case"side":break;case"top":break;default:console.warn("THREE.VRMLLoader: Unknown field:",o);break}}const o=new THREE.CylinderGeometry(t,t,n,16,1);return o}function M(e){let t=1;const n=e.fields;for(let o=0,a=n.length;o<a;o++){const e=n[o],r=e.name,a=e.values;switch(r){case"radius":t=a[0];break;default:console.warn("THREE.VRMLLoader: Unknown field:",r);break}}const r=new THREE.SphereGeometry(t,16,16);return r}function V(e){let t,n,r,o,a=!0,s=!0,i=!0,l=!0,c=0,u=2,f=2,d=1,p=1;const b=e.fields;for(let H=0,S=b.length;H<S;H++){const e=b[H],h=e.name,T=e.values;switch(h){case"color":const e=T[0];null!==e&&(t=E(e));break;case"normal":const b=T[0];null!==b&&(n=E(b));break;case"texCoord":const R=T[0];null!==R&&(r=E(R));break;case"height":o=T;break;case"ccw":l=T[0];break;case"colorPerVertex":a=T[0];break;case"creaseAngle":c=T[0];break;case"normalPerVertex":s=T[0];break;case"solid":i=T[0];break;case"xDimension":u=T[0];break;case"xSpacing":d=T[0];break;case"zDimension":f=T[0];break;case"zSpacing":p=T[0];break;default:console.warn("THREE.VRMLLoader: Unknown field:",h);break}}const h=[],T=[],R=[],x=[];for(let E=0;E<f;E++)for(let e=0;e<u;e++){const i=E*u+e,l=d*E,c=o[i],b=p*e;if(h.push(l,c,b),t&&!0===a){const e=t[3*i+0],n=t[3*i+1],r=t[3*i+2];R.push(e,n,r)}if(n&&!0===s){const e=n[3*i+0],t=n[3*i+1],r=n[3*i+2];T.push(e,t,r)}if(r){const e=r[2*i+0],t=r[2*i+1];x.push(e,t)}else x.push(E/(u-1),e/(f-1))}const m=[];for(let E=0;E<u-1;E++)for(let e=0;e<f-1;e++){const t=E+e*u,n=E+(e+1)*u,r=E+1+(e+1)*u,o=E+1+e*u;!0===l?(m.push(t,r,n),m.push(r,t,o)):(m.push(t,n,r),m.push(r,o,t))}const g=Z(m,new THREE.Float32BufferAttribute(h,3)),k=Z(m,new THREE.Float32BufferAttribute(x,2));let w,L;if(t)if(!1===a){for(let e=0;e<u-1;e++)for(let n=0;n<f-1;n++){const r=e+n*(u-1),o=t[3*r+0],a=t[3*r+1],s=t[3*r+2];R.push(o,a,s),R.push(o,a,s),R.push(o,a,s),R.push(o,a,s),R.push(o,a,s),R.push(o,a,s)}w=new THREE.Float32BufferAttribute(R,3)}else w=Z(m,new THREE.Float32BufferAttribute(R,3));if(n)if(!1===s){for(let e=0;e<u-1;e++)for(let t=0;t<f-1;t++){const r=e+t*(u-1),o=n[3*r+0],a=n[3*r+1],s=n[3*r+2];T.push(o,a,s),T.push(o,a,s),T.push(o,a,s),T.push(o,a,s),T.push(o,a,s),T.push(o,a,s)}L=new THREE.Float32BufferAttribute(T,3)}else L=Z(m,new THREE.Float32BufferAttribute(T,3));else L=ee(m,h,c);const y=new THREE.BufferGeometry;return y.setAttribute("position",g),y.setAttribute("normal",L),y.setAttribute("uv",k),w&&y.setAttribute("color",w),y._solid=i,y._type="mesh",y}function I(e){let t,n,r=[1,1,1,-1,-1,-1,-1,1,1,1],o=[0,0,0,0,1,0],a=!0,s=!0,i=0,l=!0,c=!0;const u=e.fields;for(let L=0,y=u.length;L<y;L++){const e=u[L],f=e.name,E=e.values;switch(f){case"beginCap":a=E[0];break;case"ccw":s=E[0];break;case"convex":break;case"creaseAngle":i=E[0];break;case"crossSection":r=E;break;case"endCap":l=E[0];break;case"orientation":n=E;break;case"scale":t=E;break;case"solid":c=E[0];break;case"spine":o=E;break;default:console.warn("THREE.VRMLLoader: Unknown field:",f);break}}const f=r[0]===r[r.length-2]&&r[1]===r[r.length-1],E=[],d=new THREE.Vector3,p=new THREE.Vector3,b=new THREE.Vector3,h=new THREE.Vector3,T=new THREE.Quaternion;for(let L=0,y=0,H=0,S=o.length;L<S;L+=3,y+=2,H+=4){d.fromArray(o,L),p.x=t?t[y+0]:1,p.y=1,p.z=t?t[y+1]:1,b.x=n?n[H+0]:0,b.y=n?n[H+1]:0,b.z=n?n[H+2]:1;const e=n?n[H+3]:0;for(let t=0,n=r.length;t<n;t+=2)h.x=r[t+0],h.y=0,h.z=r[t+1],h.multiply(p),T.setFromAxisAngle(b,e),h.applyQuaternion(T),h.add(d),E.push(h.x,h.y,h.z)}const R=[],x=o.length/3,m=r.length/2;for(let L=0;L<x-1;L++)for(let e=0;e<m-1;e++){const t=e+L*m;let n=e+1+L*m;const r=e+(L+1)*m;let o=e+1+(L+1)*m;e===m-2&&!0===f&&(n=L*m,o=(L+1)*m),!0===s?(R.push(t,n,r),R.push(r,n,o)):(R.push(t,r,n),R.push(r,o,n))}if(!0===a||!0===l){const e=[];for(let o=0,a=r.length;o<a;o+=2)e.push(new THREE.Vector2(r[o],r[o+1]));const t=THREE.ShapeUtils.triangulateShape(e,[]),n=[];for(let r=0,o=t.length;r<o;r++){const e=t[r];n.push(e[0],e[1],e[2])}if(!0===a)for(let r=0,o=n.length;r<o;r+=3)!0===s?R.push(n[r+0],n[r+1],n[r+2]):R.push(n[r+0],n[r+2],n[r+1]);if(!0===l){const e=m*(x-1);for(let t=0,r=n.length;t<r;t+=3)!0===s?R.push(e+n[t+0],e+n[t+2],e+n[t+1]):R.push(e+n[t+0],e+n[t+1],e+n[t+2])}}const g=Z(R,new THREE.Float32BufferAttribute(E,3)),k=ee(R,E,i),w=new THREE.BufferGeometry;return w.setAttribute("position",g),w.setAttribute("normal",k),w._solid=c,w._type="mesh",w}function N(e){const t=s[e],n=E(t);return n.isObject3D||n.isMaterial?n.clone():n}function B(e,t){for(let n=0,r=e.length;n<r;n++){const r=E(e[n]);r instanceof THREE.Object3D&&t.add(r)}}function F(e,t){const n=[];let r=0;for(let o=0,a=e.length;o<a;o++){const s=e[r],i=e[o+(t?1:2)],l=e[o+(t?2:1)];n.push(s,i,l),(-1===e[o+3]||o+3>=a)&&(o+=3,r=o+1)}return n}function O(e,t){const n=[];let r=0;for(let o=0,a=t.length;o<a;o++){const s=3*r,i=e[s],l=e[s+1],c=e[s+2];n.push(i,l,c),(-1===t[o+3]||o+3>=a)&&(o+=3,r++)}return n}function P(e,t){const n=[];for(let r=0,o=t.length;r<o;r++){const o=t[r],a=3*o,s=e[a],i=e[a+1],l=e[a+2];n.push(s,i,l)}return n}function _(e){const t=[];for(let n=0,r=e.length;n<r;n++){const o=e[n],a=e[n+1];t.push(o,a),(-1===e[n+2]||n+2>=r)&&(n+=2)}return t}function G(e,t){const n=[];let r=0;for(let o=0,a=t.length;o<a;o++){const s=3*r,i=e[s],l=e[s+1],c=e[s+2];n.push(i,l,c),(-1===t[o+2]||o+2>=a)&&(o+=2,r++)}return n}const z=new THREE.Vector3,D=new THREE.Vector3,W=new THREE.Vector3,Y=new THREE.Vector2,j=new THREE.Vector2,q=new THREE.Vector2;function X(e,t,n,r){const o=[];for(let a=0,s=e.length;a<s;a+=3){const e=t[a],s=t[a+1],i=t[a+2];2===r?(Y.fromArray(n,e*r),j.fromArray(n,s*r),q.fromArray(n,i*r),o.push(Y.x,Y.y),o.push(j.x,j.y),o.push(q.x,q.y)):(z.fromArray(n,e*r),D.fromArray(n,s*r),W.fromArray(n,i*r),o.push(z.x,z.y,z.z),o.push(D.x,D.y,D.z),o.push(W.x,W.y,W.z))}return new THREE.Float32BufferAttribute(o,r)}function K(e,t){const n=[];for(let r=0,o=0,a=e.length;r<a;r+=3,o++)z.fromArray(t,3*o),n.push(z.x,z.y,z.z),n.push(z.x,z.y,z.z),n.push(z.x,z.y,z.z);return new THREE.Float32BufferAttribute(n,3)}function Q(e,t){const n=[];for(let r=0,o=0,a=e.length;r<a;r+=2,o++)z.fromArray(t,3*o),n.push(z.x,z.y,z.z),n.push(z.x,z.y,z.z);return new THREE.Float32BufferAttribute(n,3)}function Z(e,t){const n=t.array,r=t.itemSize,o=new n.constructor(e.length*r);let a=0,s=0;for(let i=0,l=e.length;i<l;i++){a=e[i]*r;for(let e=0;e<r;e++)o[s++]=n[a++]}return new THREE.Float32BufferAttribute(o,r)}const J=new THREE.Vector3,$=new THREE.Vector3;function ee(e,t,n){const r=[],a={};for(let i=0,l=e.length;i<l;i+=3){const n=e[i],s=e[i+1],l=e[i+2],c=new o(n,s,l);z.fromArray(t,3*n),D.fromArray(t,3*s),W.fromArray(t,3*l),$.subVectors(W,D),J.subVectors(z,D),$.cross(J),$.normalize(),c.normal.copy($),void 0===a[n]&&(a[n]=[]),void 0===a[s]&&(a[s]=[]),void 0===a[l]&&(a[l]=[]),a[n].push(c.normal),a[s].push(c.normal),a[l].push(c.normal),r.push(c)}const s=[];for(let o=0,i=r.length;o<i;o++){const e=r[o],i=te(a[e.a],e.normal,n),l=te(a[e.b],e.normal,n),c=te(a[e.c],e.normal,n);z.fromArray(t,3*e.a),D.fromArray(t,3*e.b),W.fromArray(t,3*e.c),s.push(i.x,i.y,i.z),s.push(l.x,l.y,l.z),s.push(c.x,c.y,c.z)}return new THREE.Float32BufferAttribute(s,3)}function te(e,t,n){const r=new THREE.Vector3;if(0===n)r.copy(t);else for(let o=0,a=e.length;o<a;o++)e[o].angleTo(t)<n&&r.add(e[o]);return r.normalize()}function ne(e){const t=[];for(let n=0,r=e.length;n<r;n+=3)t.push(new THREE.Color(e[n],e[n+1],e[n+2]));return t}function re(e,t,n,r,o){const a=[],s=!0===o?0:Math.PI;for(let E=0,d=r.length;E<d;E++){let e=0===E?0:n[E-1];e=!0===o?e:s-e;const r=new THREE.Vector3;r.setFromSphericalCoords(t,e,0),a.push(r)}const i=e.index,l=e.attributes.position,c=new THREE.BufferAttribute(new Float32Array(3*e.attributes.position.count),3),u=new THREE.Vector3,f=new THREE.Color;for(let E=0;E<i.count;E++){const e=i.getX(E);let t,n;u.fromBufferAttribute(l,e);let s=1;for(let r=1;r<a.length;r++){t=r-1,n=r;const e=a[t],i=a[n];if(!0===o){if(u.y<=e.y&&u.y>i.y){s=Math.abs(e.y-u.y)/Math.abs(e.y-i.y);break}}else if(u.y>=e.y&&u.y<i.y){s=Math.abs(e.y-u.y)/Math.abs(e.y-i.y);break}}const d=r[t],p=r[n];f.copy(d).lerp(p,s),c.setXYZ(e,f.r,f.g,f.b)}e.setAttribute("color",c)}const oe=new THREE.TextureLoader(this.manager);if(oe.setPath(this.resourcePath||n).setCrossOrigin(this.crossOrigin),-1===e.indexOf("#VRML V2.0"))throw Error("THREE.VRMLLexer: Version of VRML asset not supported.");const ae=i(e),se=u(ae);return se}}class t{constructor(e){this.lexer=new chevrotain.Lexer(e)}lex(e){const t=this.lexer.tokenize(e);if(t.errors.length>0)throw console.error(t.errors),Error("THREE.VRMLLexer: Lexing errors detected.");return t}}const n=chevrotain.CstParser;class r extends n{constructor(e){super(e);const t=this,n=e["Version"],r=e["LCurly"],o=e["RCurly"],a=e["LSquare"],s=e["RSquare"],i=e["Identifier"],l=e["RouteIdentifier"],c=e["StringLiteral"],u=e["HexLiteral"],f=e["NumberLiteral"],E=e["TrueLiteral"],d=e["FalseLiteral"],p=e["NullLiteral"],b=e["DEF"],h=e["USE"],T=e["ROUTE"],R=e["TO"],x=e["NodeName"];t.RULE("vrml",(function(){t.SUBRULE(t.version),t.AT_LEAST_ONE((function(){t.SUBRULE(t.node)})),t.MANY((function(){t.SUBRULE(t.route)}))})),t.RULE("version",(function(){t.CONSUME(n)})),t.RULE("node",(function(){t.OPTION((function(){t.SUBRULE(t.def)})),t.CONSUME(x),t.CONSUME(r),t.MANY((function(){t.SUBRULE(t.field)})),t.CONSUME(o)})),t.RULE("field",(function(){t.CONSUME(i),t.OR2([{ALT:function(){t.SUBRULE(t.singleFieldValue)}},{ALT:function(){t.SUBRULE(t.multiFieldValue)}}])})),t.RULE("def",(function(){t.CONSUME(b),t.OR([{ALT:function(){t.CONSUME(i)}},{ALT:function(){t.CONSUME(x)}}])})),t.RULE("use",(function(){t.CONSUME(h),t.OR([{ALT:function(){t.CONSUME(i)}},{ALT:function(){t.CONSUME(x)}}])})),t.RULE("singleFieldValue",(function(){t.AT_LEAST_ONE((function(){t.OR([{ALT:function(){t.SUBRULE(t.node)}},{ALT:function(){t.SUBRULE(t.use)}},{ALT:function(){t.CONSUME(c)}},{ALT:function(){t.CONSUME(u)}},{ALT:function(){t.CONSUME(f)}},{ALT:function(){t.CONSUME(E)}},{ALT:function(){t.CONSUME(d)}},{ALT:function(){t.CONSUME(p)}}])}))})),t.RULE("multiFieldValue",(function(){t.CONSUME(a),t.MANY((function(){t.OR([{ALT:function(){t.SUBRULE(t.node)}},{ALT:function(){t.SUBRULE(t.use)}},{ALT:function(){t.CONSUME(c)}},{ALT:function(){t.CONSUME(u)}},{ALT:function(){t.CONSUME(f)}},{ALT:function(){t.CONSUME(p)}}])})),t.CONSUME(s)})),t.RULE("route",(function(){t.CONSUME(T),t.CONSUME(l),t.CONSUME(R),t.CONSUME2(l)})),this.performSelfAnalysis()}}class o{constructor(e,t,n){this.a=e,this.b=t,this.c=n,this.normal=new THREE.Vector3}}const a={INTENSITY:1,INTENSITY_ALPHA:2,RGB:3,RGBA:4};THREE.VRMLLoader=e})();