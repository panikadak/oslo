(function(){class t extends THREE.Loader{constructor(t){super(t)}load(t,e,s,a){const r=this,i=""===this.path?THREE.LoaderUtils.extractUrlBase(t):this.path,o=new THREE.FileLoader(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(t,(function(s){try{e(r.parse(s,i))}catch(o){a?a(o):console.error(o),r.manager.itemError(t)}}),s,a)}setMaterialOptions(t){return this.materialOptions=t,this}parse(t,s){const a=t.split("\n");let r={};const i=/\s+/,o={};for(let e=0;e<a.length;e++){let t=a[e];if(t=t.trim(),0===t.length||"#"===t.charAt(0))continue;const s=t.indexOf(" ");let n=s>=0?t.substring(0,s):t;n=n.toLowerCase();let l=s>=0?t.substring(s+1):"";if(l=l.trim(),"newmtl"===n)r={name:l},o[l]=r;else if("ka"===n||"kd"===n||"ks"===n||"ke"===n){const t=l.split(i,3);r[n]=[parseFloat(t[0]),parseFloat(t[1]),parseFloat(t[2])]}else r[n]=l}const n=new e(this.resourcePath||s,this.materialOptions);return n.setCrossOrigin(this.crossOrigin),n.setManager(this.manager),n.setMaterials(o),n}}class e{constructor(t="",e={}){this.baseUrl=t,this.options=e,this.materialsInfo={},this.materials={},this.materialsArray=[],this.nameLookup={},this.crossOrigin="anonymous",this.side=void 0!==this.options.side?this.options.side:THREE.FrontSide,this.wrap=void 0!==this.options.wrap?this.options.wrap:THREE.RepeatWrapping}setCrossOrigin(t){return this.crossOrigin=t,this}setManager(t){this.manager=t}setMaterials(t){this.materialsInfo=this.convert(t),this.materials={},this.materialsArray=[],this.nameLookup={}}convert(t){if(!this.options)return t;const e={};for(const s in t){const a=t[s],r={};e[s]=r;for(const t in a){let e=!0,s=a[t];const i=t.toLowerCase();switch(i){case"kd":case"ka":case"ks":this.options&&this.options.normalizeRGB&&(s=[s[0]/255,s[1]/255,s[2]/255]),this.options&&this.options.ignoreZeroRGBs&&0===s[0]&&0===s[1]&&0===s[2]&&(e=!1);break;default:break}e&&(r[i]=s)}}return e}preload(){for(const t in this.materialsInfo)this.create(t)}getIndex(t){return this.nameLookup[t]}getAsArray(){let t=0;for(const e in this.materialsInfo)this.materialsArray[t]=this.create(e),this.nameLookup[e]=t,t++;return this.materialsArray}create(t){return void 0===this.materials[t]&&this.createMaterial_(t),this.materials[t]}createMaterial_(t){const e=this,s=this.materialsInfo[t],a={name:t,side:this.side};function r(t,e){return"string"!==typeof e||""===e?"":/^https?:\/\//i.test(e)?e:t+e}function i(t,s){if(a[t])return;const i=e.getTextureParams(s,a),o=e.loadTexture(r(e.baseUrl,i.url));o.repeat.copy(i.scale),o.offset.copy(i.offset),o.wrapS=e.wrap,o.wrapT=e.wrap,a[t]=o}for(const o in s){const t=s[o];let e;if(""!==t)switch(o.toLowerCase()){case"kd":a.color=(new THREE.Color).fromArray(t);break;case"ks":a.specular=(new THREE.Color).fromArray(t);break;case"ke":a.emissive=(new THREE.Color).fromArray(t);break;case"map_kd":i("map",t);break;case"map_ks":i("specularMap",t);break;case"map_ke":i("emissiveMap",t);break;case"norm":i("normalMap",t);break;case"map_bump":case"bump":i("bumpMap",t);break;case"map_d":i("alphaMap",t),a.transparent=!0;break;case"ns":a.shininess=parseFloat(t);break;case"d":e=parseFloat(t),e<1&&(a.opacity=e,a.transparent=!0);break;case"tr":e=parseFloat(t),this.options&&this.options.invertTrProperty&&(e=1-e),e>0&&(a.opacity=1-e,a.transparent=!0);break;default:break}}return this.materials[t]=new THREE.MeshPhongMaterial(a),this.materials[t]}getTextureParams(t,e){const s={scale:new THREE.Vector2(1,1),offset:new THREE.Vector2(0,0)},a=t.split(/\s+/);let r;return r=a.indexOf("-bm"),r>=0&&(e.bumpScale=parseFloat(a[r+1]),a.splice(r,2)),r=a.indexOf("-s"),r>=0&&(s.scale.set(parseFloat(a[r+1]),parseFloat(a[r+2])),a.splice(r,4)),r=a.indexOf("-o"),r>=0&&(s.offset.set(parseFloat(a[r+1]),parseFloat(a[r+2])),a.splice(r,4)),s.url=a.join(" ").trim(),s}loadTexture(t,e,s,a,r){const i=void 0!==this.manager?this.manager:THREE.DefaultLoadingManager;let o=i.getHandler(t);null===o&&(o=new THREE.TextureLoader(i)),o.setCrossOrigin&&o.setCrossOrigin(this.crossOrigin);const n=o.load(t,s,a,r);return void 0!==e&&(n.mapping=e),n}}THREE.MTLLoader=t})();