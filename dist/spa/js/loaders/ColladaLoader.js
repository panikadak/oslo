(function(){class e extends THREE.Loader{constructor(e){super(e)}load(e,t,n,s){const r=this,o=""===r.path?THREE.LoaderUtils.extractUrlBase(e):r.path,a=new THREE.FileLoader(r.manager);a.setPath(r.path),a.setRequestHeader(r.requestHeader),a.setWithCredentials(r.withCredentials),a.load(e,(function(n){try{t(r.parse(n,o))}catch(a){s?s(a):console.error(a),r.manager.itemError(e)}}),n,s)}parse(e,t){function n(e,t){const n=[],s=e.childNodes;for(let r=0,o=s.length;r<o;r++){const e=s[r];e.nodeName===t&&n.push(e)}return n}function s(e){if(0===e.length)return[];const t=e.trim().split(/\s+/),n=new Array(t.length);for(let s=0,r=t.length;s<r;s++)n[s]=t[s];return n}function r(e){if(0===e.length)return[];const t=e.trim().split(/\s+/),n=new Array(t.length);for(let s=0,r=t.length;s<r;s++)n[s]=parseFloat(t[s]);return n}function o(e){if(0===e.length)return[];const t=e.trim().split(/\s+/),n=new Array(t.length);for(let s=0,r=t.length;s<r;s++)n[s]=parseInt(t[s]);return n}function a(e){return e.substring(1)}function i(){return"three_default_"+xt++}function c(e){return 0===Object.keys(e).length}function l(e){return{unit:d(n(e,"unit")[0]),upAxis:u(n(e,"up_axis")[0])}}function d(e){return void 0!==e&&!0===e.hasAttribute("meter")?parseFloat(e.getAttribute("meter")):1}function u(e){return void 0!==e?e.textContent:"Y_UP"}function f(e,t,s,r){const o=n(e,t)[0];if(void 0!==o){const e=n(o,s);for(let t=0;t<e.length;t++)r(e[t])}}function h(e,t){for(const n in e){const s=e[n];s.build=t(e[n])}}function m(e,t){return void 0!==e.build||(e.build=t(e)),e.build}function p(e){const t={sources:{},samplers:{},channels:{}};let n=!1;for(let s=0,r=e.childNodes.length;s<r;s++){const r=e.childNodes[s];if(1!==r.nodeType)continue;let o;switch(r.nodeName){case"source":o=r.getAttribute("id"),t.sources[o]=Te(r);break;case"sampler":o=r.getAttribute("id"),t.samplers[o]=b(r);break;case"channel":o=r.getAttribute("target"),t.channels[o]=g(r);break;case"animation":p(r),n=!0;break;default:console.log(r)}}!1===n&&(At.animations[e.getAttribute("id")||THREE.MathUtils.generateUUID()]=t)}function b(e){const t={inputs:{}};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"input":const e=a(s.getAttribute("source")),n=s.getAttribute("semantic");t.inputs[n]=e;break}}return t}function g(e){const t={},n=e.getAttribute("target");let s=n.split("/");const r=s.shift();let o=s.shift();const i=-1!==o.indexOf("("),c=-1!==o.indexOf(".");if(c)s=o.split("."),o=s.shift(),t.member=s.shift();else if(i){const e=o.split("(");o=e.shift();for(let t=0;t<e.length;t++)e[t]=parseInt(e[t].replace(/\)/,""));t.indices=e}return t.id=r,t.sid=o,t.arraySyntax=i,t.memberSyntax=c,t.sampler=a(e.getAttribute("source")),t}function y(e){const t=[],n=e.channels,s=e.samplers,r=e.sources;for(const o in n)if(n.hasOwnProperty(o)){const e=n[o],a=s[e.sampler],i=a.inputs.INPUT,c=a.inputs.OUTPUT,l=r[i],d=r[c],u=k(e,l,d);A(u,t)}return t}function E(e){return m(At.animations[e],y)}function k(e,t,n){const s=At.nodes[e.id],r=it(s.id),o=s.transforms[e.sid],a=s.matrix.clone().transpose();let i,c,l,d,u,f;const h={};switch(o){case"matrix":for(l=0,d=t.array.length;l<d;l++)if(i=t.array[l],c=l*n.stride,void 0===h[i]&&(h[i]={}),!0===e.arraySyntax){const t=n.array[c],s=e.indices[0]+4*e.indices[1];h[i][s]=t}else for(u=0,f=n.stride;u<f;u++)h[i][u]=n.array[c+u];break;case"translate":console.warn('THREE.ColladaLoader: Animation transform type "%s" not yet implemented.',o);break;case"rotate":console.warn('THREE.ColladaLoader: Animation transform type "%s" not yet implemented.',o);break;case"scale":console.warn('THREE.ColladaLoader: Animation transform type "%s" not yet implemented.',o);break}const m=N(h,a),p={name:r.uuid,keyframes:m};return p}function N(e,t){const n=[];for(const r in e)n.push({time:parseFloat(r),value:e[r]});n.sort(s);for(let r=0;r<16;r++)R(n,r,t.elements[r]);return n;function s(e,t){return e.time-t.time}}const T=new THREE.Vector3,w=new THREE.Vector3,x=new THREE.Quaternion;function A(e,t){const n=e.keyframes,s=e.name,r=[],o=[],a=[],i=[];for(let c=0,l=n.length;c<l;c++){const e=n[c],t=e.time,s=e.value;Ze.fromArray(s).transpose(),Ze.decompose(T,x,w),r.push(t),o.push(T.x,T.y,T.z),a.push(x.x,x.y,x.z,x.w),i.push(w.x,w.y,w.z)}return o.length>0&&t.push(new THREE.VectorKeyframeTrack(s+".position",r,o)),a.length>0&&t.push(new THREE.QuaternionKeyframeTrack(s+".quaternion",r,a)),i.length>0&&t.push(new THREE.VectorKeyframeTrack(s+".scale",r,i)),t}function R(e,t,n){let s,r,o,a=!0;for(r=0,o=e.length;r<o;r++)s=e[r],void 0===s.value[t]?s.value[t]=null:a=!1;if(!0===a)for(r=0,o=e.length;r<o;r++)s=e[r],s.value[t]=n;else v(e,t)}function v(e,t){let n,s;for(let r=0,o=e.length;r<o;r++){const o=e[r];if(null===o.value[t]){if(n=H(e,r,t),s=C(e,r,t),null===n){o.value[t]=s.value[t];continue}if(null===s){o.value[t]=n.value[t];continue}_(o,n,s,t)}}}function H(e,t,n){while(t>=0){const s=e[t];if(null!==s.value[n])return s;t--}return null}function C(e,t,n){while(t<e.length){const s=e[t];if(null!==s.value[n])return s;t++}return null}function _(e,t,n,s){n.time-t.time!==0?e.value[s]=(e.time-t.time)*(n.value[s]-t.value[s])/(n.time-t.time)+t.value[s]:e.value[s]=t.value[s]}function M(e){const t={name:e.getAttribute("id")||"default",start:parseFloat(e.getAttribute("start")||0),end:parseFloat(e.getAttribute("end")||0),animations:[]};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"instance_animation":t.animations.push(a(s.getAttribute("url")));break}}At.clips[e.getAttribute("id")]=t}function L(e){const t=[],n=e.name,s=e.end-e.start||-1,r=e.animations;for(let o=0,a=r.length;o<a;o++){const e=E(r[o]);for(let n=0,s=e.length;n<s;n++)t.push(e[n])}return new THREE.AnimationClip(n,s,t)}function O(e){return m(At.clips[e],L)}function I(e){const t={};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"skin":t.id=a(s.getAttribute("source")),t.skin=j(s);break;case"morph":t.id=a(s.getAttribute("source")),console.warn("THREE.ColladaLoader: Morph target animation not supported yet.");break}}At.controllers[e.getAttribute("id")]=t}function j(e){const t={sources:{}};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"bind_shape_matrix":t.bindShapeMatrix=r(s.textContent);break;case"source":const e=s.getAttribute("id");t.sources[e]=Te(s);break;case"joints":t.joints=q(s);break;case"vertex_weights":t.vertexWeights=S(s);break}}return t}function q(e){const t={inputs:{}};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"input":const e=s.getAttribute("semantic"),n=a(s.getAttribute("source"));t.inputs[e]=n;break}}return t}function S(e){const t={inputs:{}};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"input":const e=s.getAttribute("semantic"),n=a(s.getAttribute("source")),r=parseInt(s.getAttribute("offset"));t.inputs[e]={id:n,offset:r};break;case"vcount":t.vcount=o(s.textContent);break;case"v":t.v=o(s.textContent);break}}return t}function U(e){const t={id:e.id},n=At.geometries[t.id];return void 0!==e.skin&&(t.skin=F(e.skin),n.sources.skinIndices=t.skin.indices,n.sources.skinWeights=t.skin.weights),t}function F(e){const t=4,n={joints:[],indices:{array:[],stride:t},weights:{array:[],stride:t}},s=e.sources,r=e.vertexWeights,o=r.vcount,a=r.v,i=r.inputs.JOINT.offset,c=r.inputs.WEIGHT.offset,l=e.sources[e.joints.inputs.JOINT],d=e.sources[e.joints.inputs.INV_BIND_MATRIX],u=s[r.inputs.WEIGHT.id].array;let f,h,m,p=0;for(f=0,m=o.length;f<m;f++){const e=o[f],s=[];for(h=0;h<e;h++){const e=a[p+i],t=a[p+c],n=u[t];s.push({index:e,weight:n}),p+=2}for(s.sort(b),h=0;h<t;h++){const e=s[h];void 0!==e?(n.indices.array.push(e.index),n.weights.array.push(e.weight)):(n.indices.array.push(0),n.weights.array.push(0))}}for(e.bindShapeMatrix?n.bindMatrix=(new THREE.Matrix4).fromArray(e.bindShapeMatrix).transpose():n.bindMatrix=(new THREE.Matrix4).identity(),f=0,m=l.array.length;f<m;f++){const e=l.array[f],t=(new THREE.Matrix4).fromArray(d.array,f*d.stride).transpose();n.joints.push({name:e,boneInverse:t})}return n;function b(e,t){return t.weight-e.weight}}function B(e){return m(At.controllers[e],U)}function V(e){const t={init_from:n(e,"init_from")[0].textContent};At.images[e.getAttribute("id")]=t}function P(e){return void 0!==e.build?e.build:e.init_from}function D(e){const t=At.images[e];return void 0!==t?m(t,P):(console.warn("THREE.ColladaLoader: Couldn't find image with ID:",e),null)}function W(e){const t={};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"profile_COMMON":t.profile=z(s);break}}At.effects[e.getAttribute("id")]=t}function z(e){const t={surfaces:{},samplers:{}};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"newparam":G(s,t);break;case"technique":t.technique=K(s);break;case"extra":t.extra=te(s);break}}return t}function G(e,t){const n=e.getAttribute("sid");for(let s=0,r=e.childNodes.length;s<r;s++){const r=e.childNodes[s];if(1===r.nodeType)switch(r.nodeName){case"surface":t.surfaces[n]=J(r);break;case"sampler2D":t.samplers[n]=X(r);break}}}function J(e){const t={};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"init_from":t.init_from=s.textContent;break}}return t}function X(e){const t={};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"source":t.source=s.textContent;break}}return t}function K(e){const t={};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"constant":case"lambert":case"blinn":case"phong":t.type=s.nodeName,t.parameters=Z(s);break;case"extra":t.extra=te(s);break}}return t}function Z(e){const t={};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"emission":case"diffuse":case"specular":case"bump":case"ambient":case"shininess":case"transparency":t[s.nodeName]=Q(s);break;case"transparent":t[s.nodeName]={opaque:s.hasAttribute("opaque")?s.getAttribute("opaque"):"A_ONE",data:Q(s)};break}}return t}function Q(e){const t={};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"color":t[s.nodeName]=r(s.textContent);break;case"float":t[s.nodeName]=parseFloat(s.textContent);break;case"texture":t[s.nodeName]={id:s.getAttribute("texture"),extra:Y(s)};break}}return t}function Y(e){const t={technique:{}};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"extra":$(s,t);break}}return t}function $(e,t){for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"technique":ee(s,t);break}}}function ee(e,t){for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"repeatU":case"repeatV":case"offsetU":case"offsetV":t.technique[s.nodeName]=parseFloat(s.textContent);break;case"wrapU":case"wrapV":"TRUE"===s.textContent.toUpperCase()?t.technique[s.nodeName]=1:"FALSE"===s.textContent.toUpperCase()?t.technique[s.nodeName]=0:t.technique[s.nodeName]=parseInt(s.textContent);break;case"bump":t[s.nodeName]=se(s);break}}}function te(e){const t={};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"technique":t.technique=ne(s);break}}return t}function ne(e){const t={};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"double_sided":t[s.nodeName]=parseInt(s.textContent);break;case"bump":t[s.nodeName]=se(s);break}}return t}function se(e){for(var t={},n=0,s=e.childNodes.length;n<s;n++){var r=e.childNodes[n];if(1===r.nodeType)switch(r.nodeName){case"texture":t[r.nodeName]={id:r.getAttribute("texture"),texcoord:r.getAttribute("texcoord"),extra:Y(r)};break}}return t}function re(e){return e}function oe(e){return m(At.effects[e],re)}function ae(e){const t={name:e.getAttribute("name")};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"instance_effect":t.url=a(s.getAttribute("url"));break}}At.materials[e.getAttribute("id")]=t}function ie(e){let t,n=e.slice(2+(e.lastIndexOf(".")-1>>>0));switch(n=n.toLowerCase(),n){case"tga":t=Nt;break;default:t=kt}return t}function ce(e){const t=oe(e.url),n=t.profile.technique;let s;switch(n.type){case"phong":case"blinn":s=new THREE.MeshPhongMaterial;break;case"lambert":s=new THREE.MeshLambertMaterial;break;default:s=new THREE.MeshBasicMaterial;break}function r(e){const n=t.profile.samplers[e.id];let s=null;if(void 0!==n){const e=t.profile.surfaces[n.source];s=D(e.init_from)}else console.warn("THREE.ColladaLoader: Undefined sampler. Access image directly (see #12530)."),s=D(e.id);if(null!==s){const t=ie(s);if(void 0!==t){const n=t.load(s),r=e.extra;if(void 0!==r&&void 0!==r.technique&&!1===c(r.technique)){const e=r.technique;n.wrapS=e.wrapU?THREE.RepeatWrapping:THREE.ClampToEdgeWrapping,n.wrapT=e.wrapV?THREE.RepeatWrapping:THREE.ClampToEdgeWrapping,n.offset.set(e.offsetU||0,e.offsetV||0),n.repeat.set(e.repeatU||1,e.repeatV||1)}else n.wrapS=THREE.RepeatWrapping,n.wrapT=THREE.RepeatWrapping;return n}return console.warn("THREE.ColladaLoader: THREE.Loader for texture %s not found.",s),null}return console.warn("THREE.ColladaLoader: Couldn't create texture with ID:",e.id),null}s.name=e.name||"";const o=n.parameters;for(const c in o){const e=o[c];switch(c){case"diffuse":e.color&&s.color.fromArray(e.color),e.texture&&(s.map=r(e.texture));break;case"specular":e.color&&s.specular&&s.specular.fromArray(e.color),e.texture&&(s.specularMap=r(e.texture));break;case"bump":e.texture&&(s.normalMap=r(e.texture));break;case"ambient":e.texture&&(s.lightMap=r(e.texture));break;case"shininess":e.float&&s.shininess&&(s.shininess=e.float);break;case"emission":e.color&&s.emissive&&s.emissive.fromArray(e.color),e.texture&&(s.emissiveMap=r(e.texture));break}}let a=o["transparent"],i=o["transparency"];if(void 0===i&&a&&(i={float:1}),void 0===a&&i&&(a={opaque:"A_ONE",data:{color:[1,1,1,1]}}),a&&i)if(a.data.texture)s.transparent=!0;else{const e=a.data.color;switch(a.opaque){case"A_ONE":s.opacity=e[3]*i.float;break;case"RGB_ZERO":s.opacity=1-e[0]*i.float;break;case"A_ZERO":s.opacity=1-e[3]*i.float;break;case"RGB_ONE":s.opacity=e[0]*i.float;break;default:console.warn('THREE.ColladaLoader: Invalid opaque type "%s" of transparent tag.',a.opaque)}s.opacity<1&&(s.transparent=!0)}if(void 0!==n.extra&&void 0!==n.extra.technique){const e=n.extra.technique;for(const t in e){const n=e[t];switch(t){case"double_sided":s.side=1===n?THREE.DoubleSide:THREE.FrontSide;break;case"bump":s.normalMap=r(n.texture),s.normalScale=new THREE.Vector2(1,1);break}}}return s}function le(e){return m(At.materials[e],ce)}function de(e){const t={name:e.getAttribute("name")};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"optics":t.optics=ue(s);break}}At.cameras[e.getAttribute("id")]=t}function ue(e){for(let t=0;t<e.childNodes.length;t++){const n=e.childNodes[t];switch(n.nodeName){case"technique_common":return fe(n)}}return{}}function fe(e){const t={};for(let n=0;n<e.childNodes.length;n++){const s=e.childNodes[n];switch(s.nodeName){case"perspective":case"orthographic":t.technique=s.nodeName,t.parameters=he(s);break}}return t}function he(e){const t={};for(let n=0;n<e.childNodes.length;n++){const s=e.childNodes[n];switch(s.nodeName){case"xfov":case"yfov":case"xmag":case"ymag":case"znear":case"zfar":case"aspect_ratio":t[s.nodeName]=parseFloat(s.textContent);break}}return t}function me(e){let t;switch(e.optics.technique){case"perspective":t=new THREE.PerspectiveCamera(e.optics.parameters.yfov,e.optics.parameters.aspect_ratio,e.optics.parameters.znear,e.optics.parameters.zfar);break;case"orthographic":let n=e.optics.parameters.ymag,s=e.optics.parameters.xmag;const r=e.optics.parameters.aspect_ratio;s=void 0===s?n*r:s,n=void 0===n?s/r:n,s*=.5,n*=.5,t=new THREE.OrthographicCamera(-s,s,n,-n,e.optics.parameters.znear,e.optics.parameters.zfar);break;default:t=new THREE.PerspectiveCamera;break}return t.name=e.name||"",t}function pe(e){const t=At.cameras[e];return void 0!==t?m(t,me):(console.warn("THREE.ColladaLoader: Couldn't find camera with ID:",e),null)}function be(e){let t={};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"technique_common":t=ge(s);break}}At.lights[e.getAttribute("id")]=t}function ge(e){const t={};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"directional":case"point":case"spot":case"ambient":t.technique=s.nodeName,t.parameters=ye(s)}}return t}function ye(e){const t={};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"color":const e=r(s.textContent);t.color=(new THREE.Color).fromArray(e);break;case"falloff_angle":t.falloffAngle=parseFloat(s.textContent);break;case"quadratic_attenuation":const n=parseFloat(s.textContent);t.distance=n?Math.sqrt(1/n):0;break}}return t}function Ee(e){let t;switch(e.technique){case"directional":t=new THREE.DirectionalLight;break;case"point":t=new THREE.PointLight;break;case"spot":t=new THREE.SpotLight;break;case"ambient":t=new THREE.AmbientLight;break}return e.parameters.color&&t.color.copy(e.parameters.color),e.parameters.distance&&(t.distance=e.parameters.distance),t}function ke(e){const t=At.lights[e];return void 0!==t?m(t,Ee):(console.warn("THREE.ColladaLoader: Couldn't find light with ID:",e),null)}function Ne(e){const t={name:e.getAttribute("name"),sources:{},vertices:{},primitives:[]},s=n(e,"mesh")[0];if(void 0!==s){for(let e=0;e<s.childNodes.length;e++){const n=s.childNodes[e];if(1!==n.nodeType)continue;const r=n.getAttribute("id");switch(n.nodeName){case"source":t.sources[r]=Te(n);break;case"vertices":t.vertices=we(n);break;case"polygons":console.warn("THREE.ColladaLoader: Unsupported primitive type: ",n.nodeName);break;case"lines":case"linestrips":case"polylist":case"triangles":t.primitives.push(xe(n));break;default:console.log(n)}}At.geometries[e.getAttribute("id")]=t}}function Te(e){const t={array:[],stride:3};for(let o=0;o<e.childNodes.length;o++){const a=e.childNodes[o];if(1===a.nodeType)switch(a.nodeName){case"float_array":t.array=r(a.textContent);break;case"Name_array":t.array=s(a.textContent);break;case"technique_common":const e=n(a,"accessor")[0];void 0!==e&&(t.stride=parseInt(e.getAttribute("stride")));break}}return t}function we(e){const t={};for(let n=0;n<e.childNodes.length;n++){const s=e.childNodes[n];1===s.nodeType&&(t[s.getAttribute("semantic")]=a(s.getAttribute("source")))}return t}function xe(e){const t={type:e.nodeName,material:e.getAttribute("material"),count:parseInt(e.getAttribute("count")),inputs:{},stride:0,hasUV:!1};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"input":const e=a(s.getAttribute("source")),n=s.getAttribute("semantic"),r=parseInt(s.getAttribute("offset")),i=parseInt(s.getAttribute("set")),c=i>0?n+i:n;t.inputs[c]={id:e,offset:r},t.stride=Math.max(t.stride,r+1),"TEXCOORD"===n&&(t.hasUV=!0);break;case"vcount":t.vcount=o(s.textContent);break;case"p":t.p=o(s.textContent);break}}return t}function Ae(e){const t={};for(let n=0;n<e.length;n++){const s=e[n];void 0===t[s.type]&&(t[s.type]=[]),t[s.type].push(s)}return t}function Re(e){let t=0;for(let n=0,s=e.length;n<s;n++){const s=e[n];!0===s.hasUV&&t++}t>0&&t<e.length&&(e.uvsNeedsFix=!0)}function ve(e){const t={},n=e.sources,s=e.vertices,r=e.primitives;if(0===r.length)return{};const o=Ae(r);for(const a in o){const e=o[a];Re(e),t[a]=He(e,n,s)}return t}function He(e,t,n){const s={},r={array:[],stride:0},o={array:[],stride:0},a={array:[],stride:0},i={array:[],stride:0},c={array:[],stride:0},l={array:[],stride:4},d={array:[],stride:4},u=new THREE.BufferGeometry,f=[];let h=0;for(let m=0;m<e.length;m++){const s=e[m],p=s.inputs;let b=0;switch(s.type){case"lines":case"linestrips":b=2*s.count;break;case"triangles":b=3*s.count;break;case"polylist":for(let e=0;e<s.count;e++){const t=s.vcount[e];switch(t){case 3:b+=3;break;case 4:b+=6;break;default:b+=3*(t-2);break}}break;default:console.warn("THREE.ColladaLoader: Unknow primitive type:",s.type)}u.addGroup(h,b,m),h+=b,s.material&&f.push(s.material);for(const u in p){const f=p[u];switch(u){case"VERTEX":for(const u in n){const h=n[u];switch(u){case"POSITION":const n=r.array.length;if(Ce(s,t[h],f.offset,r.array),r.stride=t[h].stride,t.skinWeights&&t.skinIndices&&(Ce(s,t.skinIndices,f.offset,l.array),Ce(s,t.skinWeights,f.offset,d.array)),!1===s.hasUV&&!0===e.uvsNeedsFix){const e=(r.array.length-n)/r.stride;for(let t=0;t<e;t++)a.array.push(0,0)}break;case"NORMAL":Ce(s,t[h],f.offset,o.array),o.stride=t[h].stride;break;case"COLOR":Ce(s,t[h],f.offset,c.array),c.stride=t[h].stride;break;case"TEXCOORD":Ce(s,t[h],f.offset,a.array),a.stride=t[h].stride;break;case"TEXCOORD1":Ce(s,t[h],f.offset,i.array),a.stride=t[h].stride;break;default:console.warn('THREE.ColladaLoader: Semantic "%s" not handled in geometry build process.',u)}}break;case"NORMAL":Ce(s,t[f.id],f.offset,o.array),o.stride=t[f.id].stride;break;case"COLOR":Ce(s,t[f.id],f.offset,c.array),c.stride=t[f.id].stride;break;case"TEXCOORD":Ce(s,t[f.id],f.offset,a.array),a.stride=t[f.id].stride;break;case"TEXCOORD1":Ce(s,t[f.id],f.offset,i.array),i.stride=t[f.id].stride;break}}}return r.array.length>0&&u.setAttribute("position",new THREE.Float32BufferAttribute(r.array,r.stride)),o.array.length>0&&u.setAttribute("normal",new THREE.Float32BufferAttribute(o.array,o.stride)),c.array.length>0&&u.setAttribute("color",new THREE.Float32BufferAttribute(c.array,c.stride)),a.array.length>0&&u.setAttribute("uv",new THREE.Float32BufferAttribute(a.array,a.stride)),i.array.length>0&&u.setAttribute("uv2",new THREE.Float32BufferAttribute(i.array,i.stride)),l.array.length>0&&u.setAttribute("skinIndex",new THREE.Float32BufferAttribute(l.array,l.stride)),d.array.length>0&&u.setAttribute("skinWeight",new THREE.Float32BufferAttribute(d.array,d.stride)),s.data=u,s.type=e[0].type,s.materialKeys=f,s}function Ce(e,t,n,s){const r=e.p,o=e.stride,a=e.vcount;function i(e){let t=r[e+n]*l;const o=t+l;for(;t<o;t++)s.push(c[t])}const c=t.array,l=t.stride;if(void 0!==e.vcount){let e=0;for(let t=0,n=a.length;t<n;t++){const n=a[t];if(4===n){const t=e+0*o,n=e+1*o,s=e+2*o,r=e+3*o;i(t),i(n),i(r),i(n),i(s),i(r)}else if(3===n){const t=e+0*o,n=e+1*o,s=e+2*o;i(t),i(n),i(s)}else if(n>4)for(let t=1,s=n-2;t<=s;t++){const n=e+0*o,s=e+o*t,r=e+o*(t+1);i(n),i(s),i(r)}e+=o*n}}else for(let d=0,u=r.length;d<u;d+=o)i(d)}function _e(e){return m(At.geometries[e],ve)}function Me(e){const t={name:e.getAttribute("name")||"",joints:{},links:[]};for(let n=0;n<e.childNodes.length;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"technique_common":Ie(s,t);break}}At.kinematicsModels[e.getAttribute("id")]=t}function Le(e){return void 0!==e.build?e.build:e}function Oe(e){return m(At.kinematicsModels[e],Le)}function Ie(e,t){for(let n=0;n<e.childNodes.length;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"joint":t.joints[s.getAttribute("sid")]=je(s);break;case"link":t.links.push(Se(s));break}}}function je(e){let t;for(let n=0;n<e.childNodes.length;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"prismatic":case"revolute":t=qe(s);break}}return t}function qe(e){const t={sid:e.getAttribute("sid"),name:e.getAttribute("name")||"",axis:new THREE.Vector3,limits:{min:0,max:0},type:e.nodeName,static:!1,zeroPosition:0,middlePosition:0};for(let n=0;n<e.childNodes.length;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"axis":const e=r(s.textContent);t.axis.fromArray(e);break;case"limits":const n=s.getElementsByTagName("max")[0],o=s.getElementsByTagName("min")[0];t.limits.max=parseFloat(n.textContent),t.limits.min=parseFloat(o.textContent);break}}return t.limits.min>=t.limits.max&&(t.static=!0),t.middlePosition=(t.limits.min+t.limits.max)/2,t}function Se(e){const t={sid:e.getAttribute("sid"),name:e.getAttribute("name")||"",attachments:[],transforms:[]};for(let n=0;n<e.childNodes.length;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"attachment_full":t.attachments.push(Ue(s));break;case"matrix":case"translate":case"rotate":t.transforms.push(Fe(s));break}}return t}function Ue(e){const t={joint:e.getAttribute("joint").split("/").pop(),transforms:[],links:[]};for(let n=0;n<e.childNodes.length;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"link":t.links.push(Se(s));break;case"matrix":case"translate":case"rotate":t.transforms.push(Fe(s));break}}return t}function Fe(e){const t={type:e.nodeName},n=r(e.textContent);switch(t.type){case"matrix":t.obj=new THREE.Matrix4,t.obj.fromArray(n).transpose();break;case"translate":t.obj=new THREE.Vector3,t.obj.fromArray(n);break;case"rotate":t.obj=new THREE.Vector3,t.obj.fromArray(n),t.angle=THREE.MathUtils.degToRad(n[3]);break}return t}function Be(e){const t={name:e.getAttribute("name")||"",rigidBodies:{}};for(let n=0;n<e.childNodes.length;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"rigid_body":t.rigidBodies[s.getAttribute("name")]={},Ve(s,t.rigidBodies[s.getAttribute("name")]);break}}At.physicsModels[e.getAttribute("id")]=t}function Ve(e,t){for(let n=0;n<e.childNodes.length;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"technique_common":Pe(s,t);break}}}function Pe(e,t){for(let n=0;n<e.childNodes.length;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"inertia":t.inertia=r(s.textContent);break;case"mass":t.mass=r(s.textContent)[0];break}}}function De(e){const t={bindJointAxis:[]};for(let n=0;n<e.childNodes.length;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"bind_joint_axis":t.bindJointAxis.push(We(s));break}}At.kinematicsScenes[a(e.getAttribute("url"))]=t}function We(e){const t={target:e.getAttribute("target").split("/").pop()};for(let n=0;n<e.childNodes.length;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"axis":const e=s.getElementsByTagName("param")[0];t.axis=e.textContent;const n=t.axis.split("inst_").pop().split("axis")[0];t.jointIndex=n.substr(0,n.length-1);break}}return t}function ze(e){return void 0!==e.build?e.build:e}function Ge(e){return m(At.kinematicsScenes[e],ze)}function Je(){const e=Object.keys(At.kinematicsModels)[0],t=Object.keys(At.kinematicsScenes)[0],n=Object.keys(At.visualScenes)[0];if(void 0===e||void 0===t)return;const s=Oe(e),r=Ge(t),o=ut(n),a=r.bindJointAxis,i={};for(let d=0,u=a.length;d<u;d++){const e=a[d],t=bt.querySelector('[sid="'+e.target+'"]');if(t){const n=t.parentElement;c(e.jointIndex,n)}}function c(e,t){const n=t.getAttribute("name"),r=s.joints[e];o.traverse((function(s){s.name===n&&(i[e]={object:s,transforms:Xe(t),joint:r,position:r.zeroPosition})}))}const l=new THREE.Matrix4;wt={joints:s&&s.joints,getJointValue:function(e){const t=i[e];if(t)return t.position;console.warn("THREE.ColladaLoader: Joint "+e+" doesn't exist.")},setJointValue:function(e,t){const n=i[e];if(n){const s=n.joint;if(t>s.limits.max||t<s.limits.min)console.warn("THREE.ColladaLoader: Joint "+e+" value "+t+" outside of limits (min: "+s.limits.min+", max: "+s.limits.max+").");else if(s.static)console.warn("THREE.ColladaLoader: Joint "+e+" is static.");else{const r=n.object,o=s.axis,a=n.transforms;Ze.identity();for(let n=0;n<a.length;n++){const r=a[n];if(r.sid&&-1!==r.sid.indexOf(e))switch(s.type){case"revolute":Ze.multiply(l.makeRotationAxis(o,THREE.MathUtils.degToRad(t)));break;case"prismatic":Ze.multiply(l.makeTranslation(o.x*t,o.y*t,o.z*t));break;default:console.warn("THREE.ColladaLoader: Unknown joint type: "+s.type);break}else switch(r.type){case"matrix":Ze.multiply(r.obj);break;case"translate":Ze.multiply(l.makeTranslation(r.obj.x,r.obj.y,r.obj.z));break;case"scale":Ze.scale(r.obj);break;case"rotate":Ze.multiply(l.makeRotationAxis(r.obj,r.angle));break}}r.matrix.copy(Ze),r.matrix.decompose(r.position,r.quaternion,r.scale),i[e].position=t}}else console.log("THREE.ColladaLoader: "+e+" does not exist.")}}}function Xe(e){const t=[],n=bt.querySelector('[id="'+e.id+'"]');for(let s=0;s<n.childNodes.length;s++){const e=n.childNodes[s];if(1!==e.nodeType)continue;let o,a;switch(e.nodeName){case"matrix":o=r(e.textContent);const n=(new THREE.Matrix4).fromArray(o).transpose();t.push({sid:e.getAttribute("sid"),type:e.nodeName,obj:n});break;case"translate":case"scale":o=r(e.textContent),a=(new THREE.Vector3).fromArray(o),t.push({sid:e.getAttribute("sid"),type:e.nodeName,obj:a});break;case"rotate":o=r(e.textContent),a=(new THREE.Vector3).fromArray(o);const s=THREE.MathUtils.degToRad(o[3]);t.push({sid:e.getAttribute("sid"),type:e.nodeName,obj:a,angle:s});break}}return t}function Ke(e){const t=e.getElementsByTagName("node");for(let n=0;n<t.length;n++){const e=t[n];!1===e.hasAttribute("id")&&e.setAttribute("id",i())}}const Ze=new THREE.Matrix4,Qe=new THREE.Vector3;function Ye(e){const t={name:e.getAttribute("name")||"",type:e.getAttribute("type"),id:e.getAttribute("id"),sid:e.getAttribute("sid"),matrix:new THREE.Matrix4,nodes:[],instanceCameras:[],instanceControllers:[],instanceLights:[],instanceGeometries:[],instanceNodes:[],transforms:{}};for(let n=0;n<e.childNodes.length;n++){const s=e.childNodes[n];if(1!==s.nodeType)continue;let o;switch(s.nodeName){case"node":t.nodes.push(s.getAttribute("id")),Ye(s);break;case"instance_camera":t.instanceCameras.push(a(s.getAttribute("url")));break;case"instance_controller":t.instanceControllers.push($e(s));break;case"instance_light":t.instanceLights.push(a(s.getAttribute("url")));break;case"instance_geometry":t.instanceGeometries.push($e(s));break;case"instance_node":t.instanceNodes.push(a(s.getAttribute("url")));break;case"matrix":o=r(s.textContent),t.matrix.multiply(Ze.fromArray(o).transpose()),t.transforms[s.getAttribute("sid")]=s.nodeName;break;case"translate":o=r(s.textContent),Qe.fromArray(o),t.matrix.multiply(Ze.makeTranslation(Qe.x,Qe.y,Qe.z)),t.transforms[s.getAttribute("sid")]=s.nodeName;break;case"rotate":o=r(s.textContent);const e=THREE.MathUtils.degToRad(o[3]);t.matrix.multiply(Ze.makeRotationAxis(Qe.fromArray(o),e)),t.transforms[s.getAttribute("sid")]=s.nodeName;break;case"scale":o=r(s.textContent),t.matrix.scale(Qe.fromArray(o)),t.transforms[s.getAttribute("sid")]=s.nodeName;break;case"extra":break;default:console.log(s)}}return at(t.id)?console.warn("THREE.ColladaLoader: There is already a node with ID %s. Exclude current node from further processing.",t.id):At.nodes[t.id]=t,t}function $e(e){const t={id:a(e.getAttribute("url")),materials:{},skeletons:[]};for(let n=0;n<e.childNodes.length;n++){const s=e.childNodes[n];switch(s.nodeName){case"bind_material":const e=s.getElementsByTagName("instance_material");for(let n=0;n<e.length;n++){const s=e[n],r=s.getAttribute("symbol"),o=s.getAttribute("target");t.materials[r]=a(o)}break;case"skeleton":t.skeletons.push(a(s.textContent));break;default:break}}return t}function et(e,t){const n=[],s=[];let r,o,a;for(r=0;r<e.length;r++){const s=e[r];let o;if(at(s))o=it(s),tt(o,t,n);else if(dt(s)){const e=At.visualScenes[s],r=e.children;for(let s=0;s<r.length;s++){const e=r[s];if("JOINT"===e.type){const s=it(e.id);tt(s,t,n)}}}else console.error("THREE.ColladaLoader: Unable to find root bone of skeleton with ID:",s)}for(r=0;r<t.length;r++)for(o=0;o<n.length;o++)if(a=n[o],a.bone.name===t[r].name){s[r]=a,a.processed=!0;break}for(r=0;r<n.length;r++)a=n[r],!1===a.processed&&(s.push(a),a.processed=!0);const i=[],c=[];for(r=0;r<s.length;r++)a=s[r],i.push(a.bone),c.push(a.boneInverse);return new THREE.Skeleton(i,c)}function tt(e,t,n){e.traverse((function(e){if(!0===e.isBone){let s;for(let n=0;n<t.length;n++){const r=t[n];if(r.name===e.name){s=r.boneInverse;break}}void 0===s&&(s=new THREE.Matrix4),n.push({bone:e,boneInverse:s,processed:!1})}}))}function nt(e){const t=[],n=e.matrix,s=e.nodes,r=e.type,o=e.instanceCameras,a=e.instanceControllers,i=e.instanceLights,c=e.instanceGeometries,l=e.instanceNodes;for(let u=0,f=s.length;u<f;u++)t.push(it(s[u]));for(let u=0,f=o.length;u<f;u++){const e=pe(o[u]);null!==e&&t.push(e.clone())}for(let u=0,f=a.length;u<f;u++){const e=a[u],n=B(e.id),s=_e(n.id),r=ot(s,e.materials),o=e.skeletons,i=n.skin.joints,c=et(o,i);for(let a=0,l=r.length;a<l;a++){const e=r[a];e.isSkinnedMesh&&(e.bind(c,n.skin.bindMatrix),e.normalizeSkinWeights()),t.push(e)}}for(let u=0,f=i.length;u<f;u++){const e=ke(i[u]);null!==e&&t.push(e.clone())}for(let u=0,f=c.length;u<f;u++){const e=c[u],n=_e(e.id),s=ot(n,e.materials);for(let r=0,o=s.length;r<o;r++)t.push(s[r])}for(let u=0,f=l.length;u<f;u++)t.push(it(l[u]).clone());let d;if(0===s.length&&1===t.length)d=t[0];else{d="JOINT"===r?new THREE.Bone:new THREE.Group;for(let e=0;e<t.length;e++)d.add(t[e])}return d.name="JOINT"===r?e.sid:e.name,d.matrix.copy(n),d.matrix.decompose(d.position,d.quaternion,d.scale),d}const st=new THREE.MeshBasicMaterial({color:16711935});function rt(e,t){const n=[];for(let s=0,r=e.length;s<r;s++){const r=t[e[s]];void 0===r?(console.warn("THREE.ColladaLoader: Material with key %s not found. Apply fallback material.",e[s]),n.push(st)):n.push(le(r))}return n}function ot(e,t){const n=[];for(const s in e){const r=e[s],o=rt(r.materialKeys,t);0===o.length&&("lines"===s||"linestrips"===s?o.push(new THREE.LineBasicMaterial):o.push(new THREE.MeshPhongMaterial));const a=void 0!==r.data.attributes.skinIndex,i=1===o.length?o[0]:o;let c;switch(s){case"lines":c=new THREE.LineSegments(r.data,i);break;case"linestrips":c=new THREE.Line(r.data,i);break;case"triangles":case"polylist":c=a?new THREE.SkinnedMesh(r.data,i):new THREE.Mesh(r.data,i);break}n.push(c)}return n}function at(e){return void 0!==At.nodes[e]}function it(e){return m(At.nodes[e],nt)}function ct(e){const t={name:e.getAttribute("name"),children:[]};Ke(e);const s=n(e,"node");for(let n=0;n<s.length;n++)t.children.push(Ye(s[n]));At.visualScenes[e.getAttribute("id")]=t}function lt(e){const t=new THREE.Group;t.name=e.name;const n=e.children;for(let s=0;s<n.length;s++){const e=n[s];t.add(it(e.id))}return t}function dt(e){return void 0!==At.visualScenes[e]}function ut(e){return m(At.visualScenes[e],lt)}function ft(e){const t=n(e,"instance_visual_scene")[0];return ut(a(t.getAttribute("url")))}function ht(){const e=At.clips;if(!0===c(e)){if(!1===c(At.animations)){const e=[];for(const t in At.animations){const n=E(t);for(let t=0,s=n.length;t<s;t++)e.push(n[t])}Tt.push(new THREE.AnimationClip("default",-1,e))}}else for(const t in e)Tt.push(O(t))}function mt(e){let t="";const n=[e];while(n.length){const e=n.shift();e.nodeType===Node.TEXT_NODE?t+=e.textContent:(t+="\n",n.push.apply(n,e.childNodes))}return t.trim()}if(0===e.length)return{scene:new THREE.Scene};const pt=(new DOMParser).parseFromString(e,"application/xml"),bt=n(pt,"COLLADA")[0],gt=pt.getElementsByTagName("parsererror")[0];if(void 0!==gt){const e=n(gt,"div")[0];let t;return t=e?e.textContent:mt(gt),console.error("THREE.ColladaLoader: Failed to parse collada file.\n",t),null}const yt=bt.getAttribute("version");console.log("THREE.ColladaLoader: File version",yt);const Et=l(n(bt,"asset")[0]),kt=new THREE.TextureLoader(this.manager);let Nt;kt.setPath(this.resourcePath||t).setCrossOrigin(this.crossOrigin),THREE.TGALoader&&(Nt=new THREE.TGALoader(this.manager),Nt.setPath(this.resourcePath||t));const Tt=[];let wt={},xt=0;const At={animations:{},clips:{},controllers:{},images:{},effects:{},materials:{},cameras:{},lights:{},geometries:{},nodes:{},visualScenes:{},kinematicsModels:{},physicsModels:{},kinematicsScenes:{}};f(bt,"library_animations","animation",p),f(bt,"library_animation_clips","animation_clip",M),f(bt,"library_controllers","controller",I),f(bt,"library_images","image",V),f(bt,"library_effects","effect",W),f(bt,"library_materials","material",ae),f(bt,"library_cameras","camera",de),f(bt,"library_lights","light",be),f(bt,"library_geometries","geometry",Ne),f(bt,"library_nodes","node",Ye),f(bt,"library_visual_scenes","visual_scene",ct),f(bt,"library_kinematics_models","kinematics_model",Me),f(bt,"library_physics_models","physics_model",Be),f(bt,"scene","instance_kinematics_scene",De),h(At.animations,y),h(At.clips,L),h(At.controllers,U),h(At.images,P),h(At.effects,re),h(At.materials,ce),h(At.cameras,me),h(At.lights,Ee),h(At.geometries,ve),h(At.visualScenes,lt),ht(),Je();const Rt=ft(n(bt,"scene")[0]);return Rt.animations=Tt,"Z_UP"===Et.upAxis&&Rt.quaternion.setFromEuler(new THREE.Euler(-Math.PI/2,0,0)),Rt.scale.multiplyScalar(Et.unit),{get animations(){return console.warn("THREE.ColladaLoader: Please access animations over scene.animations now."),Tt},kinematics:wt,library:At,scene:Rt}}}THREE.ColladaLoader=e})();