(function(){class e extends THREE.Loader{constructor(e){super(e)}load(e,t,n,o){const a=this,l=new THREE.FileLoader(a.manager);l.setPath(a.path),l.setResponseType("arraybuffer"),l.setRequestHeader(a.requestHeader),l.setWithCredentials(a.withCredentials),l.load(e,(function(n){try{t(a.parse(n))}catch(l){o?o(l):console.error(l),a.manager.itemError(e)}}),n,o)}parse(e){function t(e){let t=new DataView(e);const n=String.fromCharCode(t.getUint8(0),t.getUint8(1));if("PK"===n){let n=null,o=null;console.log("THREE.AMFLoader: Loading Zip");try{n=fflate.unzipSync(new Uint8Array(e))}catch(l){if(l instanceof ReferenceError)return console.log("THREE.AMFLoader: fflate missing and file is compressed."),null}for(o in n)if(".amf"===o.toLowerCase().substr(-4))break;console.log("THREE.AMFLoader: Trying to load file asset: "+o),t=new DataView(n[o].buffer)}const o=THREE.LoaderUtils.decodeText(t),a=(new DOMParser).parseFromString(o,"application/xml");return"amf"!==a.documentElement.nodeName.toLowerCase()?(console.log("THREE.AMFLoader: Error loading AMF - no AMF document found."),null):a}function n(e){let t=1,n="millimeter";void 0!==e.documentElement.attributes.unit&&(n=e.documentElement.attributes.unit.value.toLowerCase());const o={millimeter:1,inch:25.4,feet:304.8,meter:1e3,micron:.001};return void 0!==o[n]&&(t=o[n]),console.log("THREE.AMFLoader: Unit scale: "+t),t}function o(e){let t="AMF Material";const n=e.attributes.id.textContent;let o={r:1,g:1,b:1,a:1},l=null;for(let r=0;r<e.childNodes.length;r++){const n=e.childNodes[r];"metadata"===n.nodeName&&void 0!==n.attributes.type?"name"===n.attributes.type.value&&(t=n.textContent):"color"===n.nodeName&&(o=a(n))}return l=new THREE.MeshPhongMaterial({flatShading:!0,color:new THREE.Color(o.r,o.g,o.b),name:t}),1!==o.a&&(l.transparent=!0,l.opacity=o.a),{id:n,material:l}}function a(e){const t={r:1,g:1,b:1,a:1};for(let n=0;n<e.childNodes.length;n++){const o=e.childNodes[n];"r"===o.nodeName?t.r=o.textContent:"g"===o.nodeName?t.g=o.textContent:"b"===o.nodeName?t.b=o.textContent:"a"===o.nodeName&&(t.a=o.textContent)}return t}function l(e){const t={name:"",triangles:[],materialid:null};let n=e.firstElementChild;void 0!==e.attributes.materialid&&(t.materialId=e.attributes.materialid.nodeValue);while(n){if("metadata"===n.nodeName)void 0!==n.attributes.type&&"name"===n.attributes.type.value&&(t.name=n.textContent);else if("triangle"===n.nodeName){const e=n.getElementsByTagName("v1")[0].textContent,o=n.getElementsByTagName("v2")[0].textContent,a=n.getElementsByTagName("v3")[0].textContent;t.triangles.push(e,o,a)}n=n.nextElementSibling}return t}function r(e){const t=[],n=[];let o=e.firstElementChild;while(o){if("vertex"===o.nodeName){let e=o.firstElementChild;while(e){if("coordinates"===e.nodeName){const n=e.getElementsByTagName("x")[0].textContent,o=e.getElementsByTagName("y")[0].textContent,a=e.getElementsByTagName("z")[0].textContent;t.push(n,o,a)}else if("normal"===e.nodeName){const t=e.getElementsByTagName("nx")[0].textContent,o=e.getElementsByTagName("ny")[0].textContent,a=e.getElementsByTagName("nz")[0].textContent;n.push(t,o,a)}e=e.nextElementSibling}}o=o.nextElementSibling}return{vertices:t,normals:n}}function i(e){const t=e.attributes.id.textContent,n={name:"amfobject",meshes:[]};let o=null,i=e.firstElementChild;while(i){if("metadata"===i.nodeName)void 0!==i.attributes.type&&"name"===i.attributes.type.value&&(n.name=i.textContent);else if("color"===i.nodeName)o=a(i);else if("mesh"===i.nodeName){let e=i.firstElementChild;const t={vertices:[],normals:[],volumes:[],color:o};while(e){if("vertices"===e.nodeName){const n=r(e);t.normals=t.normals.concat(n.normals),t.vertices=t.vertices.concat(n.vertices)}else"volume"===e.nodeName&&t.volumes.push(l(e));e=e.nextElementSibling}n.meshes.push(t)}i=i.nextElementSibling}return{id:t,obj:n}}const s=t(e);let m="",d="";const c=n(s),u={},E={},f=s.documentElement.childNodes;let g,h;for(g=0;g<f.length;g++){const e=f[g];if("metadata"===e.nodeName)void 0!==e.attributes.type&&("name"===e.attributes.type.value?m=e.textContent:"author"===e.attributes.type.value&&(d=e.textContent));else if("material"===e.nodeName){const t=o(e);u[t.id]=t.material}else if("object"===e.nodeName){const t=i(e);E[t.id]=t.obj}}const b=new THREE.Group,C=new THREE.MeshPhongMaterial({color:11184895,flatShading:!0});b.name=m,b.userData.author=d,b.userData.loader="AMF";for(const N in E){const e=E[N],t=e.meshes,n=new THREE.Group;for(n.name=e.name||"",g=0;g<t.length;g++){let e=C;const o=t[g],a=new THREE.Float32BufferAttribute(o.vertices,3);let l=null;if(o.normals.length&&(l=new THREE.Float32BufferAttribute(o.normals,3)),o.color){const t=o.color;e=C.clone(),e.color=new THREE.Color(t.r,t.g,t.b),1!==t.a&&(e.transparent=!0,e.opacity=t.a)}const r=o.volumes;for(h=0;h<r.length;h++){const t=r[h],o=new THREE.BufferGeometry;let i=e;o.setIndex(t.triangles),o.setAttribute("position",a.clone()),l&&o.setAttribute("normal",l.clone()),void 0!==u[t.materialId]&&(i=u[t.materialId]),o.scale(c,c,c),n.add(new THREE.Mesh(o,i.clone()))}}b.add(n)}return b}}THREE.AMFLoader=e})();