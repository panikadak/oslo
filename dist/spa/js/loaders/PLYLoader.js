(function(){class e extends THREE.Loader{constructor(e){super(e),this.propertyNameMapping={}}load(e,t,n,s){const r=this,o=new THREE.FileLoader(this.manager);o.setPath(this.path),o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,(function(n){try{t(r.parse(n))}catch(o){s?s(o):console.error(o),r.manager.itemError(e)}}),n,s)}setPropertyNameMapping(e){this.propertyNameMapping=e}parse(e){function t(e){const t=/^ply([\s\S]*)end_header\r?\n/;let n="",s=0;const r=t.exec(e);null!==r&&(n=r[1],s=new Blob([r[0]]).size);const o={comments:[],elements:[],headerLength:s,objInfo:""},a=n.split("\n");let i;function c(e,t){const n={type:e[0]};return"list"===n.type?(n.name=e[3],n.countType=e[1],n.itemType=e[2]):n.name=e[1],n.name in t&&(n.name=t[n.name]),n}for(let l=0;l<a.length;l++){let e=a[l];if(e=e.trim(),""===e)continue;const t=e.split(/\s+/),n=t.shift();switch(e=t.join(" "),n){case"format":o.format=t[0],o.version=t[1];break;case"comment":o.comments.push(e);break;case"element":void 0!==i&&o.elements.push(i),i={},i.name=t[0],i.count=parseInt(t[1]),i.properties=[];break;case"property":i.properties.push(c(t,f.propertyNameMapping));break;case"obj_info":o.objInfo=e;break;default:console.log("unhandled",n,t)}}return void 0!==i&&o.elements.push(i),o}function n(e,t){switch(t){case"char":case"uchar":case"short":case"ushort":case"int":case"uint":case"int8":case"uint8":case"int16":case"uint16":case"int32":case"uint32":return parseInt(e);case"float":case"double":case"float32":case"float64":return parseFloat(e)}}function s(e,t){const s=t.split(/\s+/),r={};for(let o=0;o<e.length;o++)if("list"===e[o].type){const t=[],a=n(s.shift(),e[o].countType);for(let r=0;r<a;r++)t.push(n(s.shift(),e[o].itemType));r[e[o].name]=t}else r[e[o].name]=n(s.shift(),e[o].type);return r}function r(e,t){const n={indices:[],vertices:[],normals:[],uvs:[],faceVertexUvs:[],colors:[]};let r;const i=/end_header\s([\s\S]*)$/;let c="";null!==(r=i.exec(e))&&(c=r[1]);const l=c.split("\n");let u=0,f=0;for(let o=0;o<l.length;o++){let e=l[o];if(e=e.trim(),""===e)continue;f>=t.elements[u].count&&(u++,f=0);const r=s(t.elements[u].properties,e);a(n,t.elements[u].name,r),f++}return o(n)}function o(e){let t=new THREE.BufferGeometry;return e.indices.length>0&&t.setIndex(e.indices),t.setAttribute("position",new THREE.Float32BufferAttribute(e.vertices,3)),e.normals.length>0&&t.setAttribute("normal",new THREE.Float32BufferAttribute(e.normals,3)),e.uvs.length>0&&t.setAttribute("uv",new THREE.Float32BufferAttribute(e.uvs,2)),e.colors.length>0&&t.setAttribute("color",new THREE.Float32BufferAttribute(e.colors,3)),e.faceVertexUvs.length>0&&(t=t.toNonIndexed(),t.setAttribute("uv",new THREE.Float32BufferAttribute(e.faceVertexUvs,2))),t.computeBoundingSphere(),t}function a(e,t,n){function s(e){for(let t=0,s=e.length;t<s;t++){const s=e[t];if(s in n)return s}return null}const r=s(["x","px","posx"])||"x",o=s(["y","py","posy"])||"y",a=s(["z","pz","posz"])||"z",i=s(["nx","normalx"]),c=s(["ny","normaly"]),l=s(["nz","normalz"]),u=s(["s","u","texture_u","tx"]),f=s(["t","v","texture_v","ty"]),p=s(["red","diffuse_red","r","diffuse_r"]),h=s(["green","diffuse_green","g","diffuse_g"]),m=s(["blue","diffuse_blue","b","diffuse_b"]);if("vertex"===t)e.vertices.push(n[r],n[o],n[a]),null!==i&&null!==c&&null!==l&&e.normals.push(n[i],n[c],n[l]),null!==u&&null!==f&&e.uvs.push(n[u],n[f]),null!==p&&null!==h&&null!==m&&e.colors.push(n[p]/255,n[h]/255,n[m]/255);else if("face"===t){const t=n.vertex_indices||n.vertex_index,s=n.texcoord;3===t.length?(e.indices.push(t[0],t[1],t[2]),s&&6===s.length&&(e.faceVertexUvs.push(s[0],s[1]),e.faceVertexUvs.push(s[2],s[3]),e.faceVertexUvs.push(s[4],s[5]))):4===t.length&&(e.indices.push(t[0],t[1],t[3]),e.indices.push(t[1],t[2],t[3]))}}function i(e,t,n,s){switch(n){case"int8":case"char":return[e.getInt8(t),1];case"uint8":case"uchar":return[e.getUint8(t),1];case"int16":case"short":return[e.getInt16(t,s),2];case"uint16":case"ushort":return[e.getUint16(t,s),2];case"int32":case"int":return[e.getInt32(t,s),4];case"uint32":case"uint":return[e.getUint32(t,s),4];case"float32":case"float":return[e.getFloat32(t,s),4];case"float64":case"double":return[e.getFloat64(t,s),8]}}function c(e,t,n,s){const r={};let o,a=0;for(let c=0;c<n.length;c++)if("list"===n[c].type){const l=[];o=i(e,t+a,n[c].countType,s);const u=o[0];a+=o[1];for(let r=0;r<u;r++)o=i(e,t+a,n[c].itemType,s),l.push(o[0]),a+=o[1];r[n[c].name]=l}else o=i(e,t+a,n[c].type,s),r[n[c].name]=o[0],a+=o[1];return[r,a]}function l(e,t){const n={indices:[],vertices:[],normals:[],uvs:[],faceVertexUvs:[],colors:[]},s="binary_little_endian"===t.format,r=new DataView(e,t.headerLength);let i,l=0;for(let o=0;o<t.elements.length;o++)for(let e=0;e<t.elements[o].count;e++){i=c(r,l,t.elements[o].properties,s),l+=i[1];const e=i[0];a(n,t.elements[o].name,e)}return o(n)}let u;const f=this;if(e instanceof ArrayBuffer){const n=THREE.LoaderUtils.decodeText(new Uint8Array(e)),s=t(n);u="ascii"===s.format?r(n,s):l(e,s)}else u=r(e,t(e));return u}}THREE.PLYLoader=e})();