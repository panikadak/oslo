(function(){class t extends THREE.Loader{constructor(t){super(t),this.availableExtensions=[]}load(t,e,r,n){const o=this,s=new THREE.FileLoader(o.manager);s.setPath(o.path),s.setResponseType("arraybuffer"),s.setRequestHeader(o.requestHeader),s.setWithCredentials(o.withCredentials),s.load(t,(function(r){try{e(o.parse(r))}catch(s){n?n(s):console.error(s),o.manager.itemError(t)}}),r,n)}parse(t){const e=this,r=new THREE.TextureLoader(this.manager);function n(t){let e,r,n=null,s=null;const i=[],l=[],a=[],u=[];let c;const p={},d={},h={},g={};try{n=fflate.unzipSync(new Uint8Array(t))}catch(m){if(m instanceof ReferenceError)return console.error("THREE.3MFLoader: fflate missing and file is compressed."),null}for(s in n)s.match(/\_rels\/.rels$/)?e=s:s.match(/3D\/_rels\/.*\.model\.rels$/)?r=s:s.match(/^3D\/.*\.model$/)?i.push(s):s.match(/^3D\/Metadata\/.*\.xml$/)?l.push(s):s.match(/^3D\/Textures?\/.*/)?a.push(s):s.match(/^3D\/Other\/.*/)&&u.push(s);const f=n[e],b=THREE.LoaderUtils.decodeText(f),E=o(b);if(r){const t=n[r],e=THREE.LoaderUtils.decodeText(t);c=o(e)}for(let o=0;o<i.length;o++){const t=i[o],e=n[t],r=THREE.LoaderUtils.decodeText(e),s=(new DOMParser).parseFromString(r,"application/xml");"model"!==s.documentElement.nodeName.toLowerCase()&&console.error("THREE.3MFLoader: Error loading 3MF - no 3MF document found: ",t);const l=s.querySelector("model"),a={};for(let n=0;n<l.attributes.length;n++){const t=l.attributes[n];t.name.match(/^xmlns:(.+)$/)&&(a[t.value]=RegExp.$1)}const u=A(l);u["xml"]=l,0<Object.keys(a).length&&(u["extensions"]=a),p[t]=u}for(let o=0;o<a.length;o++){const t=a[o];h[t]=n[t].buffer}return{rels:E,modelRels:c,model:p,printTicket:d,texture:h,other:g}}function o(t){const e=[],r=(new DOMParser).parseFromString(t,"application/xml"),n=r.querySelectorAll("Relationship");for(let o=0;o<n.length;o++){const t=n[o],r={target:t.getAttribute("Target"),id:t.getAttribute("Id"),type:t.getAttribute("Type")};e.push(r)}return e}function s(t){const e={};for(let r=0;r<t.length;r++){const n=t[r],o=n.getAttribute("name"),s=["Title","Designer","Description","Copyright","LicenseTerms","Rating","CreationDate","ModificationDate"];0<=s.indexOf(o)&&(e[o]=n.textContent)}return e}function i(t){const e={id:t.getAttribute("id"),basematerials:[]},r=t.querySelectorAll("base");for(let n=0;n<r.length;n++){const t=r[n],o=p(t);o.index=n,e.basematerials.push(o)}return e}function l(t){const e={id:t.getAttribute("id"),path:t.getAttribute("path"),contenttype:t.getAttribute("contenttype"),tilestyleu:t.getAttribute("tilestyleu"),tilestylev:t.getAttribute("tilestylev"),filter:t.getAttribute("filter")};return e}function a(t){const e={id:t.getAttribute("id"),texid:t.getAttribute("texid"),displaypropertiesid:t.getAttribute("displaypropertiesid")},r=t.querySelectorAll("tex2coord"),n=[];for(let o=0;o<r.length;o++){const t=r[o],e=t.getAttribute("u"),s=t.getAttribute("v");n.push(parseFloat(e),parseFloat(s))}return e["uvs"]=new Float32Array(n),e}function u(t){const e={id:t.getAttribute("id"),displaypropertiesid:t.getAttribute("displaypropertiesid")},r=t.querySelectorAll("color"),n=[],o=new THREE.Color;for(let s=0;s<r.length;s++){const t=r[s],e=t.getAttribute("color");o.setStyle(e.substring(0,7)),o.convertSRGBToLinear(),n.push(o.r,o.g,o.b)}return e["colors"]=new Float32Array(n),e}function c(t){const e={id:t.getAttribute("id")},r=t.querySelectorAll("pbmetallic"),n=[];for(let o=0;o<r.length;o++){const t=r[o];n.push({name:t.getAttribute("name"),metallicness:parseFloat(t.getAttribute("metallicness")),roughness:parseFloat(t.getAttribute("roughness"))})}return e.data=n,e}function p(t){const e={};return e["name"]=t.getAttribute("name"),e["displaycolor"]=t.getAttribute("displaycolor"),e["displaypropertiesid"]=t.getAttribute("displaypropertiesid"),e}function d(t){const e={},r=[],n=t.querySelectorAll("vertices vertex");for(let l=0;l<n.length;l++){const t=n[l],e=t.getAttribute("x"),o=t.getAttribute("y"),s=t.getAttribute("z");r.push(parseFloat(e),parseFloat(o),parseFloat(s))}e["vertices"]=new Float32Array(r);const o=[],s=[],i=t.querySelectorAll("triangles triangle");for(let l=0;l<i.length;l++){const t=i[l],e=t.getAttribute("v1"),r=t.getAttribute("v2"),n=t.getAttribute("v3"),a=t.getAttribute("p1"),u=t.getAttribute("p2"),c=t.getAttribute("p3"),p=t.getAttribute("pid"),d={};d["v1"]=parseInt(e,10),d["v2"]=parseInt(r,10),d["v3"]=parseInt(n,10),s.push(d["v1"],d["v2"],d["v3"]),a&&(d["p1"]=parseInt(a,10)),u&&(d["p2"]=parseInt(u,10)),c&&(d["p3"]=parseInt(c,10)),p&&(d["pid"]=p),0<Object.keys(d).length&&o.push(d)}return e["triangleProperties"]=o,e["triangles"]=new Uint32Array(s),e}function h(t){const e=[],r=t.querySelectorAll("component");for(let n=0;n<r.length;n++){const t=r[n],o=g(t);e.push(o)}return e}function g(t){const e={};e["objectId"]=t.getAttribute("objectid");const r=t.getAttribute("transform");return r&&(e["transform"]=f(r)),e}function f(t){const e=[];t.split(" ").forEach((function(t){e.push(parseFloat(t))}));const r=new THREE.Matrix4;return r.set(e[0],e[3],e[6],e[9],e[1],e[4],e[7],e[10],e[2],e[5],e[8],e[11],0,0,0,1),r}function b(t){const e={type:t.getAttribute("type")},r=t.getAttribute("id");r&&(e["id"]=r);const n=t.getAttribute("pid");n&&(e["pid"]=n);const o=t.getAttribute("pindex");o&&(e["pindex"]=o);const s=t.getAttribute("thumbnail");s&&(e["thumbnail"]=s);const i=t.getAttribute("partnumber");i&&(e["partnumber"]=i);const l=t.getAttribute("name");l&&(e["name"]=l);const a=t.querySelector("mesh");a&&(e["mesh"]=d(a));const u=t.querySelector("components");return u&&(e["components"]=h(u)),e}function E(t){const e={basematerials:{}},r=t.querySelectorAll("basematerials");for(let l=0;l<r.length;l++){const t=r[l],n=i(t);e["basematerials"][n["id"]]=n}e["texture2d"]={};const n=t.querySelectorAll("texture2d");for(let i=0;i<n.length;i++){const t=n[i],r=l(t);e["texture2d"][r["id"]]=r}e["colorgroup"]={};const o=t.querySelectorAll("colorgroup");for(let i=0;i<o.length;i++){const t=o[i],r=u(t);e["colorgroup"][r["id"]]=r}e["pbmetallicdisplayproperties"]={};const s=t.querySelectorAll("pbmetallicdisplayproperties");for(let i=0;i<s.length;i++){const t=s[i],r=c(t);e["pbmetallicdisplayproperties"][r["id"]]=r}e["texture2dgroup"]={};const p=t.querySelectorAll("texture2dgroup");for(let i=0;i<p.length;i++){const t=p[i],r=a(t);e["texture2dgroup"][r["id"]]=r}e["object"]={};const d=t.querySelectorAll("object");for(let i=0;i<d.length;i++){const t=d[i],r=b(t);e["object"][r["id"]]=r}return e}function m(t){const e=[],r=t.querySelectorAll("item");for(let n=0;n<r.length;n++){const t=r[n],o={objectId:t.getAttribute("objectid")},s=t.getAttribute("transform");s&&(o["transform"]=f(s)),e.push(o)}return e}function A(t){const e={unit:t.getAttribute("unit")||"millimeter"},r=t.querySelectorAll("metadata");r&&(e["metadata"]=s(r));const n=t.querySelector("resources");n&&(e["resources"]=E(n));const o=t.querySelector("build");return o&&(e["build"]=m(o)),e}function y(t,e,n,o){const s=t.texid,i=n.resources.texture2d,l=i[s];if(l){const t=o[l.path],e=l.contenttype,n=new Blob([t],{type:e}),s=URL.createObjectURL(n),i=r.load(s,(function(){URL.revokeObjectURL(s)}));switch(i.encoding=THREE.sRGBEncoding,l.tilestyleu){case"wrap":i.wrapS=THREE.RepeatWrapping;break;case"mirror":i.wrapS=THREE.MirroredRepeatWrapping;break;case"none":case"clamp":i.wrapS=THREE.ClampToEdgeWrapping;break;default:i.wrapS=THREE.RepeatWrapping}switch(l.tilestylev){case"wrap":i.wrapT=THREE.RepeatWrapping;break;case"mirror":i.wrapT=THREE.MirroredRepeatWrapping;break;case"none":case"clamp":i.wrapT=THREE.ClampToEdgeWrapping;break;default:i.wrapT=THREE.RepeatWrapping}switch(l.filter){case"auto":i.magFilter=THREE.LinearFilter,i.minFilter=THREE.LinearMipmapLinearFilter;break;case"linear":i.magFilter=THREE.LinearFilter,i.minFilter=THREE.LinearFilter;break;case"nearest":i.magFilter=THREE.NearestFilter,i.minFilter=THREE.NearestFilter;break;default:i.magFilter=THREE.LinearFilter,i.minFilter=THREE.LinearMipmapLinearFilter}return i}return null}function R(t,e,r,n,o,s,i){const l=i.pindex,a={};for(let p=0,d=e.length;p<d;p++){const t=e[p],r=void 0!==t.p1?t.p1:l;void 0===a[r]&&(a[r]=[]),a[r].push(t)}const u=Object.keys(a),c=[];for(let p=0,d=u.length;p<d;p++){const e=u[p],l=a[e],d=t.basematerials[e],h=L(d,n,o,s,i,q),g=new THREE.BufferGeometry,f=[],b=r.vertices;for(let t=0,r=l.length;t<r;t++){const e=l[t];f.push(b[3*e.v1+0]),f.push(b[3*e.v1+1]),f.push(b[3*e.v1+2]),f.push(b[3*e.v2+0]),f.push(b[3*e.v2+1]),f.push(b[3*e.v2+2]),f.push(b[3*e.v3+0]),f.push(b[3*e.v3+1]),f.push(b[3*e.v3+2])}g.setAttribute("position",new THREE.Float32BufferAttribute(f,3));const E=new THREE.Mesh(g,h);c.push(E)}return c}function T(t,e,r,n,o,s,i){const l=new THREE.BufferGeometry,a=[],u=[],c=r.vertices,p=t.uvs;for(let f=0,b=e.length;f<b;f++){const t=e[f];a.push(c[3*t.v1+0]),a.push(c[3*t.v1+1]),a.push(c[3*t.v1+2]),a.push(c[3*t.v2+0]),a.push(c[3*t.v2+1]),a.push(c[3*t.v2+2]),a.push(c[3*t.v3+0]),a.push(c[3*t.v3+1]),a.push(c[3*t.v3+2]),u.push(p[2*t.p1+0]),u.push(p[2*t.p1+1]),u.push(p[2*t.p2+0]),u.push(p[2*t.p2+1]),u.push(p[2*t.p3+0]),u.push(p[2*t.p3+1])}l.setAttribute("position",new THREE.Float32BufferAttribute(a,3)),l.setAttribute("uv",new THREE.Float32BufferAttribute(u,2));const d=L(t,n,o,s,i,y),h=new THREE.MeshPhongMaterial({map:d,flatShading:!0}),g=new THREE.Mesh(l,h);return g}function v(t,e,r,n,o,s){const i=new THREE.BufferGeometry,l=[],a=[],u=r.vertices,c=t.colors;for(let h=0,g=e.length;h<g;h++){const t=e[h],r=t.v1,n=t.v2,o=t.v3;l.push(u[3*r+0]),l.push(u[3*r+1]),l.push(u[3*r+2]),l.push(u[3*n+0]),l.push(u[3*n+1]),l.push(u[3*n+2]),l.push(u[3*o+0]),l.push(u[3*o+1]),l.push(u[3*o+2]);const i=void 0!==t.p1?t.p1:s.pindex,p=void 0!==t.p2?t.p2:i,d=void 0!==t.p3?t.p3:i;a.push(c[3*i+0]),a.push(c[3*i+1]),a.push(c[3*i+2]),a.push(c[3*p+0]),a.push(c[3*p+1]),a.push(c[3*p+2]),a.push(c[3*d+0]),a.push(c[3*d+1]),a.push(c[3*d+2])}i.setAttribute("position",new THREE.Float32BufferAttribute(l,3)),i.setAttribute("color",new THREE.Float32BufferAttribute(a,3));const p=new THREE.MeshPhongMaterial({vertexColors:!0,flatShading:!0}),d=new THREE.Mesh(i,p);return d}function x(t){const e=new THREE.BufferGeometry;e.setIndex(new THREE.BufferAttribute(t["triangles"],1)),e.setAttribute("position",new THREE.BufferAttribute(t["vertices"],3));const r=new THREE.MeshPhongMaterial({color:16777215,flatShading:!0}),n=new THREE.Mesh(e,r);return n}function H(t,e,r,n,o,s){const i=Object.keys(t),l=[];for(let a=0,u=i.length;a<u;a++){const u=i[a],c=t[u],p=w(u,n);switch(p){case"material":const t=n.resources.basematerials[u],i=R(t,c,e,r,n,o,s);for(let e=0,r=i.length;e<r;e++)l.push(i[e]);break;case"texture":const a=n.resources.texture2dgroup[u];l.push(T(a,c,e,r,n,o,s));break;case"vertexColors":const p=n.resources.colorgroup[u];l.push(v(p,c,e,r,n,s));break;case"default":l.push(x(e));break;default:console.error("THREE.3MFLoader: Unsupported resource type.")}}return l}function w(t,e){return void 0!==e.resources.texture2dgroup[t]?"texture":void 0!==e.resources.basematerials[t]?"material":void 0!==e.resources.colorgroup[t]?"vertexColors":"default"===t?"default":void 0}function F(t,e,r){const n={},o=e["triangleProperties"],s=r.pid;for(let i=0,l=o.length;i<l;i++){const t=o[i];let e=void 0!==t.pid?t.pid:s;void 0===e&&(e="default"),void 0===n[e]&&(n[e]=[]),n[e].push(t)}return n}function S(t,e,r,n,o){const s=new THREE.Group,i=F(r,t,o),l=H(i,t,e,r,n,o);for(let a=0,u=l.length;a<u;a++)s.add(l[a]);return s}function M(t,r,n){if(!t)return;const o=[],s=Object.keys(t);for(let i=0;i<s.length;i++){const t=s[i];for(let r=0;r<e.availableExtensions.length;r++){const n=e.availableExtensions[r];n.ns===t&&o.push(n)}}for(let e=0;e<o.length;e++){const s=o[e];s.apply(n,t[s["ns"]],r)}}function L(t,e,r,n,o,s){return void 0!==t.build||(t.build=s(t,e,r,n,o)),t.build}function q(t,e,r){let n;const o=t.displaypropertiesid,s=r.resources.pbmetallicdisplayproperties;if(null!==o&&void 0!==s[o]){const e=s[o],r=e.data[t.index];n=new THREE.MeshStandardMaterial({flatShading:!0,roughness:r.roughness,metalness:r.metallicness})}else n=new THREE.MeshPhongMaterial({flatShading:!0});n.name=t.name;const i=t.displaycolor,l=i.substring(0,7);return n.color.setStyle(l),n.color.convertSRGBToLinear(),9===i.length&&(n.opacity=parseInt(i.charAt(7)+i.charAt(8),16)/255),n}function j(t,e,r,n){const o=new THREE.Group;for(let s=0;s<t.length;s++){const i=t[s];let l=e[i.objectId];void 0===l&&(k(i.objectId,e,r,n),l=e[i.objectId]);const a=l.clone(),u=i.transform;u&&a.applyMatrix4(u),o.add(a)}return o}function k(t,e,r,n){const o=r["resources"]["object"][t];if(o["mesh"]){const t=o["mesh"],s=r["extensions"],i=r["xml"];M(s,t,i),e[o.id]=L(t,e,r,n,o,S)}else{const t=o["components"];e[o.id]=L(t,e,r,n,o,j)}}function B(t){const e=t.model,r=t.modelRels,n={},o=Object.keys(e),s={};if(r)for(let i=0,l=r.length;i<l;i++){const e=r[i],n=e.target.substring(1);t.texture[n]&&(s[e.target]=t.texture[n])}for(let i=0;i<o.length;i++){const t=o[i],r=e[t],l=Object.keys(r["resources"]["object"]);for(let e=0;e<l.length;e++){const t=l[e];k(t,n,r,s)}}return n}function I(t){for(let e=0;e<t.length;e++){const r=t[e],n=r.target.split(".").pop();if("model"===n.toLowerCase())return r}}function C(t,e){const r=new THREE.Group,n=I(e["rels"]),o=e.model[n["target"].substring(1)]["build"];for(let s=0;s<o.length;s++){const e=o[s],n=t[e["objectId"]].clone(),i=e["transform"];i&&n.applyMatrix4(i),r.add(n)}return r}const O=n(t),D=B(O);return C(D,O)}addExtension(t){this.availableExtensions.push(t)}}THREE.ThreeMFLoader=t})();