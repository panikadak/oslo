(function(){class t extends THREE.Line{constructor(t,e=1,i=16,s=2){const n=new THREE.BufferGeometry,o=i+2*s,a=new Float32Array(3*(3*o+3));n.setAttribute("position",new THREE.BufferAttribute(a,3));const r=new THREE.LineBasicMaterial({color:65280}),l=new THREE.LineBasicMaterial({color:16776960});super(n,[l,r]),this.audio=t,this.range=e,this.divisionsInnerAngle=i,this.divisionsOuterAngle=s,this.type="PositionalAudioHelper",this.update()}update(){const t=this.audio,e=this.range,i=this.divisionsInnerAngle,s=this.divisionsOuterAngle,n=THREE.MathUtils.degToRad(t.panner.coneInnerAngle),o=THREE.MathUtils.degToRad(t.panner.coneOuterAngle),a=n/2,r=o/2;let l,d,h=0,u=0;const c=this.geometry,p=c.attributes.position;function E(t,i,s,n){const o=(i-t)/s;for(p.setXYZ(h,0,0,0),u++,l=t;l<i;l+=o)d=h+u,p.setXYZ(d,Math.sin(l)*e,0,Math.cos(l)*e),p.setXYZ(d+1,Math.sin(Math.min(l+o,i))*e,0,Math.cos(Math.min(l+o,i))*e),p.setXYZ(d+2,0,0,0),u+=3;c.addGroup(h,u,n),h+=u,u=0}c.clearGroups(),E(-r,-a,s,0),E(-a,a,i,1),E(a,r,s,0),p.needsUpdate=!0,n===o&&(this.material[0].visible=!1)}dispose(){this.geometry.dispose(),this.material[0].dispose(),this.material[1].dispose()}}THREE.PositionalAudioHelper=t})();