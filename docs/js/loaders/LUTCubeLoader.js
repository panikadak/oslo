(function(){class e extends THREE.Loader{load(e,a,t,r){const n=new THREE.FileLoader(this.manager);n.setPath(this.path),n.setResponseType("text"),n.load(e,(t=>{try{a(this.parse(t))}catch(n){r?r(n):console.error(n),this.manager.itemError(e)}}),t,r)}parse(e){e=e.replace(/^#.*?(\n|\r)/gm,"").replace(/^\s*?(\n|\r)/gm,"").trim();let a=null,t=null;const r=new THREE.Vector3(0,0,0),n=new THREE.Vector3(1,1,1),i=e.split(/[\n\r]+/g);let p=null,s=0;for(let l=0,T=i.length;l<T;l++){const e=i[l].trim(),o=e.split(/\s/g);switch(o[0]){case"TITLE":a=e.substring(7,e.length-1);break;case"LUT_3D_SIZE":const i=o[1];t=parseFloat(i),p=new Uint8Array(t*t*t*3);break;case"DOMAIN_MIN":r.x=parseFloat(o[1]),r.y=parseFloat(o[2]),r.z=parseFloat(o[3]);break;case"DOMAIN_MAX":n.x=parseFloat(o[1]),n.y=parseFloat(o[2]),n.z=parseFloat(o[3]);break;default:const E=parseFloat(o[0]),l=parseFloat(o[1]),T=parseFloat(o[2]);if(E>1||E<0||l>1||l<0||T>1||T<0)throw new Error("LUTCubeLoader : Non normalized values not supported.");p[s+0]=255*E,p[s+1]=255*l,p[s+2]=255*T,s+=3}}const o=new THREE.DataTexture;o.image.data=p,o.image.width=t,o.image.height=t*t,o.format=THREE.RGBFormat,o.type=THREE.UnsignedByteType,o.magFilter=THREE.LinearFilter,o.minFilter=THREE.LinearFilter,o.wrapS=THREE.ClampToEdgeWrapping,o.wrapT=THREE.ClampToEdgeWrapping,o.generateMipmaps=!1,o.needsUpdate=!0;const E=new THREE.DataTexture3D;return E.image.data=p,E.image.width=t,E.image.height=t,E.image.depth=t,E.format=THREE.RGBFormat,E.type=THREE.UnsignedByteType,E.magFilter=THREE.LinearFilter,E.minFilter=THREE.LinearFilter,E.wrapS=THREE.ClampToEdgeWrapping,E.wrapT=THREE.ClampToEdgeWrapping,E.wrapR=THREE.ClampToEdgeWrapping,E.generateMipmaps=!1,E.needsUpdate=!0,{title:a,size:t,domainMin:r,domainMax:n,texture:o,texture3D:E}}}THREE.LUTCubeLoader=e})();