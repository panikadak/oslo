(function(){class t extends THREE.Loader{constructor(t){super(t)}load(t,e,r,n){const o=this,i=new THREE.FileLoader(this.manager);i.setPath(this.path),i.setResponseType("arraybuffer"),i.setRequestHeader(this.requestHeader),i.setWithCredentials(this.withCredentials),i.load(t,(function(r){try{e(o.parse(r))}catch(i){n?n(i):console.error(i),o.manager.itemError(t)}}),r,n)}parse(t){function e(t){const e=new DataView(t),n=50,o=e.getUint32(80,!0),i=84+o*n;if(i===e.byteLength)return!0;const a=[115,111,108,105,100];for(let s=0;s<5;s++)if(r(a,e,s))return!1;return!0}function r(t,e,r){for(let n=0,o=t.length;n<o;n++)if(t[n]!==e.getUint8(r+n,!1))return!1;return!0}function n(t){const e=new DataView(t),r=e.getUint32(80,!0);let n,o,i,a,s,l,u,c,f=!1;for(let p=0;p<70;p++)1129270351==e.getUint32(p,!1)&&82==e.getUint8(p+4)&&61==e.getUint8(p+5)&&(f=!0,a=new Float32Array(3*r*3),s=e.getUint8(p+6)/255,l=e.getUint8(p+7)/255,u=e.getUint8(p+8)/255,c=e.getUint8(p+9)/255);const g=84,E=50,h=new THREE.BufferGeometry,w=new Float32Array(3*r*3),d=new Float32Array(3*r*3);for(let p=0;p<r;p++){const t=g+p*E,r=e.getFloat32(t,!0),c=e.getFloat32(t+4,!0),h=e.getFloat32(t+8,!0);if(f){const r=e.getUint16(t+48,!0);0===(32768&r)?(n=(31&r)/31,o=(r>>5&31)/31,i=(r>>10&31)/31):(n=s,o=l,i=u)}for(let s=1;s<=3;s++){const l=t+12*s,u=3*p*3+3*(s-1);w[u]=e.getFloat32(l,!0),w[u+1]=e.getFloat32(l+4,!0),w[u+2]=e.getFloat32(l+8,!0),d[u]=r,d[u+1]=c,d[u+2]=h,f&&(a[u]=n,a[u+1]=o,a[u+2]=i)}}return h.setAttribute("position",new THREE.BufferAttribute(w,3)),h.setAttribute("normal",new THREE.BufferAttribute(d,3)),f&&(h.setAttribute("color",new THREE.BufferAttribute(a,3)),h.hasColors=!0,h.alpha=c),h}function o(t){const e=new THREE.BufferGeometry,r=/solid([\s\S]*?)endsolid/g,n=/facet([\s\S]*?)endfacet/g;let o=0;const i=/[\s]+([+-]?(?:\d*)(?:\.\d*)?(?:[eE][+-]?\d+)?)/.source,a=new RegExp("vertex"+i+i+i,"g"),s=new RegExp("normal"+i+i+i,"g"),l=[],u=[],c=new THREE.Vector3;let f,g=0,E=0,h=0;while(null!==(f=r.exec(t))){E=h;const t=f[0];while(null!==(f=n.exec(t))){let t=0,e=0;const r=f[0];while(null!==(f=s.exec(r)))c.x=parseFloat(f[1]),c.y=parseFloat(f[2]),c.z=parseFloat(f[3]),e++;while(null!==(f=a.exec(r)))l.push(parseFloat(f[1]),parseFloat(f[2]),parseFloat(f[3])),u.push(c.x,c.y,c.z),t++,h++;1!==e&&console.error("THREE.STLLoader: Something isn't right with the normal of face number "+o),3!==t&&console.error("THREE.STLLoader: Something isn't right with the vertices of face number "+o),o++}const r=E,i=h-E;e.addGroup(r,i,g),g++}return e.setAttribute("position",new THREE.Float32BufferAttribute(l,3)),e.setAttribute("normal",new THREE.Float32BufferAttribute(u,3)),e}function i(t){return"string"!==typeof t?THREE.LoaderUtils.decodeText(new Uint8Array(t)):t}function a(t){if("string"===typeof t){const e=new Uint8Array(t.length);for(let r=0;r<t.length;r++)e[r]=255&t.charCodeAt(r);return e.buffer||e}return t}const s=a(t);return e(s)?n(s):o(i(t))}}THREE.STLLoader=t})();