(function(){class t extends THREE.CompressedTextureLoader{constructor(t){super(t)}parse(t,e){const o=13,n=new Uint32Array(t,0,o),m={buffer:t,header:n,loadMipmaps:e};return 55727696===n[0]?r(m):559044176===n[11]?a(m):void console.error("THREE.PVRLoader: Unknown PVR format.")}}function r(t){const r=t.header;let a,o;const n=r[12],m=r[2],s=r[6],p=r[7],i=r[10],R=r[11];switch(m){case 0:a=2,o=THREE.RGB_PVRTC_2BPPV1_Format;break;case 1:a=2,o=THREE.RGBA_PVRTC_2BPPV1_Format;break;case 2:a=4,o=THREE.RGB_PVRTC_4BPPV1_Format;break;case 3:a=4,o=THREE.RGBA_PVRTC_4BPPV1_Format;break;default:console.error("THREE.PVRLoader: Unsupported PVR format:",m)}return t.dataPtr=52+n,t.bpp=a,t.format=o,t.width=p,t.height=s,t.numSurfaces=i,t.numMipmaps=R,t.isCubemap=6===i,e(t)}function a(t){const r=t.header,a=r[0],o=r[1],n=r[2],m=r[3],s=r[4],p=r[10],i=r[12],R=255,P=24,u=25,c=s&R;let E,d;const h=p>0;return c===u?(d=h?THREE.RGBA_PVRTC_4BPPV1_Format:THREE.RGB_PVRTC_4BPPV1_Format,E=4):c===P?(d=h?THREE.RGBA_PVRTC_2BPPV1_Format:THREE.RGB_PVRTC_2BPPV1_Format,E=2):console.error("THREE.PVRLoader: Unknown PVR format:",c),t.dataPtr=a,t.bpp=E,t.format=d,t.width=n,t.height=o,t.numSurfaces=i,t.numMipmaps=m+1,t.isCubemap=6===i,e(t)}function e(t){const r={mipmaps:[],width:t.width,height:t.height,format:t.format,mipmapCount:t.numMipmaps,isCubemap:t.isCubemap},a=t.buffer;let e=t.dataPtr,o=0,n=0,m=0,s=0,p=0,i=0;const R=t.bpp,P=t.numSurfaces;2===R?(m=8,s=4):(m=4,s=4),n=m*s*R/8,r.mipmaps.length=t.numMipmaps*P;let u=0;while(u<t.numMipmaps){const R=t.width>>u,c=t.height>>u;p=R/m,i=c/s,p<2&&(p=2),i<2&&(i=2),o=p*i*n;for(let n=0;n<P;n++){const m=new Uint8Array(a,e,o),s={data:m,width:R,height:c};r.mipmaps[n*t.numMipmaps+u]=s,e+=o}u++}return r}THREE.PVRLoader=t})();