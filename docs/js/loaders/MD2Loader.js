(function(){const t=[[-.525731,0,.850651],[-.442863,.238856,.864188],[-.295242,0,.955423],[-.309017,.5,.809017],[-.16246,.262866,.951056],[0,0,1],[0,.850651,.525731],[-.147621,.716567,.681718],[.147621,.716567,.681718],[0,.525731,.850651],[.309017,.5,.809017],[.525731,0,.850651],[.295242,0,.955423],[.442863,.238856,.864188],[.16246,.262866,.951056],[-.681718,.147621,.716567],[-.809017,.309017,.5],[-.587785,.425325,.688191],[-.850651,.525731,0],[-.864188,.442863,.238856],[-.716567,.681718,.147621],[-.688191,.587785,.425325],[-.5,.809017,.309017],[-.238856,.864188,.442863],[-.425325,.688191,.587785],[-.716567,.681718,-.147621],[-.5,.809017,-.309017],[-.525731,.850651,0],[0,.850651,-.525731],[-.238856,.864188,-.442863],[0,.955423,-.295242],[-.262866,.951056,-.16246],[0,1,0],[0,.955423,.295242],[-.262866,.951056,.16246],[.238856,.864188,.442863],[.262866,.951056,.16246],[.5,.809017,.309017],[.238856,.864188,-.442863],[.262866,.951056,-.16246],[.5,.809017,-.309017],[.850651,.525731,0],[.716567,.681718,.147621],[.716567,.681718,-.147621],[.525731,.850651,0],[.425325,.688191,.587785],[.864188,.442863,.238856],[.688191,.587785,.425325],[.809017,.309017,.5],[.681718,.147621,.716567],[.587785,.425325,.688191],[.955423,.295242,0],[1,0,0],[.951056,.16246,.262866],[.850651,-.525731,0],[.955423,-.295242,0],[.864188,-.442863,.238856],[.951056,-.16246,.262866],[.809017,-.309017,.5],[.681718,-.147621,.716567],[.850651,0,.525731],[.864188,.442863,-.238856],[.809017,.309017,-.5],[.951056,.16246,-.262866],[.525731,0,-.850651],[.681718,.147621,-.716567],[.681718,-.147621,-.716567],[.850651,0,-.525731],[.809017,-.309017,-.5],[.864188,-.442863,-.238856],[.951056,-.16246,-.262866],[.147621,.716567,-.681718],[.309017,.5,-.809017],[.425325,.688191,-.587785],[.442863,.238856,-.864188],[.587785,.425325,-.688191],[.688191,.587785,-.425325],[-.147621,.716567,-.681718],[-.309017,.5,-.809017],[0,.525731,-.850651],[-.525731,0,-.850651],[-.442863,.238856,-.864188],[-.295242,0,-.955423],[-.16246,.262866,-.951056],[0,0,-1],[.295242,0,-.955423],[.16246,.262866,-.951056],[-.442863,-.238856,-.864188],[-.309017,-.5,-.809017],[-.16246,-.262866,-.951056],[0,-.850651,-.525731],[-.147621,-.716567,-.681718],[.147621,-.716567,-.681718],[0,-.525731,-.850651],[.309017,-.5,-.809017],[.442863,-.238856,-.864188],[.16246,-.262866,-.951056],[.238856,-.864188,-.442863],[.5,-.809017,-.309017],[.425325,-.688191,-.587785],[.716567,-.681718,-.147621],[.688191,-.587785,-.425325],[.587785,-.425325,-.688191],[0,-.955423,-.295242],[0,-1,0],[.262866,-.951056,-.16246],[0,-.850651,.525731],[0,-.955423,.295242],[.238856,-.864188,.442863],[.262866,-.951056,.16246],[.5,-.809017,.309017],[.716567,-.681718,.147621],[.525731,-.850651,0],[-.238856,-.864188,-.442863],[-.5,-.809017,-.309017],[-.262866,-.951056,-.16246],[-.850651,-.525731,0],[-.716567,-.681718,-.147621],[-.716567,-.681718,.147621],[-.525731,-.850651,0],[-.5,-.809017,.309017],[-.238856,-.864188,.442863],[-.262866,-.951056,.16246],[-.864188,-.442863,.238856],[-.809017,-.309017,.5],[-.688191,-.587785,.425325],[-.681718,-.147621,.716567],[-.442863,-.238856,.864188],[-.587785,-.425325,.688191],[-.309017,-.5,.809017],[-.147621,-.716567,.681718],[-.425325,-.688191,.587785],[-.16246,-.262866,.951056],[.442863,-.238856,.864188],[.16246,-.262866,.951056],[.309017,-.5,.809017],[.147621,-.716567,.681718],[0,-.525731,.850651],[.425325,-.688191,.587785],[.587785,-.425325,.688191],[.688191,-.587785,.425325],[-.955423,.295242,0],[-.951056,.16246,.262866],[-1,0,0],[-.850651,0,.525731],[-.955423,-.295242,0],[-.951056,-.16246,.262866],[-.864188,.442863,-.238856],[-.951056,.16246,-.262866],[-.809017,.309017,-.5],[-.864188,-.442863,-.238856],[-.951056,-.16246,-.262866],[-.809017,-.309017,-.5],[-.681718,.147621,-.716567],[-.681718,-.147621,-.716567],[-.850651,0,-.525731],[-.688191,.587785,-.425325],[-.587785,.425325,-.688191],[-.425325,.688191,-.587785],[-.425325,-.688191,-.587785],[-.587785,-.425325,-.688191],[-.688191,-.587785,-.425325]];class e extends THREE.Loader{constructor(t){super(t)}load(t,e,s,n){const r=this,o=new THREE.FileLoader(r.manager);o.setPath(r.path),o.setResponseType("arraybuffer"),o.setRequestHeader(r.requestHeader),o.setWithCredentials(r.withCredentials),o.load(t,(function(s){try{e(r.parse(s))}catch(o){n?n(o):console.error(o),r.manager.itemError(t)}}),s,n)}parse(e){const s=new DataView(e),n={},r=["ident","version","skinwidth","skinheight","framesize","num_skins","num_vertices","num_st","num_tris","num_glcmds","num_frames","offset_skins","offset_st","offset_tris","offset_frames","offset_glcmds","offset_end"];for(let t=0;t<r.length;t++)n[r[t]]=s.getInt32(4*t,!0);if(844121161!==n.ident||8!==n.version)return void console.error("Not a valid MD2 file");if(n.offset_end!==s.byteLength)return void console.error("Corrupted MD2 file");const o=new THREE.BufferGeometry,i=[];let a=n.offset_st;for(let t=0,R=n.num_st;t<R;t++){const t=s.getInt16(a+0,!0),e=s.getInt16(a+2,!0);i.push(t/n.skinwidth,1-e/n.skinheight),a+=4}a=n.offset_tris;const l=[],f=[];for(let t=0,R=n.num_tris;t<R;t++)l.push(s.getUint16(a+0,!0),s.getUint16(a+2,!0),s.getUint16(a+4,!0)),f.push(s.getUint16(a+6,!0),s.getUint16(a+8,!0),s.getUint16(a+10,!0)),a+=12;const u=new THREE.Vector3,c=new THREE.Vector3,m=[];a=n.offset_frames;for(let R=0,T=n.num_frames;R<T;R++){c.set(s.getFloat32(a+0,!0),s.getFloat32(a+4,!0),s.getFloat32(a+8,!0)),u.set(s.getFloat32(a+12,!0),s.getFloat32(a+16,!0),s.getFloat32(a+20,!0)),a+=24;const e=[];for(let t=0;t<16;t++){const n=s.getUint8(a+t,!0);if(0===n)break;e[t]=n}const r={name:String.fromCharCode.apply(null,e),vertices:[],normals:[]};a+=16;for(let o=0;o<n.num_vertices;o++){let e=s.getUint8(a++,!0),n=s.getUint8(a++,!0),o=s.getUint8(a++,!0);const i=t[s.getUint8(a++,!0)];e=e*c.x+u.x,n=n*c.y+u.y,o=o*c.z+u.z,r.vertices.push(e,o,n),r.normals.push(i[0],i[2],i[1])}m.push(r)}const h=[],g=[],p=[],E=m[0].vertices,d=m[0].normals;for(let t=0,R=l.length;t<R;t++){const e=l[t];let s=3*e;const n=E[s],r=E[s+1],o=E[s+2];h.push(n,r,o);const a=d[s],u=d[s+1],c=d[s+2];g.push(a,u,c);const m=f[t];s=2*m;const _=i[s],v=i[s+1];p.push(_,v)}o.setAttribute("position",new THREE.Float32BufferAttribute(h,3)),o.setAttribute("normal",new THREE.Float32BufferAttribute(g,3)),o.setAttribute("uv",new THREE.Float32BufferAttribute(p,2));const _=[],v=[];for(let t=0,R=m.length;t<R;t++){const e=m[t],s=e.name;if(e.vertices.length>0){const t=[];for(let s=0,r=l.length;s<r;s++){const n=l[s],r=3*n,o=e.vertices[r],i=e.vertices[r+1],a=e.vertices[r+2];t.push(o,i,a)}const n=new THREE.Float32BufferAttribute(t,3);n.name=s,_.push(n)}if(e.normals.length>0){const t=[];for(let s=0,r=l.length;s<r;s++){const n=l[s],r=3*n,o=e.normals[r],i=e.normals[r+1],a=e.normals[r+2];t.push(o,i,a)}const n=new THREE.Float32BufferAttribute(t,3);n.name=s,v.push(n)}}return o.morphAttributes.position=_,o.morphAttributes.normal=v,o.morphTargetsRelative=!1,o.animations=THREE.AnimationClip.CreateClipsFromMorphTargetSequences(m,10),o}}THREE.MD2Loader=e})();