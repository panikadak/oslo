(function(){class e extends THREE.Loader{constructor(e){super(e)}load(e,t,s,n){const o=this,r=new THREE.FileLoader(this.manager);r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(o.withCredentials),r.load(e,(function(e){let s;try{s=JSON.parse(e)}catch(r){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),s=JSON.parse(e.substring(65,e.length-2))}const n=o.parse(s);t&&t(n)}),s,n)}parse(e){return new t(e)}}class t{constructor(e){this.type="Font",this.data=e}generateShapes(e,t=100){const n=[],o=s(e,t,this.data);for(let s=0,r=o.length;s<r;s++)Array.prototype.push.apply(n,o[s].toShapes());return n}}function s(e,t,s){const o=Array.from(e),r=t/s.resolution,a=(s.boundingBox.yMax-s.boundingBox.yMin+s.underlineThickness)*r,i=[];let c=0,h=0;for(let l=0;l<o.length;l++){const e=o[l];if("\n"===e)c=0,h-=a;else{const t=n(e,r,c,h,s);c+=t.offsetX,i.push(t.path)}}return i}function n(e,t,s,n,o){const r=o.glyphs[e]||o.glyphs["?"];if(!r)return void console.error('THREE.Font: character "'+e+'" does not exists in font family '+o.familyName+".");const a=new THREE.ShapePath;let i,c,h,l,p,u,d,f;if(r.o){const e=r._cachedOutline||(r._cachedOutline=r.o.split(" "));for(let o=0,r=e.length;o<r;){const r=e[o++];switch(r){case"m":i=e[o++]*t+s,c=e[o++]*t+n,a.moveTo(i,c);break;case"l":i=e[o++]*t+s,c=e[o++]*t+n,a.lineTo(i,c);break;case"q":h=e[o++]*t+s,l=e[o++]*t+n,p=e[o++]*t+s,u=e[o++]*t+n,a.quadraticCurveTo(p,u,h,l);break;case"b":h=e[o++]*t+s,l=e[o++]*t+n,p=e[o++]*t+s,u=e[o++]*t+n,d=e[o++]*t+s,f=e[o++]*t+n,a.bezierCurveTo(p,u,d,f,h,l);break}}}return{offsetX:r.ha*t,path:a}}t.prototype.isFont=!0,THREE.Font=t,THREE.FontLoader=e})();