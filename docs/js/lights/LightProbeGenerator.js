(function(){class e{static fromCubeTexture(e){let r=0;const a=new THREE.Vector3,n=new THREE.Vector3,o=new THREE.Color,c=[0,0,0,0,0,0,0,0,0],s=new THREE.SphericalHarmonics3,i=s.coefficients;for(let l=0;l<6;l++){const s=e.image[l],E=s.width,h=s.height,g=document.createElement("canvas");g.width=E,g.height=h;const b=g.getContext("2d");b.drawImage(s,0,0,E,h);const R=b.getImageData(0,0,E,h),w=R.data,T=R.width,d=2/T;for(let f=0,H=w.length;f<H;f+=4){o.setRGB(w[f]/255,w[f+1]/255,w[f+2]/255),t(o,e.encoding);const s=f/4,E=(s%T+.5)*d-1,h=1-(Math.floor(s/T)+.5)*d;switch(l){case 0:a.set(-1,h,-E);break;case 1:a.set(1,h,E);break;case 2:a.set(-E,1,-h);break;case 3:a.set(-E,-1,h);break;case 4:a.set(-E,h,1);break;case 5:a.set(E,h,-1);break}const g=a.lengthSq(),b=4/(Math.sqrt(g)*g);r+=b,n.copy(a).normalize(),THREE.SphericalHarmonics3.getBasisAt(n,c);for(let e=0;e<9;e++)i[e].x+=c[e]*o.r*b,i[e].y+=c[e]*o.g*b,i[e].z+=c[e]*o.b*b}}const E=4*Math.PI/r;for(let t=0;t<9;t++)i[t].x*=E,i[t].y*=E,i[t].z*=E;return new THREE.LightProbe(s)}static fromCubeRenderTarget(e,r){let a=0;const n=new THREE.Vector3,o=new THREE.Vector3,c=new THREE.Color,s=[0,0,0,0,0,0,0,0,0],i=new THREE.SphericalHarmonics3,E=i.coefficients;for(let h=0;h<6;h++){const i=r.width,l=new Uint8Array(i*i*4);e.readRenderTargetPixels(r,0,0,i,i,l,h);const g=2/i;for(let e=0,b=l.length;e<b;e+=4){c.setRGB(l[e]/255,l[e+1]/255,l[e+2]/255),t(c,r.texture.encoding);const b=e/4,R=(b%i+.5)*g-1,w=1-(Math.floor(b/i)+.5)*g;switch(h){case 0:n.set(1,w,-R);break;case 1:n.set(-1,w,R);break;case 2:n.set(R,1,-w);break;case 3:n.set(R,-1,w);break;case 4:n.set(R,w,1);break;case 5:n.set(-R,w,-1);break}const T=n.lengthSq(),d=4/(Math.sqrt(T)*T);a+=d,o.copy(n).normalize(),THREE.SphericalHarmonics3.getBasisAt(o,s);for(let e=0;e<9;e++)E[e].x+=s[e]*c.r*d,E[e].y+=s[e]*c.g*d,E[e].z+=s[e]*c.b*d}}const l=4*Math.PI/a;for(let t=0;t<9;t++)E[t].x*=l,E[t].y*=l,E[t].z*=l;return new THREE.LightProbe(i)}}function t(e,t){switch(t){case THREE.sRGBEncoding:e.convertSRGBToLinear();break;case THREE.LinearEncoding:break;default:console.warn("WARNING: LightProbeGenerator convertColorToLinear() encountered an unsupported encoding.");break}return e}THREE.LightProbeGenerator=e})();