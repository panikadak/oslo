(function(){class t extends THREE.Mesh{constructor(t,s,r=!1,o=!1,a=1e4){const n=new THREE.BufferGeometry;super(n,s);const l=this,h=new Float32Array(36),c=new Float32Array(36),f=new Float32Array(36);function y(t,e,i){return t+(e-t)*i}function A(t,e,i,s,r,o,a,n,A,d){const u=(i-a)/(n-a),z=l.normal_cache;h[e+0]=s+u*l.delta,h[e+1]=r,h[e+2]=o,c[e+0]=y(z[t+0],z[t+3],u),c[e+1]=y(z[t+1],z[t+4],u),c[e+2]=y(z[t+2],z[t+5],u),f[e+0]=y(l.palette[3*A+0],l.palette[3*d+0],u),f[e+1]=y(l.palette[3*A+1],l.palette[3*d+1],u),f[e+2]=y(l.palette[3*A+2],l.palette[3*d+2],u)}function d(t,e,i,s,r,o,a,n,A,d){const u=(i-a)/(n-a),z=l.normal_cache;h[e+0]=s,h[e+1]=r+u*l.delta,h[e+2]=o;const p=t+3*l.yd;c[e+0]=y(z[t+0],z[p+0],u),c[e+1]=y(z[t+1],z[p+1],u),c[e+2]=y(z[t+2],z[p+2],u),f[e+0]=y(l.palette[3*A+0],l.palette[3*d+0],u),f[e+1]=y(l.palette[3*A+1],l.palette[3*d+1],u),f[e+2]=y(l.palette[3*A+2],l.palette[3*d+2],u)}function u(t,e,i,s,r,o,a,n,A,d){const u=(i-a)/(n-a),z=l.normal_cache;h[e+0]=s,h[e+1]=r,h[e+2]=o+u*l.delta;const p=t+3*l.zd;c[e+0]=y(z[t+0],z[p+0],u),c[e+1]=y(z[t+1],z[p+1],u),c[e+2]=y(z[t+2],z[p+2],u),f[e+0]=y(l.palette[3*A+0],l.palette[3*d+0],u),f[e+1]=y(l.palette[3*A+1],l.palette[3*d+1],u),f[e+2]=y(l.palette[3*A+2],l.palette[3*d+2],u)}function z(t){const e=3*t;0===l.normal_cache[e]&&(l.normal_cache[e+0]=l.field[t-1]-l.field[t+1],l.normal_cache[e+1]=l.field[t-l.yd]-l.field[t+l.yd],l.normal_cache[e+2]=l.field[t-l.zd]-l.field[t+l.zd])}function p(t,s,r,o,a){const n=o+1,y=o+l.yd,p=o+l.zd,E=n+l.yd,b=n+l.zd,w=o+l.yd+l.zd,g=n+l.yd+l.zd;let M=0;const T=l.field[o],R=l.field[n],H=l.field[y],U=l.field[E],v=l.field[p],C=l.field[b],F=l.field[w],_=l.field[g];T<a&&(M|=1),R<a&&(M|=2),H<a&&(M|=8),U<a&&(M|=4),v<a&&(M|=16),C<a&&(M|=32),F<a&&(M|=128),_<a&&(M|=64);const D=e[M];if(0===D)return 0;const B=l.delta,q=t+B,P=s+B,G=r+B;1&D&&(z(o),z(n),A(3*o,0,a,t,s,r,T,R,o,n)),2&D&&(z(n),z(E),d(3*n,3,a,q,s,r,R,U,n,E)),4&D&&(z(y),z(E),A(3*y,6,a,t,P,r,H,U,y,E)),8&D&&(z(o),z(y),d(3*o,9,a,t,s,r,T,H,o,y)),16&D&&(z(p),z(b),A(3*p,12,a,t,s,G,v,C,p,b)),32&D&&(z(b),z(g),d(3*b,15,a,q,s,G,C,_,b,g)),64&D&&(z(w),z(g),A(3*w,18,a,t,P,G,F,_,w,g)),128&D&&(z(p),z(w),d(3*p,21,a,t,s,G,v,F,p,w)),256&D&&(z(o),z(p),u(3*o,24,a,t,s,r,T,v,o,p)),512&D&&(z(n),z(b),u(3*n,27,a,q,s,r,R,C,n,b)),1024&D&&(z(E),z(g),u(3*E,30,a,q,P,r,U,_,E,g)),2048&D&&(z(y),z(w),u(3*y,33,a,t,P,r,H,F,y,w)),M<<=4;let I,x,S,X=0,Y=0;while(-1!=i[M+Y])I=M+Y,x=I+1,S=I+2,m(h,c,f,3*i[I],3*i[x],3*i[S]),Y+=3,X++;return X}function m(t,e,i,s,r,o){const a=3*l.count;if(l.positionArray[a+0]=t[s],l.positionArray[a+1]=t[s+1],l.positionArray[a+2]=t[s+2],l.positionArray[a+3]=t[r],l.positionArray[a+4]=t[r+1],l.positionArray[a+5]=t[r+2],l.positionArray[a+6]=t[o],l.positionArray[a+7]=t[o+1],l.positionArray[a+8]=t[o+2],!0===l.material.flatShading){const t=(e[s+0]+e[r+0]+e[o+0])/3,i=(e[s+1]+e[r+1]+e[o+1])/3,n=(e[s+2]+e[r+2]+e[o+2])/3;l.normalArray[a+0]=t,l.normalArray[a+1]=i,l.normalArray[a+2]=n,l.normalArray[a+3]=t,l.normalArray[a+4]=i,l.normalArray[a+5]=n,l.normalArray[a+6]=t,l.normalArray[a+7]=i,l.normalArray[a+8]=n}else l.normalArray[a+0]=e[s+0],l.normalArray[a+1]=e[s+1],l.normalArray[a+2]=e[s+2],l.normalArray[a+3]=e[r+0],l.normalArray[a+4]=e[r+1],l.normalArray[a+5]=e[r+2],l.normalArray[a+6]=e[o+0],l.normalArray[a+7]=e[o+1],l.normalArray[a+8]=e[o+2];if(l.enableUvs){const e=2*l.count;l.uvArray[e+0]=t[s+0],l.uvArray[e+1]=t[s+2],l.uvArray[e+2]=t[r+0],l.uvArray[e+3]=t[r+2],l.uvArray[e+4]=t[o+0],l.uvArray[e+5]=t[o+2]}l.enableColors&&(l.colorArray[a+0]=i[s+0],l.colorArray[a+1]=i[s+1],l.colorArray[a+2]=i[s+2],l.colorArray[a+3]=i[r+0],l.colorArray[a+4]=i[r+1],l.colorArray[a+5]=i[r+2],l.colorArray[a+6]=i[o+0],l.colorArray[a+7]=i[o+1],l.colorArray[a+8]=i[o+2]),l.count+=3}this.enableUvs=r,this.enableColors=o,this.init=function(t){this.resolution=t,this.isolation=80,this.size=t,this.size2=this.size*this.size,this.size3=this.size2*this.size,this.halfsize=this.size/2,this.delta=2/this.size,this.yd=this.size,this.zd=this.size2,this.field=new Float32Array(this.size3),this.normal_cache=new Float32Array(3*this.size3),this.palette=new Float32Array(3*this.size3),this.count=0;const e=3*a;this.positionArray=new Float32Array(3*e);const i=new THREE.BufferAttribute(this.positionArray,3);i.setUsage(THREE.DynamicDrawUsage),n.setAttribute("position",i),this.normalArray=new Float32Array(3*e);const s=new THREE.BufferAttribute(this.normalArray,3);if(s.setUsage(THREE.DynamicDrawUsage),n.setAttribute("normal",s),this.enableUvs){this.uvArray=new Float32Array(2*e);const t=new THREE.BufferAttribute(this.uvArray,2);t.setUsage(THREE.DynamicDrawUsage),n.setAttribute("uv",t)}if(this.enableColors){this.colorArray=new Float32Array(3*e);const t=new THREE.BufferAttribute(this.colorArray,3);t.setUsage(THREE.DynamicDrawUsage),n.setAttribute("color",t)}},this.addBall=function(t,e,i,s,r,o){const a=Math.sign(s);s=Math.abs(s);const n=!(void 0===o||null===o);let l=new THREE.Color(t,e,i);if(n)try{l=o instanceof THREE.Color?o:Array.isArray(o)?new THREE.Color(Math.min(Math.abs(o[0]),1),Math.min(Math.abs(o[1]),1),Math.min(Math.abs(o[2]),1)):new THREE.Color(o)}catch(F){l=new THREE.Color(t,e,i)}const h=this.size*Math.sqrt(s/r),c=i*this.size,f=e*this.size,y=t*this.size;let A=Math.floor(c-h);A<1&&(A=1);let d=Math.floor(c+h);d>this.size-1&&(d=this.size-1);let u=Math.floor(f-h);u<1&&(u=1);let z=Math.floor(f+h);z>this.size-1&&(z=this.size-1);let p=Math.floor(y-h);p<1&&(p=1);let m,E,b,w,g,M,T,R,H,U,v,C=Math.floor(y+h);for(C>this.size-1&&(C=this.size-1),b=A;b<d;b++)for(g=this.size2*b,R=b/this.size-i,H=R*R,E=u;E<z;E++)for(w=g+this.size*E,T=E/this.size-e,U=T*T,m=p;m<C;m++)if(M=m/this.size-t,v=s/(1e-6+M*M+U+H)-r,v>0){this.field[w+m]+=v*a;const t=Math.sqrt((m-y)*(m-y)+(E-f)*(E-f)+(b-c)*(b-c))/h,e=1-t*t*t*(t*(6*t-15)+10);this.palette[3*(w+m)+0]+=l.r*e,this.palette[3*(w+m)+1]+=l.g*e,this.palette[3*(w+m)+2]+=l.b*e}},this.addPlaneX=function(t,e){const i=this.size,s=this.yd,r=this.zd,o=this.field;let a,n,l,h,c,f,y,A=i*Math.sqrt(t/e);for(A>i&&(A=i),a=0;a<A;a++)if(f=a/i,h=f*f,c=t/(1e-4+h)-e,c>0)for(n=0;n<i;n++)for(y=a+n*s,l=0;l<i;l++)o[r*l+y]+=c},this.addPlaneY=function(t,e){const i=this.size,s=this.yd,r=this.zd,o=this.field;let a,n,l,h,c,f,y,A,d=i*Math.sqrt(t/e);for(d>i&&(d=i),n=0;n<d;n++)if(f=n/i,h=f*f,c=t/(1e-4+h)-e,c>0)for(y=n*s,a=0;a<i;a++)for(A=y+a,l=0;l<i;l++)o[r*l+A]+=c},this.addPlaneZ=function(t,e){const i=this.size,s=this.yd,r=this.zd,o=this.field;let a,n,l,h,c,f,y,A,d=i*Math.sqrt(t/e);for(d>i&&(d=i),l=0;l<d;l++)if(f=l/i,h=f*f,c=t/(1e-4+h)-e,c>0)for(y=r*l,n=0;n<i;n++)for(A=y+n*s,a=0;a<i;a++)o[A+a]+=c},this.setCell=function(t,e,i,s){const r=this.size2*i+this.size*e+t;this.field[r]=s},this.getCell=function(t,e,i){const s=this.size2*i+this.size*e+t;return this.field[s]},this.blur=function(t=1){const e=this.field,i=e.slice(),s=this.size,r=this.size2;for(let o=0;o<s;o++)for(let a=0;a<s;a++)for(let n=0;n<s;n++){const l=r*n+s*a+o;let h=i[l],c=1;for(let e=-1;e<=1;e+=2){const l=e+o;if(!(l<0||l>=s))for(let e=-1;e<=1;e+=2){const o=e+a;if(!(o<0||o>=s))for(let e=-1;e<=1;e+=2){const a=e+n;if(a<0||a>=s)continue;const f=r*a+s*o+l,y=i[f];c++,h+=t*(y-h)/c}}}e[l]=h}},this.reset=function(){for(let t=0;t<this.size3;t++)this.normal_cache[3*t]=0,this.field[t]=0,this.palette[3*t]=this.palette[3*t+1]=this.palette[3*t+2]=0},this.onBeforeRender=function(){this.count=0;const t=this.size-2;for(let e=1;e<t;e++){const i=this.size2*e,s=(e-this.halfsize)/this.halfsize;for(let e=1;e<t;e++){const r=i+this.size*e,o=(e-this.halfsize)/this.halfsize;for(let e=1;e<t;e++){const t=(e-this.halfsize)/this.halfsize,i=r+e;p(t,o,s,i,this.isolation)}}}for(let e=3*this.count;e<this.positionArray.length;e++)this.positionArray[e]=0;n.getAttribute("position").needsUpdate=!0,n.getAttribute("normal").needsUpdate=!0,this.enableUvs&&(n.getAttribute("uv").needsUpdate=!0),this.enableColors&&(n.getAttribute("color").needsUpdate=!0),this.count/3>a&&console.warn("THREE.MarchingCubes: Geometry buffers too small for rendering. Please create an instance with a higher poly count.")},this.init(t)}}t.prototype.isMarchingCubes=!0;const e=new Int32Array([0,265,515,778,1030,1295,1541,1804,2060,2309,2575,2822,3082,3331,3593,3840,400,153,915,666,1430,1183,1941,1692,2460,2197,2975,2710,3482,3219,3993,3728,560,825,51,314,1590,1855,1077,1340,2620,2869,2111,2358,3642,3891,3129,3376,928,681,419,170,1958,1711,1445,1196,2988,2725,2479,2214,4010,3747,3497,3232,1120,1385,1635,1898,102,367,613,876,3180,3429,3695,3942,2154,2403,2665,2912,1520,1273,2035,1786,502,255,1013,764,3580,3317,4095,3830,2554,2291,3065,2800,1616,1881,1107,1370,598,863,85,348,3676,3925,3167,3414,2650,2899,2137,2384,1984,1737,1475,1226,966,719,453,204,4044,3781,3535,3270,3018,2755,2505,2240,2240,2505,2755,3018,3270,3535,3781,4044,204,453,719,966,1226,1475,1737,1984,2384,2137,2899,2650,3414,3167,3925,3676,348,85,863,598,1370,1107,1881,1616,2800,3065,2291,2554,3830,4095,3317,3580,764,1013,255,502,1786,2035,1273,1520,2912,2665,2403,2154,3942,3695,3429,3180,876,613,367,102,1898,1635,1385,1120,3232,3497,3747,4010,2214,2479,2725,2988,1196,1445,1711,1958,170,419,681,928,3376,3129,3891,3642,2358,2111,2869,2620,1340,1077,1855,1590,314,51,825,560,3728,3993,3219,3482,2710,2975,2197,2460,1692,1941,1183,1430,666,915,153,400,3840,3593,3331,3082,2822,2575,2309,2060,1804,1541,1295,1030,778,515,265,0]),i=new Int32Array([-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,8,3,9,8,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,1,2,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,2,10,0,2,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,8,3,2,10,8,10,9,8,-1,-1,-1,-1,-1,-1,-1,3,11,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,11,2,8,11,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,9,0,2,3,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,11,2,1,9,11,9,8,11,-1,-1,-1,-1,-1,-1,-1,3,10,1,11,10,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,10,1,0,8,10,8,11,10,-1,-1,-1,-1,-1,-1,-1,3,9,0,3,11,9,11,10,9,-1,-1,-1,-1,-1,-1,-1,9,8,10,10,8,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,3,0,7,3,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,8,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,1,9,4,7,1,7,3,1,-1,-1,-1,-1,-1,-1,-1,1,2,10,8,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,4,7,3,0,4,1,2,10,-1,-1,-1,-1,-1,-1,-1,9,2,10,9,0,2,8,4,7,-1,-1,-1,-1,-1,-1,-1,2,10,9,2,9,7,2,7,3,7,9,4,-1,-1,-1,-1,8,4,7,3,11,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,4,7,11,2,4,2,0,4,-1,-1,-1,-1,-1,-1,-1,9,0,1,8,4,7,2,3,11,-1,-1,-1,-1,-1,-1,-1,4,7,11,9,4,11,9,11,2,9,2,1,-1,-1,-1,-1,3,10,1,3,11,10,7,8,4,-1,-1,-1,-1,-1,-1,-1,1,11,10,1,4,11,1,0,4,7,11,4,-1,-1,-1,-1,4,7,8,9,0,11,9,11,10,11,0,3,-1,-1,-1,-1,4,7,11,4,11,9,9,11,10,-1,-1,-1,-1,-1,-1,-1,9,5,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,5,4,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,5,4,1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,5,4,8,3,5,3,1,5,-1,-1,-1,-1,-1,-1,-1,1,2,10,9,5,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,8,1,2,10,4,9,5,-1,-1,-1,-1,-1,-1,-1,5,2,10,5,4,2,4,0,2,-1,-1,-1,-1,-1,-1,-1,2,10,5,3,2,5,3,5,4,3,4,8,-1,-1,-1,-1,9,5,4,2,3,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,11,2,0,8,11,4,9,5,-1,-1,-1,-1,-1,-1,-1,0,5,4,0,1,5,2,3,11,-1,-1,-1,-1,-1,-1,-1,2,1,5,2,5,8,2,8,11,4,8,5,-1,-1,-1,-1,10,3,11,10,1,3,9,5,4,-1,-1,-1,-1,-1,-1,-1,4,9,5,0,8,1,8,10,1,8,11,10,-1,-1,-1,-1,5,4,0,5,0,11,5,11,10,11,0,3,-1,-1,-1,-1,5,4,8,5,8,10,10,8,11,-1,-1,-1,-1,-1,-1,-1,9,7,8,5,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,3,0,9,5,3,5,7,3,-1,-1,-1,-1,-1,-1,-1,0,7,8,0,1,7,1,5,7,-1,-1,-1,-1,-1,-1,-1,1,5,3,3,5,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,7,8,9,5,7,10,1,2,-1,-1,-1,-1,-1,-1,-1,10,1,2,9,5,0,5,3,0,5,7,3,-1,-1,-1,-1,8,0,2,8,2,5,8,5,7,10,5,2,-1,-1,-1,-1,2,10,5,2,5,3,3,5,7,-1,-1,-1,-1,-1,-1,-1,7,9,5,7,8,9,3,11,2,-1,-1,-1,-1,-1,-1,-1,9,5,7,9,7,2,9,2,0,2,7,11,-1,-1,-1,-1,2,3,11,0,1,8,1,7,8,1,5,7,-1,-1,-1,-1,11,2,1,11,1,7,7,1,5,-1,-1,-1,-1,-1,-1,-1,9,5,8,8,5,7,10,1,3,10,3,11,-1,-1,-1,-1,5,7,0,5,0,9,7,11,0,1,0,10,11,10,0,-1,11,10,0,11,0,3,10,5,0,8,0,7,5,7,0,-1,11,10,5,7,11,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,10,6,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,5,10,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,0,1,5,10,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,8,3,1,9,8,5,10,6,-1,-1,-1,-1,-1,-1,-1,1,6,5,2,6,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,6,5,1,2,6,3,0,8,-1,-1,-1,-1,-1,-1,-1,9,6,5,9,0,6,0,2,6,-1,-1,-1,-1,-1,-1,-1,5,9,8,5,8,2,5,2,6,3,2,8,-1,-1,-1,-1,2,3,11,10,6,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,0,8,11,2,0,10,6,5,-1,-1,-1,-1,-1,-1,-1,0,1,9,2,3,11,5,10,6,-1,-1,-1,-1,-1,-1,-1,5,10,6,1,9,2,9,11,2,9,8,11,-1,-1,-1,-1,6,3,11,6,5,3,5,1,3,-1,-1,-1,-1,-1,-1,-1,0,8,11,0,11,5,0,5,1,5,11,6,-1,-1,-1,-1,3,11,6,0,3,6,0,6,5,0,5,9,-1,-1,-1,-1,6,5,9,6,9,11,11,9,8,-1,-1,-1,-1,-1,-1,-1,5,10,6,4,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,3,0,4,7,3,6,5,10,-1,-1,-1,-1,-1,-1,-1,1,9,0,5,10,6,8,4,7,-1,-1,-1,-1,-1,-1,-1,10,6,5,1,9,7,1,7,3,7,9,4,-1,-1,-1,-1,6,1,2,6,5,1,4,7,8,-1,-1,-1,-1,-1,-1,-1,1,2,5,5,2,6,3,0,4,3,4,7,-1,-1,-1,-1,8,4,7,9,0,5,0,6,5,0,2,6,-1,-1,-1,-1,7,3,9,7,9,4,3,2,9,5,9,6,2,6,9,-1,3,11,2,7,8,4,10,6,5,-1,-1,-1,-1,-1,-1,-1,5,10,6,4,7,2,4,2,0,2,7,11,-1,-1,-1,-1,0,1,9,4,7,8,2,3,11,5,10,6,-1,-1,-1,-1,9,2,1,9,11,2,9,4,11,7,11,4,5,10,6,-1,8,4,7,3,11,5,3,5,1,5,11,6,-1,-1,-1,-1,5,1,11,5,11,6,1,0,11,7,11,4,0,4,11,-1,0,5,9,0,6,5,0,3,6,11,6,3,8,4,7,-1,6,5,9,6,9,11,4,7,9,7,11,9,-1,-1,-1,-1,10,4,9,6,4,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,10,6,4,9,10,0,8,3,-1,-1,-1,-1,-1,-1,-1,10,0,1,10,6,0,6,4,0,-1,-1,-1,-1,-1,-1,-1,8,3,1,8,1,6,8,6,4,6,1,10,-1,-1,-1,-1,1,4,9,1,2,4,2,6,4,-1,-1,-1,-1,-1,-1,-1,3,0,8,1,2,9,2,4,9,2,6,4,-1,-1,-1,-1,0,2,4,4,2,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,3,2,8,2,4,4,2,6,-1,-1,-1,-1,-1,-1,-1,10,4,9,10,6,4,11,2,3,-1,-1,-1,-1,-1,-1,-1,0,8,2,2,8,11,4,9,10,4,10,6,-1,-1,-1,-1,3,11,2,0,1,6,0,6,4,6,1,10,-1,-1,-1,-1,6,4,1,6,1,10,4,8,1,2,1,11,8,11,1,-1,9,6,4,9,3,6,9,1,3,11,6,3,-1,-1,-1,-1,8,11,1,8,1,0,11,6,1,9,1,4,6,4,1,-1,3,11,6,3,6,0,0,6,4,-1,-1,-1,-1,-1,-1,-1,6,4,8,11,6,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,10,6,7,8,10,8,9,10,-1,-1,-1,-1,-1,-1,-1,0,7,3,0,10,7,0,9,10,6,7,10,-1,-1,-1,-1,10,6,7,1,10,7,1,7,8,1,8,0,-1,-1,-1,-1,10,6,7,10,7,1,1,7,3,-1,-1,-1,-1,-1,-1,-1,1,2,6,1,6,8,1,8,9,8,6,7,-1,-1,-1,-1,2,6,9,2,9,1,6,7,9,0,9,3,7,3,9,-1,7,8,0,7,0,6,6,0,2,-1,-1,-1,-1,-1,-1,-1,7,3,2,6,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,11,10,6,8,10,8,9,8,6,7,-1,-1,-1,-1,2,0,7,2,7,11,0,9,7,6,7,10,9,10,7,-1,1,8,0,1,7,8,1,10,7,6,7,10,2,3,11,-1,11,2,1,11,1,7,10,6,1,6,7,1,-1,-1,-1,-1,8,9,6,8,6,7,9,1,6,11,6,3,1,3,6,-1,0,9,1,11,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,0,7,0,6,3,11,0,11,6,0,-1,-1,-1,-1,7,11,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,6,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,8,11,7,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,11,7,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,1,9,8,3,1,11,7,6,-1,-1,-1,-1,-1,-1,-1,10,1,2,6,11,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,10,3,0,8,6,11,7,-1,-1,-1,-1,-1,-1,-1,2,9,0,2,10,9,6,11,7,-1,-1,-1,-1,-1,-1,-1,6,11,7,2,10,3,10,8,3,10,9,8,-1,-1,-1,-1,7,2,3,6,2,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,0,8,7,6,0,6,2,0,-1,-1,-1,-1,-1,-1,-1,2,7,6,2,3,7,0,1,9,-1,-1,-1,-1,-1,-1,-1,1,6,2,1,8,6,1,9,8,8,7,6,-1,-1,-1,-1,10,7,6,10,1,7,1,3,7,-1,-1,-1,-1,-1,-1,-1,10,7,6,1,7,10,1,8,7,1,0,8,-1,-1,-1,-1,0,3,7,0,7,10,0,10,9,6,10,7,-1,-1,-1,-1,7,6,10,7,10,8,8,10,9,-1,-1,-1,-1,-1,-1,-1,6,8,4,11,8,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,6,11,3,0,6,0,4,6,-1,-1,-1,-1,-1,-1,-1,8,6,11,8,4,6,9,0,1,-1,-1,-1,-1,-1,-1,-1,9,4,6,9,6,3,9,3,1,11,3,6,-1,-1,-1,-1,6,8,4,6,11,8,2,10,1,-1,-1,-1,-1,-1,-1,-1,1,2,10,3,0,11,0,6,11,0,4,6,-1,-1,-1,-1,4,11,8,4,6,11,0,2,9,2,10,9,-1,-1,-1,-1,10,9,3,10,3,2,9,4,3,11,3,6,4,6,3,-1,8,2,3,8,4,2,4,6,2,-1,-1,-1,-1,-1,-1,-1,0,4,2,4,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,9,0,2,3,4,2,4,6,4,3,8,-1,-1,-1,-1,1,9,4,1,4,2,2,4,6,-1,-1,-1,-1,-1,-1,-1,8,1,3,8,6,1,8,4,6,6,10,1,-1,-1,-1,-1,10,1,0,10,0,6,6,0,4,-1,-1,-1,-1,-1,-1,-1,4,6,3,4,3,8,6,10,3,0,3,9,10,9,3,-1,10,9,4,6,10,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,9,5,7,6,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,4,9,5,11,7,6,-1,-1,-1,-1,-1,-1,-1,5,0,1,5,4,0,7,6,11,-1,-1,-1,-1,-1,-1,-1,11,7,6,8,3,4,3,5,4,3,1,5,-1,-1,-1,-1,9,5,4,10,1,2,7,6,11,-1,-1,-1,-1,-1,-1,-1,6,11,7,1,2,10,0,8,3,4,9,5,-1,-1,-1,-1,7,6,11,5,4,10,4,2,10,4,0,2,-1,-1,-1,-1,3,4,8,3,5,4,3,2,5,10,5,2,11,7,6,-1,7,2,3,7,6,2,5,4,9,-1,-1,-1,-1,-1,-1,-1,9,5,4,0,8,6,0,6,2,6,8,7,-1,-1,-1,-1,3,6,2,3,7,6,1,5,0,5,4,0,-1,-1,-1,-1,6,2,8,6,8,7,2,1,8,4,8,5,1,5,8,-1,9,5,4,10,1,6,1,7,6,1,3,7,-1,-1,-1,-1,1,6,10,1,7,6,1,0,7,8,7,0,9,5,4,-1,4,0,10,4,10,5,0,3,10,6,10,7,3,7,10,-1,7,6,10,7,10,8,5,4,10,4,8,10,-1,-1,-1,-1,6,9,5,6,11,9,11,8,9,-1,-1,-1,-1,-1,-1,-1,3,6,11,0,6,3,0,5,6,0,9,5,-1,-1,-1,-1,0,11,8,0,5,11,0,1,5,5,6,11,-1,-1,-1,-1,6,11,3,6,3,5,5,3,1,-1,-1,-1,-1,-1,-1,-1,1,2,10,9,5,11,9,11,8,11,5,6,-1,-1,-1,-1,0,11,3,0,6,11,0,9,6,5,6,9,1,2,10,-1,11,8,5,11,5,6,8,0,5,10,5,2,0,2,5,-1,6,11,3,6,3,5,2,10,3,10,5,3,-1,-1,-1,-1,5,8,9,5,2,8,5,6,2,3,8,2,-1,-1,-1,-1,9,5,6,9,6,0,0,6,2,-1,-1,-1,-1,-1,-1,-1,1,5,8,1,8,0,5,6,8,3,8,2,6,2,8,-1,1,5,6,2,1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,3,6,1,6,10,3,8,6,5,6,9,8,9,6,-1,10,1,0,10,0,6,9,5,0,5,6,0,-1,-1,-1,-1,0,3,8,5,6,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,10,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,5,10,7,5,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,5,10,11,7,5,8,3,0,-1,-1,-1,-1,-1,-1,-1,5,11,7,5,10,11,1,9,0,-1,-1,-1,-1,-1,-1,-1,10,7,5,10,11,7,9,8,1,8,3,1,-1,-1,-1,-1,11,1,2,11,7,1,7,5,1,-1,-1,-1,-1,-1,-1,-1,0,8,3,1,2,7,1,7,5,7,2,11,-1,-1,-1,-1,9,7,5,9,2,7,9,0,2,2,11,7,-1,-1,-1,-1,7,5,2,7,2,11,5,9,2,3,2,8,9,8,2,-1,2,5,10,2,3,5,3,7,5,-1,-1,-1,-1,-1,-1,-1,8,2,0,8,5,2,8,7,5,10,2,5,-1,-1,-1,-1,9,0,1,5,10,3,5,3,7,3,10,2,-1,-1,-1,-1,9,8,2,9,2,1,8,7,2,10,2,5,7,5,2,-1,1,3,5,3,7,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,7,0,7,1,1,7,5,-1,-1,-1,-1,-1,-1,-1,9,0,3,9,3,5,5,3,7,-1,-1,-1,-1,-1,-1,-1,9,8,7,5,9,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,8,4,5,10,8,10,11,8,-1,-1,-1,-1,-1,-1,-1,5,0,4,5,11,0,5,10,11,11,3,0,-1,-1,-1,-1,0,1,9,8,4,10,8,10,11,10,4,5,-1,-1,-1,-1,10,11,4,10,4,5,11,3,4,9,4,1,3,1,4,-1,2,5,1,2,8,5,2,11,8,4,5,8,-1,-1,-1,-1,0,4,11,0,11,3,4,5,11,2,11,1,5,1,11,-1,0,2,5,0,5,9,2,11,5,4,5,8,11,8,5,-1,9,4,5,2,11,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,5,10,3,5,2,3,4,5,3,8,4,-1,-1,-1,-1,5,10,2,5,2,4,4,2,0,-1,-1,-1,-1,-1,-1,-1,3,10,2,3,5,10,3,8,5,4,5,8,0,1,9,-1,5,10,2,5,2,4,1,9,2,9,4,2,-1,-1,-1,-1,8,4,5,8,5,3,3,5,1,-1,-1,-1,-1,-1,-1,-1,0,4,5,1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,4,5,8,5,3,9,0,5,0,3,5,-1,-1,-1,-1,9,4,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,11,7,4,9,11,9,10,11,-1,-1,-1,-1,-1,-1,-1,0,8,3,4,9,7,9,11,7,9,10,11,-1,-1,-1,-1,1,10,11,1,11,4,1,4,0,7,4,11,-1,-1,-1,-1,3,1,4,3,4,8,1,10,4,7,4,11,10,11,4,-1,4,11,7,9,11,4,9,2,11,9,1,2,-1,-1,-1,-1,9,7,4,9,11,7,9,1,11,2,11,1,0,8,3,-1,11,7,4,11,4,2,2,4,0,-1,-1,-1,-1,-1,-1,-1,11,7,4,11,4,2,8,3,4,3,2,4,-1,-1,-1,-1,2,9,10,2,7,9,2,3,7,7,4,9,-1,-1,-1,-1,9,10,7,9,7,4,10,2,7,8,7,0,2,0,7,-1,3,7,10,3,10,2,7,4,10,1,10,0,4,0,10,-1,1,10,2,8,7,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,9,1,4,1,7,7,1,3,-1,-1,-1,-1,-1,-1,-1,4,9,1,4,1,7,0,8,1,8,7,1,-1,-1,-1,-1,4,0,3,7,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,8,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,10,8,10,11,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,9,3,9,11,11,9,10,-1,-1,-1,-1,-1,-1,-1,0,1,10,0,10,8,8,10,11,-1,-1,-1,-1,-1,-1,-1,3,1,10,11,3,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,11,1,11,9,9,11,8,-1,-1,-1,-1,-1,-1,-1,3,0,9,3,9,11,1,2,9,2,11,9,-1,-1,-1,-1,0,2,11,8,0,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,2,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,8,2,8,10,10,8,9,-1,-1,-1,-1,-1,-1,-1,9,10,2,0,9,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,8,2,8,10,0,1,8,1,10,8,-1,-1,-1,-1,1,10,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,3,8,9,1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,9,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,3,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1]);THREE.MarchingCubes=t,THREE.edgeTable=e,THREE.triTable=i})();